

----STARTUP---- (14 November 2020 15:40:35) as /home/franco/Documents/smallTalk/linux64/CuisUniversity-4383.image!

!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:40:57'!
test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary first equals: 'Extracci\F3n por 50'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:43:19' prior: 50353279!
test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 20 on: sendingAccount  to: receivingAccount.
	
	report := Report for: sendingAccount .
	
	
	self assert: report accountsSummary first equals: 'Extracci\F3n por 50'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:43:39' prior: 50353292!
test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 20 on: sendingAccount  to: receivingAccount.
	
	report := Report for: sendingAccount .
	
	
	self assert: report accountsSummary first equals: 'Extracción por 50'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:43:51' prior: 50353307!
test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 20 on: sendingAccount  to: receivingAccount.
	
	report := Report for: sendingAccount .
	
	
	self assert: report accountsSummary first equals: 'Salida por transferencia de 20'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:43:58' prior: 50353018!
test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary first equals: 'Extracción por 50'.! !

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:44:00'!
FAILURE!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:44:00'!
FAILURE!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:44:11' prior: 50352958!
test02AccountSummaryOfAPortfolioWithADepositAddsIt

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary first equals: 'Depósito por 100'.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:44:26' prior: 50353005!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	
	^OrderedCollection with: 'Extracción por 50'.	
	! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:44:29'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:44:29'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:44:29'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:44:29'!
FAILURE!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:44:29'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:45:45' prior: 50353372!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Entrada por transferencia de 30'.		].
	
	
	! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:46:30'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:46:30'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:46:30'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:46:30'!
FAILURE!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:46:30'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:46:48' prior: 50353404!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	
	
	! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:46:50'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:46:50'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:46:50'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:46:50'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:47:06'!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 20 on: sendingAccount  to: receivingAccount.
	
	report := Report for: sendingAccount .
	
	
	self assert: report accountsSummary first equals: 'Salida por transferencia de 30'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:47:30' prior: 50353475!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 30 on: sendingAccount  to: receivingAccount.
	
	report := Report for: receivingAccount .
	
	
	self assert: report accountsSummary first equals: 'Entrada por transferencia de 30'.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:47:32'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:47:32'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:47:32'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:47:32'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:47:32'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:47:32'!
ERROR!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:48:24' prior: 50353442!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [^OrderedCollection with: '	Entrada por transferencia de 30'.		].

	
	! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:48:34'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:48:34'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:48:34'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:48:34'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:48:34'!
FAILURE!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:48:34'!
FAILURE!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:49:01' prior: 50353491!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 30 on: sendingAccount  to: receivingAccount.
	
	report := Report for: receivingAccount .
	
	
	self assert: report accountsSummary first equals: 'Entrada por transferencia de 30'.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:49:04'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:49:04'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:49:04'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:49:04'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:49:04'!
FAILURE!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:49:04'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:49:45' prior: 50353529!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [^OrderedCollection with: '	Entrada por transferencia de 30'.		].

	
	! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:49:47'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:49:47'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:49:47'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:49:47'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:49:47'!
FAILURE!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:49:47'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:50:04' prior: 50353613!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [^OrderedCollection with: 'hola'.		].

	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:50:12' prior: 50353575!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 30 on: sendingAccount  to: receivingAccount.
	
	report := Report for: receivingAccount .
	
	
	self assert: report accountsSummary first equals: 'hola'.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:50:14'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:50:14'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:50:14'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:50:14'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:50:14'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:50:28' prior: 50353682!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 30 on: sendingAccount  to: receivingAccount.
	
	report := Report for: receivingAccount .
	
	
	self assert: report accountsSummary first equals: 'Entrada por transferencia de 30'.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:50:39' prior: 50353659!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [^OrderedCollection with: 'Entrada por transferencia de 30'.		].

	
	! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:50:41'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:50:41'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:50:41'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:50:41'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:50:41'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:53:10'!
test06AccountSummaryShowsTheBalance

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary last equals: 'Balance = ', portfolio balance.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:53:13'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:53:13'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:53:13'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:53:13'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:53:13'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 15:53:13'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 15:53:13'!
ERROR!

'hola'+'chau'!

'hola','chau'!

'hola',2!

'hola',2 printString.!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:54:23' prior: 50353774!
test06AccountSummaryShowsTheBalance

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary last equals: 'Balance = ', portfolio balance printString.! !

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 15:54:25'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:57:30' prior: 50353732!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [^OrderedCollection with: 'Entrada por transferencia de 30'.		].
		].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:57:51'!
test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance

	| report | 
	
	report := Report for: Portfolio new.
	
	self assert: report accountsSummary isEmpty.! !

!methodRemoval: ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 15:57:51'!
test01AccountSummaryOfAnEmptyPortfolioIsEmpty

	| report | 
	
	report := Report for: Portfolio new.
	
	self assert: report accountsSummary isEmpty.!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:58:26' prior: 50353856!
test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance

	| report | 
	
	report := Report for: Portfolio new.
	
	self assert: report accountsSummary size equals: 1.
	self assert: report accountsSummary first equals: 'Balance = 0'.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 15:58:28'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:58:28'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:58:28'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:58:28'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:58:28'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 15:58:28'!
FAILURE!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 15:58:28'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:59:31' prior: 50353830!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
	(account transactions first isKindOf: Deposit) ifTrue: [summary add: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [summary add: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [summary add: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [summary add: 'Entrada por transferencia de 30'.		].
		].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.
	
	! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 15:59:33'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 15:59:33'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 15:59:33'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 15:59:33'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 15:59:33'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 15:59:33'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:03:30'!
test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary size equals: 3.
	self assert: report accountsSummary first equals: 'Depósito por 50'.
	self assert: report accountsSummary second equals: 'Extracción por 30'.
	self assert: report accountsSummary last equals: 'Balance = 20'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:03:39' prior: 50353814!
test06AccountSummaryShowsTheBalance

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary last equals: 'Balance = 100'.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:03:40'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:03:40'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:03:40'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:03:40'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:03:40'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:03:40'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:03:40'!
FAILURE!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:03:40'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:04:53' prior: 50353908!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por 100'.	].
	(transaction isKindOf: Withdraw)  ifTrue: [summary add: 'Extracción por 50'.		].
	(transaction isKindOf: TransferSending)  ifTrue: [summary add: 'Salida por transferencia de 20'.		].
	(transaction isKindOf: TransferReception )  ifTrue: [summary add: 'Entrada por transferencia de 30'.		].
		].
	].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:04:55'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:04:55'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:04:55'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:04:55'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:04:55'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:04:55'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:04:55'!
FAILURE!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:04:55'!
FAILURE!
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:05:41' overrides: 16881508!
value
	
	^ amount.! !
!TransferSending methodsFor: 'nil' stamp: 'FD 11/14/2020 16:05:52' overrides: 16881508!
value

	^amount.! !
!Transfer methodsFor: 'nil' stamp: 'FD 11/14/2020 16:06:00' overrides: 16881508!
value

	self shouldBeImplemented .! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:06:34' prior: 50354019!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ', transaction value printString.	].
	(transaction isKindOf: Withdraw)  ifTrue: [summary add: 'Extracción por ', transaction value printString.		].
	(transaction isKindOf: TransferSending)  ifTrue: [summary add: 'Salida por transferencia de ', transaction value printString.		].
	(transaction isKindOf: TransferReception )  ifTrue: [summary add: 'Entrada por transferencia de ', transaction value printString.		].
		].
	].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:06:36'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:06:36'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:06:36'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:06:36'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:06:36'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:06:36'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:06:36'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:17:44'!
test08NetTransferReportForAnAccountWithoutTransfersReturnsZero

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report netTransferReport equals: 0.! !

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 16:17:47'!
ERROR!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:17:57'!
netTransferReport
	self shouldBeImplemented.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:18:02' prior: 50354159!
netTransferReport
	^0! !

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 16:18:04'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:18:04'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:18:04'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:18:04'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:18:04'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:18:04'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:18:04'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:18:04'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 16:18:04'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:18:32'!
test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report netTransferReport equals: 0.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:19:41' prior: 50354202!
test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue

	| report account1 account2 | 
	
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer register: 30 on: account1  to: account2.
	Transfer register: 40 on: account2  to: account1.
	
	report := Report for: account1 .
	
	self assert: report netTransferReport equals: 10.! !

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:19:47'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:20:22' prior: 50354164!
netTransferReport
	
	account transactions.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:21:42' prior: 50354235!
netTransferReport
	
		
	| netTransferValue |
	
	netTransferValue := 0.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: TransferSending)  ifTrue: [netTransferValue + transaction value.		].
	(transaction isKindOf: TransferReception )  ifTrue: [netTransferValue + transaction value.		].
		].
	].
	
	^netTransferValue.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:21:44'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:21:44'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:21:44'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:21:44'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:21:44'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:21:44'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:21:44'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 16:21:44'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:21:44'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:21:44'!
FAILURE!

----STARTUP---- (14 November 2020 16:24:44) as /home/franco/Documents/smallTalk/linux64/CuisUniversity-4383.image!

!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:40:57'!
test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary first equals: 'Extracci\F3n por 50'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:43:19' prior: 50354297!
test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 20 on: sendingAccount  to: receivingAccount.
	
	report := Report for: sendingAccount .
	
	
	self assert: report accountsSummary first equals: 'Extracci\F3n por 50'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:43:39' prior: 50354310!
test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 20 on: sendingAccount  to: receivingAccount.
	
	report := Report for: sendingAccount .
	
	
	self assert: report accountsSummary first equals: 'Extracción por 50'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:43:51' prior: 50354325!
test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 20 on: sendingAccount  to: receivingAccount.
	
	report := Report for: sendingAccount .
	
	
	self assert: report accountsSummary first equals: 'Salida por transferencia de 20'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:43:58' prior: 50353018!
test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary first equals: 'Extracción por 50'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:44:11' prior: 50352958!
test02AccountSummaryOfAPortfolioWithADepositAddsIt

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary first equals: 'Depósito por 100'.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:44:26' prior: 50353005!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	
	^OrderedCollection with: 'Extracción por 50'.	
	! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:45:45' prior: 50354382!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Entrada por transferencia de 30'.		].
	
	
	! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:46:48' prior: 50354395!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:47:06'!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 20 on: sendingAccount  to: receivingAccount.
	
	report := Report for: sendingAccount .
	
	
	self assert: report accountsSummary first equals: 'Salida por transferencia de 30'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:47:30' prior: 50354433!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 30 on: sendingAccount  to: receivingAccount.
	
	report := Report for: receivingAccount .
	
	
	self assert: report accountsSummary first equals: 'Entrada por transferencia de 30'.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:48:24' prior: 50354414!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [^OrderedCollection with: '	Entrada por transferencia de 30'.		].

	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:49:01' prior: 50354449!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 30 on: sendingAccount  to: receivingAccount.
	
	report := Report for: receivingAccount .
	
	
	self assert: report accountsSummary first equals: 'Entrada por transferencia de 30'.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:49:45' prior: 50354465!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [^OrderedCollection with: '	Entrada por transferencia de 30'.		].

	
	! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:50:04' prior: 50354504!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [^OrderedCollection with: 'hola'.		].

	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:50:12' prior: 50354488!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 30 on: sendingAccount  to: receivingAccount.
	
	report := Report for: receivingAccount .
	
	
	self assert: report accountsSummary first equals: 'hola'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:50:28' prior: 50354550!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| report sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 30 on: sendingAccount  to: receivingAccount.
	
	report := Report for: receivingAccount .
	
	
	self assert: report accountsSummary first equals: 'Entrada por transferencia de 30'.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:50:39' prior: 50354527!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	account transactions isEmpty ifTrue: [^OrderedCollection new].
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [^OrderedCollection with: 'Entrada por transferencia de 30'.		].

	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:53:10'!
test06AccountSummaryShowsTheBalance

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary last equals: 'Balance = ', portfolio balance.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:54:23' prior: 50354604!
test06AccountSummaryShowsTheBalance

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary last equals: 'Balance = ', portfolio balance printString.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:57:30' prior: 50354581!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
	(account transactions first isKindOf: Deposit) ifTrue: [^OrderedCollection with: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [^OrderedCollection with: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [^OrderedCollection with: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [^OrderedCollection with: 'Entrada por transferencia de 30'.		].
		].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:57:51'!
test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance

	| report | 
	
	report := Report for: Portfolio new.
	
	self assert: report accountsSummary isEmpty.! !

!methodRemoval: ReportTest #test01AccountSummaryOfAnEmptyPortfolioIsEmpty stamp: 'FD 11/14/2020 16:24:46'!
test01AccountSummaryOfAnEmptyPortfolioIsEmpty

	| report | 
	
	report := Report for: Portfolio new.
	
	self assert: report accountsSummary isEmpty.!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:58:26' prior: 50354656!
test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance

	| report | 
	
	report := Report for: Portfolio new.
	
	self assert: report accountsSummary size equals: 1.
	self assert: report accountsSummary first equals: 'Balance = 0'.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 15:59:31' prior: 50354630!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
	(account transactions first isKindOf: Deposit) ifTrue: [summary add: 'Depósito por 100'.	].
	(account transactions first isKindOf: Withdraw)  ifTrue: [summary add: 'Extracción por 50'.		].
	(account transactions first isKindOf: TransferSending)  ifTrue: [summary add: 'Salida por transferencia de 20'.		].
	(account transactions first isKindOf: TransferReception )  ifTrue: [summary add: 'Entrada por transferencia de 30'.		].
		].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:03:30'!
test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary size equals: 3.
	self assert: report accountsSummary first equals: 'Depósito por 50'.
	self assert: report accountsSummary second equals: 'Extracción por 30'.
	self assert: report accountsSummary last equals: 'Balance = 20'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:03:39' prior: 50354617!
test06AccountSummaryShowsTheBalance

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report accountsSummary last equals: 'Balance = 100'.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:04:53' prior: 50354683!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por 100'.	].
	(transaction isKindOf: Withdraw)  ifTrue: [summary add: 'Extracción por 50'.		].
	(transaction isKindOf: TransferSending)  ifTrue: [summary add: 'Salida por transferencia de 20'.		].
	(transaction isKindOf: TransferReception )  ifTrue: [summary add: 'Entrada por transferencia de 30'.		].
		].
	].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:05:41' overrides: 16881508!
value
	
	^ amount.! !
!TransferSending methodsFor: 'nil' stamp: 'FD 11/14/2020 16:05:52' overrides: 16881508!
value

	^amount.! !
!Transfer methodsFor: 'nil' stamp: 'FD 11/14/2020 16:06:00' overrides: 16881508!
value

	self shouldBeImplemented .! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:06:34' prior: 50354741!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ', transaction value printString.	].
	(transaction isKindOf: Withdraw)  ifTrue: [summary add: 'Extracción por ', transaction value printString.		].
	(transaction isKindOf: TransferSending)  ifTrue: [summary add: 'Salida por transferencia de ', transaction value printString.		].
	(transaction isKindOf: TransferReception )  ifTrue: [summary add: 'Entrada por transferencia de ', transaction value printString.		].
		].
	].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:17:44'!
test08NetTransferReportForAnAccountWithoutTransfersReturnsZero

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report netTransferReport equals: 0.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:17:57'!
netTransferReport
	self shouldBeImplemented.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:18:02' prior: 50354820!
netTransferReport
	^0! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:18:32'!
test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	report := Report for: portfolio.
	
	self assert: report netTransferReport equals: 0.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:19:41' prior: 50354829!
test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue

	| report account1 account2 | 
	
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer register: 30 on: account1  to: account2.
	Transfer register: 40 on: account2  to: account1.
	
	report := Report for: account1 .
	
	self assert: report netTransferReport equals: 10.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:20:22' prior: 50354825!
netTransferReport
	
	account transactions.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:21:42' prior: 50354858!
netTransferReport
	
		
	| netTransferValue |
	
	netTransferValue := 0.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: TransferSending)  ifTrue: [netTransferValue + transaction value.		].
	(transaction isKindOf: TransferReception )  ifTrue: [netTransferValue + transaction value.		].
		].
	].
	
	^netTransferValue.! !

----SNAPSHOT----(14 November 2020 16:25:04) CuisUniversity-4383.image priorSource: 691894!

----STARTUP---- (14 November 2020 16:25:28) as /home/franco/Documents/smallTalk/linux64/CuisUniversity-4383.image!


!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:25:34'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:25:34'!
FAILURE!

Transfer subclass: #TransferReception
	instanceVariableNames: 'value transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!Transfer methodsFor: 'nil' stamp: 'FD 11/14/2020 16:27:55' prior: 50354774 overrides: 16881508!
value

	self subclassResponsibility .! !
!Transfer class methodsFor: 'instance creation' stamp: 'FD 11/14/2020 16:29:19' prior: 50333396!
register: anAmount on: aSenderAccount to: aReceiverAccount 
	
	
	| sending reception |
	
	aSenderAccount = aReceiverAccount ifTrue: [self error: self accountsMustBeDifferentErrorDescription ].
	anAmount <= 0 ifTrue: [self error: self amountShouldBeGreaterThanZeroErrorDescription ].
	
	sending := TransferSending new initializeFor: anAmount from: self.
	reception := TransferReception new initializeFor: anAmount from: self.

	aSenderAccount register: sending.
	aReceiverAccount register: reception.
	! !

!methodRemoval: Transfer #initializeFor:withSending:withReception: stamp: 'FD 11/14/2020 16:29:26'!
initializeFor: anAmount withSending: aTransferSending withReception: aTransferReception 
	
	
	value := anAmount.
	sending := aTransferSending.
	reception := aTransferReception.!

Object subclass: #Transfer
	instanceVariableNames: 'sending reception'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #Transfer category: 'Portfolio' stamp: 'FD 11/14/2020 16:29:30'!
Object subclass: #Transfer
	instanceVariableNames: 'sending reception'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!Transfer methodsFor: 'accessing' stamp: 'FD 11/14/2020 16:29:59'!
otherEnd

	self subclassResponsibility .! !

!methodRemoval: Transfer #sending stamp: 'FD 11/14/2020 16:30:05'!
sending
	
	^sending!

!methodRemoval: Transfer #reception stamp: 'FD 11/14/2020 16:30:07'!
reception
	
	^reception!

!classDefinition: #TransferReception category: 'Portfolio' stamp: 'FD 11/14/2020 16:31:22'!
Transfer subclass: #TransferReception
	instanceVariableNames: 'amount transfer otherEnd'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!TransferReception methodsFor: 'initialization' stamp: 'FD 11/14/2020 16:31:20'!
initializeFor: anAmount otherEnd: aTransferSending

	amount := anAmount.
	otherEnd := aTransferSending.! !

!methodRemoval: TransferReception #initializeFor:from: stamp: 'FD 11/14/2020 16:31:25'!
initializeFor: anAmount from: aTransfer

	amount := anAmount.
	transfer := aTransfer!

!classDefinition: #TransferSending category: 'Portfolio' stamp: 'FD 11/14/2020 16:31:51'!
Transfer subclass: #TransferSending
	instanceVariableNames: 'amount transfer otherEnd'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!TransferSending methodsFor: 'initialization' stamp: 'FD 11/14/2020 16:31:50'!
initializeFor: anAmount otherEnd: aTransferReception

	amount := anAmount.
	otherEnd := aTransferReception .! !

!methodRemoval: TransferSending #initializeFor:from: stamp: 'FD 11/14/2020 16:31:54'!
initializeFor: anAmount from: aTransfer

	amount := anAmount.
	transfer := aTransfer!
!Transfer class methodsFor: 'instance creation' stamp: 'FD 11/14/2020 16:32:57' prior: 50354903!
register: anAmount on: aSenderAccount to: aReceiverAccount 
	
	
	| sending reception |
	
	aSenderAccount = aReceiverAccount ifTrue: [self error: self accountsMustBeDifferentErrorDescription ].
	anAmount <= 0 ifTrue: [self error: self amountShouldBeGreaterThanZeroErrorDescription ].
	
	sending := TransferSending new initializeFor: anAmount otherEnd: reception.
	reception := TransferReception new initializeFor: anAmount otherEnd: sending.

	aSenderAccount register: sending.
	aReceiverAccount register: reception.
	! !
!Transfer class methodsFor: 'instance creation' stamp: 'FD 11/14/2020 16:34:13' prior: 50354992!
register: anAmount on: aSenderAccount to: aReceiverAccount 
	
	
	| sending reception |
	
	aSenderAccount = aReceiverAccount ifTrue: [self error: self accountsMustBeDifferentErrorDescription ].
	anAmount <= 0 ifTrue: [self error: self amountShouldBeGreaterThanZeroErrorDescription ].
	
	sending := TransferSending new.
	reception := TransferReception new.
	
	sending := sending initializeFor: anAmount otherEnd: reception.
	reception := reception initializeFor: anAmount otherEnd: sending.

	aSenderAccount register: sending.
	aReceiverAccount register: reception.
	! !

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:34:33'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 16:34:33'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 16:34:33'!
ERROR!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 16:34:33'!
ERROR!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 16:34:33'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 16:34:33'!
PASSED!

----End fileIn of /home/franco/Documents/smallTalk/linux64/Portfolio.st----!

!methodRemoval: Transfer #otherEnd stamp: 'FD 11/14/2020 16:36:36'!
otherEnd

	self subclassResponsibility .!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:36:59'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 16:36:59'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 16:36:59'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 16:36:59'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 16:36:59'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 16:36:59'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:37:01'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:37:01'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:37:01'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:37:01'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:37:01'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:37:01'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:37:01'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 16:37:01'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:37:01'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:37:01'!
FAILURE!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:37:17'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:37:17'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:37:17'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:37:17'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:37:17'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:37:17'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:37:17'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 16:37:17'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:37:17'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:37:17'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:38:27' prior: 50356066!
netTransferReport
	
		
	| netTransferValue |
	
	netTransferValue := 0.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: TransferSending)  ifTrue: [netTransferValue := netTransferValue + transaction value.		].
	(transaction isKindOf: TransferReception )  ifTrue: [netTransferValue := netTransferValue + transaction value.		].
		].
	].
	
	^netTransferValue.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:38:29'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:38:29'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:38:29'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:38:29'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:38:29'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:38:29'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:38:29'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 16:38:29'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:38:29'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:38:29'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:38:38' prior: 50356335!
netTransferReport
	
		
	| netTransferValue |
	
	netTransferValue := 0.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: TransferSending)  ifTrue: [netTransferValue := netTransferValue + transaction value.		].
	(transaction isKindOf: TransferReception )  ifTrue: [netTransferValue := netTransferValue - transaction value.		].
		].
	].
	
	^netTransferValue.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:38:39'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:38:39'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:38:39'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:38:39'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:38:39'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:38:39'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:38:39'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 16:38:39'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:38:39'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:38:39'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:38:47' prior: 50356390!
netTransferReport
	
		
	| netTransferValue |
	
	netTransferValue := 0.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: TransferSending)  ifTrue: [netTransferValue := netTransferValue - transaction value.		].
	(transaction isKindOf: TransferReception )  ifTrue: [netTransferValue := netTransferValue + transaction value.		].
		].
	].
	
	^netTransferValue.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:38:48'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:38:48'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:38:48'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:38:48'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:38:48'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:38:48'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:38:48'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 16:38:48'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:38:48'!
PASSED!
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:39:37' prior: 50356194!
affectBalance: aBalance 
	
	^ aBalance + value.! !
!TransferReception methodsFor: 'initialization' stamp: 'FD 11/14/2020 16:40:14' prior: 50356188!
initializeFor: anAmount from: aTransfer

	value := anAmount.
	transfer := aTransfer! !

!methodRemoval: TransferReception #initializeFor:otherEnd: stamp: 'FD 11/14/2020 16:40:17'!
initializeFor: anAmount otherEnd: aTransferSending

	amount := anAmount.
	otherEnd := aTransferSending.!
!TransferSending methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:40:23' prior: 50356222!
affectBalance: aBalance 
	^aBalance - value .! !
!TransferSending methodsFor: 'initialization' stamp: 'FD 11/14/2020 16:40:32' prior: 50356216!
initializeFor: anAmount from: aTransfer

	value := anAmount.
	transfer := aTransfer! !

!methodRemoval: TransferSending #initializeFor:otherEnd: stamp: 'FD 11/14/2020 16:40:36'!
initializeFor: anAmount otherEnd: aTransferReception

	amount := anAmount.
	otherEnd := aTransferReception .!
!TransferSending methodsFor: 'nil' stamp: 'FD 11/14/2020 16:40:51' prior: 50356227 overrides: 50356129!
value

	^value.! !
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:40:59' prior: 50356200 overrides: 50356129!
value
	
	^ value.! !
!Transfer methodsFor: 'nil' stamp: 'FD 11/14/2020 16:41:12' prior: 50356129 overrides: 16881508!
value

	^value.! !

!methodRemoval: TransferReception #value stamp: 'FD 11/14/2020 16:41:35'!
value
	
	^ value.!

!methodRemoval: TransferSending #value stamp: 'FD 11/14/2020 16:41:39'!
value

	^value.!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:41:42'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 16:41:42'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 16:41:42'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 16:41:42'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 16:41:42'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 16:41:42'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 16:42:49'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 16:42:49'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 16:42:49'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 16:42:49'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 16:42:49'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 16:42:49'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 16:42:49'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 16:42:49'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 16:42:49'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:42:51'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 16:42:51'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 16:42:51'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 16:42:51'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 16:42:51'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 16:42:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 16:42:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 16:42:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 16:42:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 16:42:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 16:42:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 16:42:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 16:42:55'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 16:42:57'!
PASSED!

!classDefinition: #TransferEnd category: 'Portfolio' stamp: 'FD 11/14/2020 16:45:58'!
Object subclass: #TransferEnd
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

TransferEnd subclass: #TransferReception
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #TransferReception category: 'Portfolio' stamp: 'FD 11/14/2020 16:45:58'!
TransferEnd subclass: #TransferReception
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

TransferEnd subclass: #TransferSending
	instanceVariableNames: 'amount transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #TransferSending category: 'Portfolio' stamp: 'FD 11/14/2020 16:46:09'!
TransferEnd subclass: #TransferSending
	instanceVariableNames: 'amount transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!methodRemoval: Transfer #affectBalance:for: stamp: 'FD 11/14/2020 16:47:20'!
affectBalance: aBalance for: anAccount

	^anAccount = sender ifTrue: [aBalance - value] ifFalse: [
		anAccount = receiver ifTrue: [aBalance + value]
		]!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:47:23'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 16:47:23'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 16:47:23'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 16:47:23'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 16:47:23'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 16:47:23'!
PASSED!
!Transfer class methodsFor: 'instance creation' stamp: 'FD 11/14/2020 16:48:17' prior: 50356153!
register: anAmount on: aSenderAccount to: aReceiverAccount 
	
	
	| transaction sending reception |
	
	aSenderAccount = aReceiverAccount ifTrue: [self error: self accountsMustBeDifferentErrorDescription ].
	anAmount <= 0 ifTrue: [self error: self amountShouldBeGreaterThanZeroErrorDescription ].
	
	sending := TransferSending new initializeFrom: self.
	reception := TransferReception new initializeFrom: self.
	transaction := self new initializeFor: anAmount withSending: sending withReception: reception.

	
	aSenderAccount register: sending.
	aReceiverAccount register: reception.
	
	^ transaction! !
!TransferReception methodsFor: 'initialization' stamp: 'FD 11/14/2020 16:48:48'!
initializeFrom: aTransfer

	transfer := aTransfer ! !

!methodRemoval: TransferReception #initializeFor:from: stamp: 'FD 11/14/2020 16:48:51'!
initializeFor: anAmount from: aTransfer

	value := anAmount.
	transfer := aTransfer!
!TransferSending methodsFor: 'initialization' stamp: 'FD 11/14/2020 16:49:22'!
initializeFrom: aTransfer

	transfer := aTransfer.! !

!methodRemoval: TransferSending #initializeFor:from: stamp: 'FD 11/14/2020 16:49:24'!
initializeFor: anAmount from: aTransfer

	value := anAmount.
	transfer := aTransfer!
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:49:38' prior: 50356496!
affectBalance: aBalance 
	
	^ aBalance + transfer value.! !
!TransferSending methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:49:52' prior: 50356514!
affectBalance: aBalance 
	^aBalance - transfer value .! !

!methodRemoval: TransferSending #initializeFrom: stamp: 'FD 11/14/2020 16:50:25'!
initializeFrom: aTransfer

	transfer := aTransfer.!

!methodRemoval: TransferReception #initializeFrom: stamp: 'FD 11/14/2020 16:50:28'!
initializeFrom: aTransfer

	transfer := aTransfer !

TransferEnd subclass: #TransferReception
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #TransferReception category: 'Portfolio' stamp: 'FD 11/14/2020 16:50:36'!
TransferEnd subclass: #TransferReception
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

TransferEnd subclass: #TransferSending
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #TransferSending category: 'Portfolio' stamp: 'FD 11/14/2020 16:50:42'!
TransferEnd subclass: #TransferSending
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #TransferEnd category: 'Portfolio' stamp: 'FD 11/14/2020 16:50:50'!
Object subclass: #TransferEnd
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!TransferEnd methodsFor: 'nil' stamp: 'FD 11/14/2020 16:50:49'!
initializeFrom: aTransfer

	transfer := aTransfer.! !

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:50:55'!
ERROR!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 16:50:55'!
ERROR!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 16:50:55'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 16:50:55'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 16:50:55'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 16:50:55'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:51:05'!
ERROR!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:51:34'!
ERROR!

----SNAPSHOT----(14 November 2020 16:52:13) CuisUniversity-4383.image priorSource: 743264!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:52:18'!
ERROR!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 16:52:18'!
ERROR!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 16:52:18'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 16:52:18'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 16:52:18'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 16:52:18'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:52:20'!
ERROR!
!TransferSending methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:53:53' prior: 50356818!
affectBalance: aBalance 

	| ttvalue |
	
	ttvalue := transfer value.
	^aBalance - transfer value .! !
!TransferSending methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:54:13' prior: 50356922!
affectBalance: aBalance 

	^aBalance - transfer value .! !

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:54:14'!
ERROR!
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:55:33' prior: 50356813!
affectBalance: aBalance 
	
	^ aBalance + (transfer value).! !
!TransferSending methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:55:43' prior: 50356929!
affectBalance: aBalance 

	^aBalance - (transfer value) .! !

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:55:46'!
ERROR!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 16:55:46'!
ERROR!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 16:55:46'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 16:55:46'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 16:55:46'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 16:55:46'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:55:49'!
ERROR!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 16:57:09'!
ERROR!

	Transfer value!

	Transfer value!
!Transfer class methodsFor: 'instance creation' stamp: 'FD 11/14/2020 17:00:48' prior: 50356770!
register: anAmount on: aSenderAccount to: aReceiverAccount 
	
	
	| transaction sending reception |
	
	aSenderAccount = aReceiverAccount ifTrue: [self error: self accountsMustBeDifferentErrorDescription ].
	anAmount <= 0 ifTrue: [self error: self amountShouldBeGreaterThanZeroErrorDescription ].
	
	transaction := self new.
	sending := TransferSending new initializeFrom: transaction.
	reception := TransferReception new initializeFrom: transaction.
	transaction := transaction initializeFor: anAmount withSending: sending withReception: reception.

	
	aSenderAccount register: sending.
	aReceiverAccount register: reception.
	
	^ transaction! !

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 17:00:50'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 17:00:50'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 17:00:50'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 17:00:50'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 17:00:50'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 17:00:50'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 17:00:52'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 17:00:52'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 17:00:52'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 17:00:52'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 17:00:52'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 17:00:52'!
PASSED!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:07:27' prior: 50356038!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
			summary := transaction affectSummary: summary.
	(transaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ', transaction value printString.	].
	(transaction isKindOf: Withdraw)  ifTrue: [summary add: 'Extracción por ', transaction value printString.		].
	(transaction isKindOf: TransferSending)  ifTrue: [summary add: 'Salida por transferencia de ', transaction value printString.		].
	(transaction isKindOf: TransferReception )  ifTrue: [summary add: 'Entrada por transferencia de ', transaction value printString.		].
		].
	].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !
!AccountTransaction methodsFor: 'balance' stamp: 'FD 11/14/2020 17:07:56'!
affectSummary: aSummary

	self subclassResponsibility ! !
!Deposit methodsFor: 'balance' stamp: 'FD 11/14/2020 17:08:43' overrides: 50357074!
affectSummary: aSummary

	^aSummary add: 'Depósito por ', self value printString.	! !
!Withdraw methodsFor: 'balance' stamp: 'FD 11/14/2020 17:08:55' overrides: 50357074!
affectSummary: aSummary

	^aSummary add: 'Depósito por ', self value printString.	! !
!Withdraw methodsFor: 'balance' stamp: 'FD 11/14/2020 17:09:25' prior: 50357085 overrides: 50357074!
affectSummary: aSummary

	^aSummary add: 'Extracción por ', self value printString.	! !
!TransferEnd methodsFor: 'nil' stamp: 'FD 11/14/2020 17:09:54'!
affectSummary

	self subclassResponsibility.! !
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:10:10'!
affectSummary: aSummary

	^aSummary add: 'Extracción por ', self value printString.	! !
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:10:22' prior: 50357101!
affectSummary: aSummary

	^aSummary add: 'Salida por transferencia de ', self value printString.	! !
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:10:33' prior: 50357107!
affectSummary: aSummary

	^aSummary add: 'Entrada por transferencia de ', self value printString.	! !
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:10:43' prior: 50357114!
affectSummary: aSummary

	^aSummary add: 'Entrada por transferencia de ', transfer value printString.	! !
!TransferSending methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:10:58'!
affectSummary: aSummary

	^aSummary add: 'Salida por transferencia de ', transfer value printString.	! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:11:10' prior: 50357044!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
			summary := transaction affectSummary: summary.
		].
	].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:11:12'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:11:12'!
ERROR!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:11:12'!
ERROR!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:11:12'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:11:12'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:11:12'!
ERROR!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:11:12'!
ERROR!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:11:12'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:11:12'!
ERROR!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:11:15'!
ERROR!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:13:28'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:13:28'!
ERROR!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:13:28'!
ERROR!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:13:28'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:13:28'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:13:28'!
ERROR!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:13:28'!
ERROR!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:13:28'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:13:28'!
ERROR!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:13:30'!
ERROR!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:16:43' prior: 50357134!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
			transaction affectSummary: summary.
		].
	].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:16:45'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:16:45'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:16:45'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:16:45'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:16:45'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:16:45'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:16:46'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:16:46'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:16:46'!
ERROR!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:16:46'!
ERROR!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:17:08'!
ERROR!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:17:16'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:17:16'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:17:16'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:17:16'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:17:16'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:17:16'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:17:16'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:17:16'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:17:16'!
ERROR!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:17:16'!
ERROR!
!TransferEnd methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:18:52' overrides: 16881508!
value
	^ transfer value.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:19:02'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:19:02'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:19:02'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:19:02'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:19:02'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:19:02'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:19:02'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:19:02'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:19:02'!
PASSED!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:20:49' prior: 50356445!
netTransferReport
	
		
	| transferBalance |
	
	transferBalance := 0.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: TransferSending)  ifTrue: [transferBalance := transferBalance - transaction value.		].
	(transaction isKindOf: TransferReception )  ifTrue: [transferBalance := transferBalance + transaction value.		].
		].
	].
	
	^transferBalance.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:21:18' prior: 50357359!
netTransferReport
	
		
	| transferBalance |
	
	transferBalance := 0.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | transaction affectBalance: transferBalance].
	].
	
	^transferBalance.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:21:26'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:21:26'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:21:26'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:21:27'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:21:27'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:21:27'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:21:27'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:21:27'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:21:27'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:21:27'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:22:45' prior: 50357375!
netTransferReport
	
		^account transactions 
		inject: 0
		into: [ :transferBalance :transaction | transaction affectBalance: transferBalance]
! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:22:47'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:22:47'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:22:47'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:22:47'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:22:47'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:22:47'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:22:47'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:22:47'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:22:47'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:22:47'!
FAILURE!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:22:59'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:22:59'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:22:59'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:22:59'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:22:59'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:22:59'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:22:59'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:22:59'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:22:59'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:22:59'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:21:18' prior: 50357424!
netTransferReport
	
		
	| transferBalance |
	
	transferBalance := 0.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | transaction affectBalance: transferBalance].
	].
	
	^transferBalance.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 16:38:27' prior: 50357509!
netTransferReport
	
		
	| netTransferValue |
	
	netTransferValue := 0.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: TransferSending)  ifTrue: [netTransferValue := netTransferValue + transaction value.		].
	(transaction isKindOf: TransferReception )  ifTrue: [netTransferValue := netTransferValue + transaction value.		].
		].
	].
	
	^netTransferValue.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:23:54'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:23:54'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:23:54'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:23:54'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:23:54'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:23:54'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:23:54'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:23:54'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:23:54'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:23:54'!
FAILURE!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:24:21' prior: 50357520!
netTransferReport
	
		
	| netTransferValue |
	
	netTransferValue := 0.
	
	account transactions isEmpty ifFalse: [
		
		account transactions do: [ :transaction | 
	(transaction isKindOf: TransferSending)  ifTrue: [netTransferValue := netTransferValue - transaction value.		].
	(transaction isKindOf: TransferReception )  ifTrue: [netTransferValue := netTransferValue + transaction value.		].
		].
	].
	
	^netTransferValue.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:24:23'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:24:23'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:24:23'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:24:23'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:24:23'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:24:23'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:24:23'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:24:23'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:24:23'!
PASSED!
!AccountTransaction methodsFor: 'balance' stamp: 'FD 11/14/2020 17:28:40'!
affectNetTransferValue: aNetTransferValue

	^aNetTransferValue.! !
!TransferEnd methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:28:55'!
affectNetTransferValue: aNetTransferValue

	self subclassResponsibility.! !
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:29:43' overrides: 50357630!
affectNetTransferValue: aNetTransferValue

	^aNetTransferValue + transfer value.! !
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:30:19' prior: 50357636 overrides: 50357630!
affectNetTransferValue: aNetTransferValue

	^ self affectBalance: aNetTransferValue.! !

!methodRemoval: TransferReception #affectNetTransferValue: stamp: 'FD 11/14/2020 17:30:23'!
affectNetTransferValue: aNetTransferValue

	^ self affectBalance: aNetTransferValue.!
!TransferEnd methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:30:28' prior: 50357630!
affectNetTransferValue: aNetTransferValue

	^ self affectBalance: aNetTransferValue.! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:31:18' prior: 50357575!
netTransferReport
	
		
	
	^account transactions 
		inject: 0
		into: [ :transferBalance :transaction | transaction affectNetTransferValue: transferBalance]! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:31:22'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:31:22'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:31:22'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:31:22'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:31:22'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:31:22'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:31:22'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:31:22'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:31:22'!
PASSED!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:31:44' prior: 50357224!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.

		account transactions do: [ :transaction | 
			transaction affectSummary: summary.
		].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:31:46'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:31:46'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:31:46'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:31:46'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:31:46'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:31:46'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:31:46'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:31:46'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:31:46'!
PASSED!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:32:12' prior: 50357704!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
	| summary |
	
	summary := OrderedCollection new.

		account transactions do: [ :transaction | transaction affectSummary: summary ].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !

Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountSummary category: 'Portfolio' stamp: 'FD 11/14/2020 17:43:07'!
Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:43:19' prior: 50357751!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
! !

!methodRemoval: Report #accountsSummary stamp: 'FD 11/14/2020 17:43:23'!
accountsSummary

	"Nico dice que el mensaje accounts o transactions no tiene que aparecer"
	
!
!AccountSummary methodsFor: 'nil' stamp: 'FD 11/14/2020 17:44:03'!
report

	| summary |
	
	summary := OrderedCollection new.

	account transactions do: [ :transaction | transaction affectSummary: summary ].
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:45:12' prior: 50355434!
test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance

	| report | 
	
	report := AccountSummary for: Portfolio new.
	
	self assert: report report size equals: 1.
	self assert: report report first equals: 'Balance = 0'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:45:21' prior: 50357796!
test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance

	| summary | 
	
	summary := AccountSummary for: Portfolio new.
	
	self assert: summary report size equals: 1.
	self assert: summary report first equals: 'Balance = 0'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:45:33' prior: 50355445!
test02AccountSummaryOfAPortfolioWithADepositAddsIt

	| summary account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	summary := Report for: portfolio.
	
	self assert: summary accountsSummary first equals: 'Depósito por 100'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:45:42' prior: 50357817!
test02AccountSummaryOfAPortfolioWithADepositAddsIt

	| summary account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	summary := AccountSummary for: portfolio.
	
	self assert: summary report first equals: 'Depósito por 100'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:45:55' prior: 50355458!
test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt

	| summary account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account.
	portfolio := Portfolio with: account.
	
	summary := Report for: portfolio.
	
	self assert: summary accountsSummary first equals: 'Extracción por 50'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:46:00' prior: 50357843!
test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt

	| summary account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account.
	portfolio := Portfolio with: account.
	
	summary := AccountSummary for: portfolio.
	
	self assert: summary report first equals: 'Extracción por 50'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:46:04' prior: 50355471!
test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt

	| summary sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 20 on: sendingAccount  to: receivingAccount.
	
	summary := Report for: sendingAccount .
	
	
	self assert: summary accountsSummary first equals: 'Salida por transferencia de 20'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:46:08' prior: 50357869!
test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt

	| summary sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 20 on: sendingAccount  to: receivingAccount.
	
	summary := AccountSummary for: sendingAccount .
	
	
	self assert: summary report first equals: 'Salida por transferencia de 20'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:46:14' prior: 50355487!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| summary sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 30 on: sendingAccount  to: receivingAccount.
	
	summary := Report for: receivingAccount .
	
	
	self assert: summary accountsSummary first equals: 'Entrada por transferencia de 30'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:46:20' prior: 50357901!
test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt

	| summary sendingAccount receivingAccount | 
	
	
	sendingAccount := ReceptiveAccount new.
	receivingAccount := ReceptiveAccount new.
	
	Transfer register: 30 on: sendingAccount  to: receivingAccount.
	
	summary := AccountSummary for: receivingAccount .
	
	
	self assert: summary report first equals: 'Entrada por transferencia de 30'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:46:31' prior: 50355503!
test06AccountSummaryShowsTheBalance

	| summary account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	summary := AccountSummary for: portfolio.
	
	self assert: summary report last equals: 'Balance = 100'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:46:35' prior: 50355516!
test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll

	| summary account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	summary := Report for: portfolio.
	
	self assert: summary accountsSummary size equals: 3.
	self assert: summary accountsSummary first equals: 'Depósito por 50'.
	self assert: summary accountsSummary second equals: 'Extracción por 30'.
	self assert: summary accountsSummary last equals: 'Balance = 20'.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:47:00' prior: 50357946!
test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll

	| summary account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	summary := AccountSummary for: portfolio.
	
	self assert: summary report size equals: 3.
	self assert: summary report first equals: 'Depósito por 50'.
	self assert: summary report second equals: 'Extracción por 30'.
	self assert: summary report last equals: 'Balance = 20'.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:47:01'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:47:01'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:47:01'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:47:01'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:47:01'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:47:01'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:47:01'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:47:01'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:47:01'!
PASSED!

Report subclass: #NetTransferReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #NetTransferReport category: 'Portfolio' stamp: 'FD 11/14/2020 17:47:19'!
Report subclass: #NetTransferReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!methodRemoval: Report #netTransferReport stamp: 'FD 11/14/2020 17:47:28'!
netTransferReport
	
		
	
	^account transactions 
		inject: 0
		into: [ :transferBalance :transaction | transaction affectNetTransferValue: transferBalance]!
!NetTransferReport methodsFor: 'nil' stamp: 'FD 11/14/2020 17:47:52'!
report
	
	^account transactions 
		inject: 0
		into: [ :transferBalance :transaction | transaction affectNetTransferValue: transferBalance]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:48:16' prior: 50355537!
test08NetTransferReportForAnAccountWithoutTransfersReturnsZero

	| report account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	report := NetTransferReport for: portfolio.
	
	self assert: report report equals: 0.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:48:25' prior: 50358047!
test08NetTransferReportForAnAccountWithoutTransfersReturnsZero

	| netTransferReport account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	netTransferReport := NetTransferReport for: portfolio.
	
	self assert: netTransferReport report equals: 0.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:48:37' prior: 50355551!
test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue

	| netTransferReport account1 account2 | 
	
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer register: 30 on: account1  to: account2.
	Transfer register: 40 on: account2  to: account1.
	
	netTransferReport := Report for: account1 .
	
	self assert: netTransferReport netTransferReport equals: 10.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:48:42' prior: 50358076!
test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue

	| netTransferReport account1 account2 | 
	
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer register: 30 on: account1  to: account2.
	Transfer register: 40 on: account2  to: account1.
	
	netTransferReport := NetTransferReport for: account1 .
	
	self assert: netTransferReport report equals: 10.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:48:43'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:48:43'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:48:43'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:48:43'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:48:43'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:48:43'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:48:43'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:48:43'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:48:43'!
PASSED!
!NetTransferReport methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 17:57:47' prior: 50358039!
report
	
	^account netTransferValue.! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'FD 11/14/2020 17:58:05'!
netTransferValue

	^transactions 
		inject: 0
		into: [ :transferBalance :transaction | transaction affectNetTransferValue: transferBalance]! !
!Portfolio methodsFor: 'balance' stamp: 'FD 11/14/2020 17:59:27'!
netTransferValue 
	
	^accounts sum: [ :anAccount | anAccount netTransferValue ] ifEmpty: [ 0 ]
	! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 17:59:32'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 17:59:32'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 17:59:32'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 17:59:32'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 17:59:32'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 17:59:32'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 17:59:32'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 17:59:32'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 17:59:32'!
PASSED!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:00:50' prior: 50357786!
report

	| summary |
	
	summary := OrderedCollection new.

	account affectSummary: summary.
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'FD 11/14/2020 18:01:19'!
affectSummary: aSummary

		transactions do: [ :transaction | transaction affectSummary: aSummary ].! !
!Portfolio methodsFor: 'balance' stamp: 'FD 11/14/2020 18:01:44'!
affectSummary: aSummary

		accounts do: [ :account | account affectSummary: aSummary ].
	! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:01:51'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:01:51'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:01:51'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:01:51'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:01:51'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:01:51'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:01:51'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:01:51'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:01:51'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'FD 11/14/2020 18:15:21'!
buildReport: aBuildingMethod from: aReportInProgress

	^transactions do: [ :transaction | transaction buildReport: aBuildingMethod from: aReportInProgress].! !
!Portfolio methodsFor: 'balance' stamp: 'FD 11/14/2020 18:15:57'!
buildReport: aBuildingMethod from: aReportInProgress

	^accounts do: [ :account | account buildReport: aBuildingMethod from: aReportInProgress].! !
!Deposit methodsFor: 'balance' stamp: 'FD 11/14/2020 18:18:26'!
buildReport: aBuildingMethod from: aReportInProgress

	^aBuildingMethod affectReportFromDeposit: aReportInProgress.

"affectSummary: aSummary

	^aSummary add: 'Depósito por ', self value printString.	"! !
!Deposit methodsFor: 'balance' stamp: 'FD 11/14/2020 18:18:47' prior: 50358264!
buildReport: aBuildingMethod from: aReportInProgress

	^aBuildingMethod affectReportFromDeposit: aReportInProgress.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:20:08'!
affectReport: aReportInProgress FromDeposit: aDeposit

	^aReportInProgress add: 'Depósito por ', aDeposit value printString.	! !
!Deposit methodsFor: 'balance' stamp: 'FD 11/14/2020 18:20:20' prior: 50358273!
buildReport: aBuildingMethod from: aReportInProgress

	^aBuildingMethod affectReport: aReportInProgress FromDeposit: self.! !
!Withdraw methodsFor: 'balance' stamp: 'FD 11/14/2020 18:21:08'!
buildReport: aBuildingMethod from: aReportInProgress

	^aBuildingMethod affectReport: aReportInProgress FromWithdraw: self.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:21:39'!
affectReport: aReportInProgress FromWithdraw: aDeposit

	^aReportInProgress add: 'Depósito por ', aDeposit value printString.	! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:21:45' prior: 50358300!
affectReport: aReportInProgress FromWithdraw: aWithdraw

	^aReportInProgress add: 'Depósito por ', aWithdraw value printString.	! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:22:08' prior: 50358308!
affectReport: aReportInProgress FromWithdraw: aWithdraw

	^aReportInProgress add: 'Extracción por ', aWithdraw value printString.	! !
!TransferReception methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:22:41'!
buildReport: aBuildingMethod from: aReportInProgress

	^aBuildingMethod affectReport: aReportInProgress FromTransferReception: self.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:22:56'!
affectReport: aReportInProgress FromTransferReception: aWithdraw

	^aReportInProgress add: 'Extracción por ', aWithdraw value printString.	! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:23:20' prior: 50358330!
affectReport: aReportInProgress FromTransferReception: aTransferReception

	^aReportInProgress add: 'Entrada por transferencia de ', aTransferReception value printString.	! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:23:38'!
affectReport: aReportInProgress FromTransferSending: aTransferSending

	^aReportInProgress add: 'Entrada por transferencia de ', aTransferSending value printString.	! !
!TransferSending methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:24:33'!
buildReport: aBuildingMethod from: aReportInProgress

	^aBuildingMethod affectReport: aReportInProgress FromTransferSending: self.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:24:48' prior: 50358347!
affectReport: aReportInProgress FromTransferSending: aTransferSending

	^aReportInProgress add: 'Salida por transferencia de ', aTransferSending value printString.	! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:25:03'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:25:03'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:25:03'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:25:03'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:25:03'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:25:03'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:25:03'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:25:03'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:25:03'!
PASSED!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:25:39' prior: 50358195!
report

	| summary |
	
	summary := OrderedCollection new.

	account buildReport: self from: summary.
	
	summary add: ('Balance = ', account balance printString ).
	
	^summary.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:25:42'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:25:42'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:25:42'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:25:42'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:25:42'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:25:42'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:25:42'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:25:42'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:25:42'!
PASSED!
!NetTransferReport methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:26:57' prior: 50358143!
report
	
	^account netTransferValue.! !
!NetTransferReport methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:27:13'!
affectReport: aReportInProgress FromWithdraw: aWithdraw
	
	^aReportInProgress.! !
!NetTransferReport methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:27:25'!
affectReport: aReportInProgress FromDeposit: aDeposit
	
	^aReportInProgress.! !
!NetTransferReport methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:27:54'!
affectReport: aReportInProgress FromTransferSending: aTransferSending
	
	^aReportInProgress - aTransferSending value.! !
!NetTransferReport methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:28:10'!
affectReport: aReportInProgress FromTransferReception: aTransferReception
	
	^aReportInProgress + aTransferReception value.! !
!NetTransferReport methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:28:26' prior: 50358450!
report
	
	^account buildReport: self from: 0.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:28:28'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:28:28'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:28:28'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:28:28'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:28:28'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:28:28'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:28:28'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:28:28'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:28:28'!
FAILURE!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:28:40'!
FAILURE!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:31:09'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:31:09'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:31:09'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:31:09'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:31:09'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:31:09'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:31:09'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:31:09'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:31:09'!
FAILURE!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:31:13'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'FD 11/14/2020 18:32:48' prior: 50358257!
buildReport: aBuildingMethod from: aReportInProgress

	accounts do: [ :account | account buildReport: aBuildingMethod from: aReportInProgress].
	
	^aReportInProgress! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'FD 11/14/2020 18:33:03' prior: 50358249!
buildReport: aBuildingMethod from: aReportInProgress

	transactions do: [ :transaction | transaction buildReport: aBuildingMethod from: aReportInProgress].
	
	^aReportInProgress.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:33:10'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:33:10'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:33:10'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:33:10'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:33:10'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:33:10'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:33:10'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:33:10'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:33:10'!
FAILURE!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:33:10'!
FAILURE!
!NetTransferReport methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:35:11' prior: 50358473!
affectReport: aReportInProgress FromTransferReception: aTransferReception
	
	^aReportInProgress + aTransferReception value.! !

----End fileIn of /home/franco/Documents/smallTalk/linux64/Packages/TerseGuide.pck.st----!
!ReceptiveAccount methodsFor: 'balance' stamp: 'FD 11/14/2020 18:38:40' prior: 50358571!
buildReport: aBuildingMethod from: aStartingPoint

	^transactions
	inject: aStartingPoint 
	into: [:report :transaction | transaction buildReport: aBuildingMethod from: report].! !
!Portfolio methodsFor: 'balance' stamp: 'FD 11/14/2020 18:38:53' prior: 50358562!
buildReport: aBuildingMethod from: aStartingPoint

	^accounts
	inject: aStartingPoint 
	into: [:report :transaction | transaction buildReport: aBuildingMethod from: report].! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 18:38:55'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:38:58'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:38:58'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:38:58'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:38:58'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:38:58'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:38:58'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:38:58'!
ERROR!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:38:58'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:38:58'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:38:58'!
ERROR!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:39:04'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:39:04'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:39:04'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:39:04'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:39:04'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:39:04'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:39:04'!
ERROR!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:39:04'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:39:04'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:39:04'!
ERROR!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:39:25'!
ERROR!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:40:47'!
ERROR!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:45:44' prior: 50358280!
affectReport: aReportInProgress FromDeposit: aDeposit

	aReportInProgress add: 'Depósito por ', aDeposit value printString.	
	
	^aReportInProgress.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:45:55' prior: 50358338!
affectReport: aReportInProgress FromTransferReception: aTransferReception

	aReportInProgress add: 'Entrada por transferencia de ', aTransferReception value printString.	
	
	^aReportInProgress.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:46:01' prior: 50358363!
affectReport: aReportInProgress FromTransferSending: aTransferSending

	aReportInProgress add: 'Salida por transferencia de ', aTransferSending value printString.	
	
	^aReportInProgress.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 18:46:07' prior: 50358316!
affectReport: aReportInProgress FromWithdraw: aWithdraw

	aReportInProgress add: 'Extracción por ', aWithdraw value printString.	
	
	^aReportInProgress.! !

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:46:11'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:46:11'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:46:11'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:46:11'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:46:11'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:46:11'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:46:11'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:46:11'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:46:11'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:46:14'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:46:14'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:46:14'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:46:14'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:46:14'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:46:14'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:46:14'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:46:14'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:46:14'!
PASSED!
!Account methodsFor: 'balance' stamp: 'FD 11/14/2020 18:50:45'!
buildReport: aBuildingMethod from: aStartingPoint

	self subclassResponsibility ! !

!methodRemoval: Portfolio #affectSummary: stamp: 'FD 11/14/2020 18:51:44'!
affectSummary: aSummary

		accounts do: [ :account | account affectSummary: aSummary ].
	!

!methodRemoval: Portfolio #netTransferValue stamp: 'FD 11/14/2020 18:51:47'!
netTransferValue 
	
	^accounts sum: [ :anAccount | anAccount netTransferValue ] ifEmpty: [ 0 ]
	!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 18:52:01'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 18:52:01'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 18:52:01'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 18:52:01'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 18:52:01'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 18:52:01'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 18:52:01'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 18:52:01'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 18:52:01'!
PASSED!

!methodRemoval: ReceptiveAccount #netTransferValue stamp: 'FD 11/14/2020 18:52:19'!
netTransferValue

	^transactions 
		inject: 0
		into: [ :transferBalance :transaction | transaction affectNetTransferValue: transferBalance]!

!methodRemoval: ReceptiveAccount #affectSummary: stamp: 'FD 11/14/2020 18:52:26'!
affectSummary: aSummary

		transactions do: [ :transaction | transaction affectSummary: aSummary ].!

!methodRemoval: ReceptiveAccount #register:registerFor: stamp: 'FD 11/14/2020 18:57:02'!
register: aClass registerFor: aSmallInteger 
	self shouldBeImplemented.!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 18:57:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 18:57:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 18:57:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 18:57:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 18:57:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 18:57:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 18:57:10'!
PASSED!
!ReceptiveAccount methodsFor: 'reportBuilding' stamp: 'FD 11/14/2020 19:00:55' prior: 50361562 overrides: 50361827!
buildReport: reportInstructions from: aReportToBuildOnto

	^transactions
	inject: aReportToBuildOnto 
	into: [:report :transaction | transaction buildReport: reportInstructions from: report].! !
!AccountTransaction methodsFor: 'balance' stamp: 'FD 11/14/2020 19:01:59'!
buildReport: aBuildingMethod from: aReportInProgress

	self subclassResponsibility ! !
!Account methodsFor: 'reportBuilding' stamp: 'FD 11/14/2020 19:02:22' prior: 50361827!
buildReport: reportInstructions from: aReportToBuildOnto

	self subclassResponsibility ! !
!Portfolio methodsFor: 'balance' stamp: 'FD 11/14/2020 19:02:44' prior: 50361571 overrides: 50361938!
buildReport: reportInstructions from: aReportToBuildOnto

	^accounts
	inject: aReportToBuildOnto 
	into: [:report :transaction | transaction buildReport: reportInstructions from: report].! !

!methodRemoval: AccountTransaction #affectNetTransferValue: stamp: 'FD 11/14/2020 19:04:17'!
affectNetTransferValue: aNetTransferValue

	^aNetTransferValue.!

!methodRemoval: AccountTransaction #affectSummary: stamp: 'FD 11/14/2020 19:04:19'!
affectSummary: aSummary

	self subclassResponsibility !

!methodRemoval: Deposit #affectSummary: stamp: 'FD 11/14/2020 19:04:53'!
affectSummary: aSummary

	^aSummary add: 'Depósito por ', self value printString.	!
!AccountTransaction methodsFor: 'report building' stamp: 'FD 11/14/2020 19:06:23' prior: 50361932!
buildReport: buildingInstructions from: aReportInProgress

	self subclassResponsibility ! !
!Deposit methodsFor: 'reportBuilding' stamp: 'FD 11/14/2020 19:06:32' prior: 50358287 overrides: 50361969!
buildReport: buildingInstructions from: aReportInProgress

	^buildingInstructions affectReport: aReportInProgress FromDeposit: self.! !

!methodRemoval: Withdraw #affectSummary: stamp: 'FD 11/14/2020 19:07:05'!
affectSummary: aSummary

	^aSummary add: 'Extracción por ', self value printString.	!
!Withdraw methodsFor: 'report building' stamp: 'FD 11/14/2020 19:07:18' prior: 50358293 overrides: 50361969!
buildReport: buildingInstructions from: aReportInProgress

	^buildingInstructions affectReport: aReportInProgress FromWithdraw: self.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:07:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:07:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:07:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:07:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:07:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:07:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:07:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:07:29'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:08:15'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:08:15'!
PASSED!
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 19:09:30'!
affectReport: aReportInProgress FromDeposit: aDeposit

	self subclassResponsibility .! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 19:09:40'!
affectReport: aReportInProgress FromTransferReception: aTransferReception

	self subclassResponsibility .! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 19:09:50'!
affectReport: aReportInProgress FromTransferSending: aTransferSending

	self subclassResponsibility .! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 19:09:59'!
affectReport: aReportInProgress FromWithdraw: aWithdraw

	self subclassResponsibility .! !
!Report methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 19:10:12'!
report

	self subclassResponsibility .! !
!AccountSummary methodsFor: 'action' stamp: 'FD 11/14/2020 19:14:51' overrides: 50356033!
initializeWith: anAccount 
	
	account := anAccount.! !
!NetTransferReport methodsFor: 'action' stamp: 'FD 11/14/2020 19:15:08' overrides: 50356033!
initializeWith: anAccount 
	
	account := anAccount.! !

Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #Report category: 'Portfolio' stamp: 'FD 11/14/2020 19:15:26'!
Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

Report subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountSummary category: 'Portfolio' stamp: 'FD 11/14/2020 19:15:31'!
Report subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

Report subclass: #NetTransferReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #NetTransferReport category: 'Portfolio' stamp: 'FD 11/14/2020 19:15:34'!
Report subclass: #NetTransferReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:15:40'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:15:40'!
PASSED!
!AccountSummary methodsFor: 'report building' stamp: 'FD 11/14/2020 19:18:22'!
add: anEntry to: aReportInProgress

	aReportInProgress add: anEntry.	
	
	^aReportInProgress.! !
!AccountSummary methodsFor: 'report building' stamp: 'FD 11/14/2020 19:19:16' prior: 50361723 overrides: 50362219!
affectReport: aReportInProgress FromDeposit: aDeposit

	aReportInProgress add: 'Depósito por ', aDeposit value printString.	
	
	^aReportInProgress.! !

!methodRemoval: AccountSummary #add:to: stamp: 'FD 11/14/2020 19:19:19'!
add: anEntry to: aReportInProgress

	aReportInProgress add: anEntry.	
	
	^aReportInProgress.!
!AccountSummary methodsFor: 'action' stamp: 'FD 11/14/2020 19:22:33'!
addBalanceEntry: aSummary
	
	aSummary add: ('Balance = ', account balance printString ).
	
	^aSummary.! !
!AccountSummary methodsFor: 'action' stamp: 'FD 11/14/2020 19:23:06' prior: 50358406 overrides: 50362243!
report

	| summary |
	
	summary := OrderedCollection new.

	account buildReport: self from: summary.
	
	self addBalanceEntry: summary.
	
	^summary.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:23:48'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:23:48'!
PASSED!
!Transfer class methodsFor: 'instance creation' stamp: 'FD 11/14/2020 19:27:57'!
assertAccount: aSenderAccount isDifferentFrom: aReceiverAccount

	^ aSenderAccount = aReceiverAccount ifTrue: [self error: self accountsMustBeDifferentErrorDescription ]! !
!Transfer class methodsFor: 'instance creation' stamp: 'FD 11/14/2020 19:27:57' prior: 50356979!
register: anAmount on: aSenderAccount to: aReceiverAccount 
	
	
	| transaction sending reception |
	
	self assertAccount: aSenderAccount isDifferentFrom: aReceiverAccount.
	anAmount <= 0 ifTrue: [self error: self amountShouldBeGreaterThanZeroErrorDescription ].
	
	transaction := self new.
	sending := TransferSending new initializeFrom: transaction.
	reception := TransferReception new initializeFrom: transaction.
	transaction := transaction initializeFor: anAmount withSending: sending withReception: reception.

	
	aSenderAccount register: sending.
	aReceiverAccount register: reception.
	
	^ transaction! !
!Transfer class methodsFor: 'instance creation' stamp: 'FD 11/14/2020 19:28:33'!
assertAmountIsPositive: anAmount

	^ anAmount <= 0 ifTrue: [self error: self amountShouldBeGreaterThanZeroErrorDescription ]! !
!Transfer class methodsFor: 'instance creation' stamp: 'FD 11/14/2020 19:28:33' prior: 50362613!
register: anAmount on: aSenderAccount to: aReceiverAccount 
	
	
	| transaction sending reception |
	
	self assertAccount: aSenderAccount isDifferentFrom: aReceiverAccount.
	self assertAmountIsPositive: anAmount.
	
	transaction := self new.
	sending := TransferSending new initializeFrom: transaction.
	reception := TransferReception new initializeFrom: transaction.
	transaction := transaction initializeFor: anAmount withSending: sending withReception: reception.

	
	aSenderAccount register: sending.
	aReceiverAccount register: reception.
	
	^ transaction! !
!Transfer class methodsFor: 'instance creation' stamp: 'FD 11/14/2020 19:29:49' prior: 50362643!
register: anAmount on: aSenderAccount to: aReceiverAccount 
	
	
	| transaction sending reception |
	
	self assertAccount: aSenderAccount isDifferentFrom: aReceiverAccount.
	self assertAmountIsPositive: anAmount.
	
	transaction := self new.
	
	sending := TransferSending new initializeFrom: transaction.
	reception := TransferReception new initializeFrom: transaction.
	transaction := transaction initializeFor: anAmount withSending: sending withReception: reception.

	
	aSenderAccount register: sending.
	aReceiverAccount register: reception.
	
	^ transaction! !

!methodRemoval: TransferEnd #affectNetTransferValue: stamp: 'FD 11/14/2020 19:31:00'!
affectNetTransferValue: aNetTransferValue

	^ self affectBalance: aNetTransferValue.!

!methodRemoval: TransferEnd #affectSummary stamp: 'FD 11/14/2020 19:31:02'!
affectSummary

	self subclassResponsibility.!
!TransferEnd methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 19:31:40' prior: 50357320 overrides: 16881508!
value
	self subclassResponsibility.! !

!methodRemoval: TransferEnd #initializeFrom: stamp: 'FD 11/14/2020 19:32:11'!
initializeFrom: aTransfer

	transfer := aTransfer.!

Object subclass: #TransferEnd
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #TransferEnd category: 'Portfolio' stamp: 'FD 11/14/2020 19:32:18'!
Object subclass: #TransferEnd
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #TransferReception category: 'Portfolio' stamp: 'FD 11/14/2020 19:32:26'!
TransferEnd subclass: #TransferReception
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!TransferReception methodsFor: 'initialization' stamp: 'FD 11/14/2020 19:32:25'!
initializeFrom: aTransfer

	transfer := aTransfer.! !

!classDefinition: #TransferSending category: 'Portfolio' stamp: 'FD 11/14/2020 19:32:46'!
TransferEnd subclass: #TransferSending
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!TransferSending methodsFor: 'initialization' stamp: 'FD 11/14/2020 19:32:44'!
initializeFrom: aTransfer

	transfer := aTransfer.! !
!TransferReception methodsFor: 'initialization' stamp: 'FD 11/14/2020 19:33:09' overrides: 50362695!
value

	^transfer value.! !
!TransferSending methodsFor: 'initialization' stamp: 'FD 11/14/2020 19:33:34' overrides: 50362695!
value

	^transfer value.! !

!methodRemoval: TransferReception #affectSummary: stamp: 'FD 11/14/2020 19:33:51'!
affectSummary: aSummary

	^aSummary add: 'Entrada por transferencia de ', transfer value printString.	!
!TransferEnd methodsFor: 'accessing' stamp: 'FD 11/14/2020 19:34:17'!
buildReport: buildingInstructions from: aReportInProgress

	self subclassResponsibility ! !
!TransferEnd methodsFor: 'accessing' stamp: 'FD 11/14/2020 19:34:33' prior: 50362751!
buildReport: buildingInstructions from: aReportToBuildOnto

	self subclassResponsibility ! !
!TransferReception methodsFor: 'report building' stamp: 'FD 11/14/2020 19:35:08' prior: 50358323 overrides: 50362757!
buildReport: aBuildingMethod from: aReportToBuildOnto

	^aBuildingMethod affectReport: aReportToBuildOnto FromTransferReception: self.! !
!TransferReception methodsFor: 'report building' stamp: 'FD 11/14/2020 19:35:16' prior: 50362764 overrides: 50362757!
buildReport: buildingInstructions from: aReportToBuildOnto

	^buildingInstructions affectReport: aReportToBuildOnto FromTransferReception: self.! !
!TransferSending methodsFor: 'report building' stamp: 'FD 11/14/2020 19:35:36' prior: 50358355 overrides: 50362757!
buildReport: buildingInstructions from: aReportInProgress

	^buildingInstructions affectReport: aReportInProgress FromTransferSending: self.! !
!TransferSending methodsFor: 'report building' stamp: 'FD 11/14/2020 19:35:43' prior: 50362781 overrides: 50362757!
buildReport: buildingInstructions from: aReportToBuildOnto

	^buildingInstructions affectReport: aReportToBuildOnto FromTransferSending: self.! !
!TransferEnd methodsFor: 'accessing' stamp: 'FD 11/14/2020 19:36:07'!
affectBalance
	self subclassResponsibility.! !
!TransferReception methodsFor: 'balance' stamp: 'FD 11/14/2020 19:36:49' prior: 50356938!
affectBalance: aBalance 
	
	^ aBalance + transfer value.! !

!methodRemoval: TransferSending #affectSummary: stamp: 'FD 11/14/2020 19:37:07'!
affectSummary: aSummary

	^aSummary add: 'Salida por transferencia de ', transfer value printString.	!
!TransferSending methodsFor: 'balance' stamp: 'FD 11/14/2020 19:37:25' prior: 50356944!
affectBalance: aBalance 

	^aBalance - transfer value.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:37:28'!
PASSED!

Report subclass: #Balance
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #Balance category: 'Portfolio' stamp: 'FD 11/14/2020 19:38:55'!
Report subclass: #Balance
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!Balance methodsFor: 'nil' stamp: 'FD 11/14/2020 19:39:27' overrides: 50362243!
report
	
	^account buildReport: self from: 0.! !
!Balance methodsFor: 'nil' stamp: 'FD 11/14/2020 19:40:54' overrides: 50362225!
affectReport: aReportInProgress FromTransferReception: aTransferReception
	
	^aReportInProgress + aTransferReception value.! !
!Balance methodsFor: 'report building' stamp: 'FD 11/14/2020 19:41:13' overrides: 50362231!
affectReport: aReportInProgress FromTransferSending: aTransferSending
	
	^aReportInProgress - aTransferSending value.! !
!Balance methodsFor: 'report building' stamp: 'FD 11/14/2020 19:41:33' overrides: 50362219!
affectReport: aReportInProgress FromDeposit: aDeposit
	
	^aReportInProgress - aDeposit value.! !
!Balance methodsFor: 'report building' stamp: 'FD 11/14/2020 19:41:51' overrides: 50362237!
affectReport: aReportInProgress FromWithdraw: aWithdraw
	
	^aReportInProgress + aWithdraw value.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:42:01'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:42:01'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'FD 11/14/2020 19:42:38' prior: 50355877 overrides: 50355672!
balance

	^(Balance for: self) report.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:42:43'!
ERROR!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:42:43'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:43:04'!
ERROR!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:43:11'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:43:30'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:43:35'!
ERROR!

!methodRemoval: Report #initializeWith: stamp: 'FD 11/14/2020 19:45:23'!
initializeWith: anAccount 
	
	account := anAccount.!
!Balance methodsFor: 'action' stamp: 'FD 11/14/2020 19:45:41'!
initializeWith: anAccount 
	
	account := anAccount.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:46:31'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:46:31'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:46:31'!
FAILURE!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:46:31'!
FAILURE!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:46:41'!
FAILURE!
!Balance methodsFor: 'report building' stamp: 'FD 11/14/2020 19:47:56' prior: 50362993 overrides: 50362237!
affectReport: aReportInProgress FromWithdraw: aWithdraw
	
	^aReportInProgress - aWithdraw value.! !
!Balance methodsFor: 'report building' stamp: 'FD 11/14/2020 19:48:00' prior: 50362987 overrides: 50362219!
affectReport: aReportInProgress FromDeposit: aDeposit
	
	^aReportInProgress + aDeposit value.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:48:02'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:48:02'!
PASSED!
!Deposit methodsFor: 'reportBuilding' stamp: 'FD 11/14/2020 19:48:19' prior: 50361976 overrides: 50361969!
buildReport: buildingInstructions from: aReportToBuildOnto

	^buildingInstructions affectReport: aReportToBuildOnto FromDeposit: self.! !
!Portfolio methodsFor: 'balance' stamp: 'FD 11/14/2020 19:48:52' prior: 50355738 overrides: 50355672!
balance

	^(Balance for: self) report.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:48:53'!
PASSED!

!methodRemoval: AccountTransaction #affectBalance: stamp: 'FD 11/14/2020 19:49:42'!
affectBalance: aBalance

	self subclassResponsibility !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:49:44'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:49:44'!
PASSED!
!AccountTransaction methodsFor: 'report building' stamp: 'FD 11/14/2020 19:50:02' prior: 50361969!
buildReport: buildingInstructions from: aReportToBuildOnto

	self subclassResponsibility ! !

!methodRemoval: Deposit #affectBalance: stamp: 'FD 11/14/2020 19:50:34'!
affectBalance: aBalance

	^aBalance + value !

!methodRemoval: Withdraw #affectBalance: stamp: 'FD 11/14/2020 19:50:40'!
affectBalance: aBalance

	^aBalance - value!
!Withdraw methodsFor: 'report building' stamp: 'FD 11/14/2020 19:50:47' prior: 50361989 overrides: 50364033!
buildReport: buildingInstructions from: aReportToBuildOnto

	^buildingInstructions affectReport: aReportToBuildOnto FromWithdraw: self.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:50:50'!
PASSED!

!methodRemoval: TransferEnd #affectBalance stamp: 'FD 11/14/2020 19:51:12'!
affectBalance
	self subclassResponsibility.!

!methodRemoval: TransferReception #affectBalance: stamp: 'FD 11/14/2020 19:51:23'!
affectBalance: aBalance 
	
	^ aBalance + transfer value.!

!methodRemoval: TransferSending #affectBalance: stamp: 'FD 11/14/2020 19:51:29'!
affectBalance: aBalance 

	^aBalance - transfer value.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReportTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #ReportTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:51:33'!
PASSED!

TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountSummaryTest category: 'Portfolio' stamp: 'FD 11/14/2020 19:54:03'!
TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classRemoval: #AccountSummaryTest stamp: 'FD 11/14/2020 19:54:13'!
TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classRenamed: #ReportTest as: #AccountSummaryTest stamp: 'FD 11/14/2020 19:54:32'!
Smalltalk renameClassNamed: #ReportTest as: #AccountSummaryTest!

TestCase subclass: #NetTransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #NetTransferTest category: 'Portfolio' stamp: 'FD 11/14/2020 19:54:49'!
TestCase subclass: #NetTransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!NetTransferTest methodsFor: 'nil' stamp: 'FD 11/14/2020 19:55:18'!
test01NetTransferReportForAnAccountWithoutTransfersReturnsZero

	| netTransferReport account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	netTransferReport := NetTransferReport for: portfolio.
	
	self assert: netTransferReport report equals: 0.! !
!NetTransferTest methodsFor: 'as yet unclassified' stamp: 'FD 11/14/2020 19:55:29'!
test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue

	| netTransferReport account1 account2 | 
	
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer register: 30 on: account1  to: account2.
	Transfer register: 40 on: account2  to: account1.
	
	netTransferReport := NetTransferReport for: account1 .
	
	self assert: netTransferReport report equals: 10.! !

!methodRemoval: AccountSummaryTest #test08NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:55:33'!
test08NetTransferReportForAnAccountWithoutTransfersReturnsZero

	| netTransferReport account portfolio | 
	
	
	account := ReceptiveAccount new.
	
	Deposit register: 50 on: account.
	Withdraw register: 30 on: account.
	
	portfolio := Portfolio with: account.
	
	netTransferReport := NetTransferReport for: portfolio.
	
	self assert: netTransferReport report equals: 0.!

!methodRemoval: AccountSummaryTest #test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:55:34'!
test09NetTransferReportForAnAccountWithTransfersReturnsTheNetValue

	| netTransferReport account1 account2 | 
	
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer register: 30 on: account1  to: account2.
	Transfer register: 40 on: account2  to: account1.
	
	netTransferReport := NetTransferReport for: account1 .
	
	self assert: netTransferReport report equals: 10.!

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:55:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:55:36'!
PASSED!

TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #ReportTest category: 'Portfolio' stamp: 'FD 11/14/2020 19:57:41'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

ReportTest subclass: #NetTransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #NetTransferTest category: 'Portfolio' stamp: 'FD 11/14/2020 19:57:56'!
ReportTest subclass: #NetTransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:58:05'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:58:05'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:58:08'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/14/2020 19:58:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/14/2020 19:58:11'!
PASSED!

ReportTest subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountSummaryTest category: 'Portfolio' stamp: 'FD 11/14/2020 19:58:21'!
ReportTest subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

TestCase subclass: #AccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountTest category: 'Portfolio' stamp: 'FD 11/14/2020 19:58:38'!
TestCase subclass: #AccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

AccountTest subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioTest category: 'Portfolio' stamp: 'FD 11/14/2020 19:58:47'!
AccountTest subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

AccountTest subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #ReceptiveAccountTest category: 'Portfolio' stamp: 'FD 11/14/2020 19:58:53'!
AccountTest subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

----SNAPSHOT----(14 November 2020 20:00:14) CuisUniversity-4383.image priorSource: 807780!

----STARTUP---- (15 November 2020 15:00:45) as /home/franco/Documents/smallTalk/linux64/CuisUniversity-4383.image!


ReportTest subclass: #AccountTreeStructureTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountTreeStructureTest category: 'Portfolio' stamp: 'FD 11/15/2020 15:07:54'!
ReportTest subclass: #AccountTreeStructureTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!AccountTreeStructureTest methodsFor: 'nil' stamp: 'FD 11/15/2020 15:08:38'!
test01IsEmptyWhenPortfolioDoesNotHaveAccounts

	! !
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:09:48' prior: 50364959!
test01IsEmptyWhenPortfolioDoesNotHaveAccounts

	| AccountTreeStructure portfolio | 
	
	portfolio := Portfolio new.
	
	AccountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: AccountTreeStructure report isEmpty.! !
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:10:41'!
test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts

	| AccountTreeStructure portfolio | 
	
	portfolio := Portfolio new.
	
	AccountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: AccountTreeStructure report isEmpty.! !

!methodRemoval: AccountTreeStructureTest #test01IsEmptyWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:10:45'!
test01IsEmptyWhenPortfolioDoesNotHaveAccounts

	| AccountTreeStructure portfolio | 
	
	portfolio := Portfolio new.
	
	AccountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: AccountTreeStructure report isEmpty.!

!testRun: #AccountTreeStructureTest #test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:10:48'!
ERROR!

!testRun: #AccountTreeStructureTest #test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:10:48'!
ERROR!

Report subclass: #AccountTreeStructure
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountTreeStructure category: 'Portfolio' stamp: 'FD 11/15/2020 15:11:25'!
Report subclass: #AccountTreeStructure
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

Report subclass: #AccountTreeStructure
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountTreeStructure category: 'Portfolio' stamp: 'FD 11/15/2020 15:11:48'!
Report subclass: #AccountTreeStructure
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

Report subclass: #AccountTreeStructure
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountTreeStructure category: 'Portfolio' stamp: 'FD 11/15/2020 15:12:25'!
Report subclass: #AccountTreeStructure
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!AccountTreeStructure methodsFor: 'nil' stamp: 'FD 11/15/2020 15:12:39'!
initializeWith: anAccount 
	
	account := anAccount.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:13:09' overrides: 50362243!
report

	| summary |
	
	summary := OrderedCollection new.

	account buildReport: self from: summary.
	
	self addBalanceEntry: summary.
	
	^summary.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:13:23' prior: 50365047 overrides: 50362243!
report

	| structure |
	
	structure := OrderedCollection new.

	account buildReport: self from: structure.
	
	self addBalanceEntry: structure.
	
	^structure.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:13:44' prior: 50365056 overrides: 50362243!
report

	| structure |
	
	structure := OrderedCollection new.

	account buildReport: self from: structure.
	
	^structure.! !

!testRun: #AccountTreeStructureTest #test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:16:05'!
ERROR!

!testRun: #AccountTreeStructureTest #test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:16:05'!
ERROR!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:17:07' prior: 50364976!
test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio new.
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: AccountTreeStructure report isEmpty.! !
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:17:12' prior: 50365081!
test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio new.
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report isEmpty.! !

!testRun: #AccountTreeStructureTest #test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:17:13'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:17:13'!
PASSED!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:17:44'!
test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio new.
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report isEmpty.! !
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:19:08' prior: 50365111!
test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio named: 'test portfolio'.
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test portfolio'.! !

!testRun: #AccountTreeStructureTest #test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:19:09'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:19:09'!
ERROR!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:19:09'!
ERROR!

!methodRemoval: AccountTreeStructureTest #test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:19:13'!
test01ReportIsEmptyWhenPortfolioDoesNotHaveAccounts

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio new.
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report isEmpty.!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:19:14'!
ERROR!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:19:14'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:21:57'!
named: aName

	^self new 
		name: aName;
		yourself! !

!classDefinition: #Portfolio category: 'Portfolio' stamp: 'FD 11/15/2020 15:22:25'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!Portfolio methodsFor: 'accounts management' stamp: 'FD 11/15/2020 15:22:23'!
name: aName

	name := aName.
	! !

!classDefinition: #ReceptiveAccount category: 'Portfolio' stamp: 'FD 11/15/2020 15:23:26'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:23:24'!
name: aName

	name := aName.! !
!ReceptiveAccount class methodsFor: 'nil' stamp: 'FD 11/15/2020 15:26:11'!
named: aName

	^self new name: aName.! !

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:26:25'!
FAILURE!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:26:25'!
FAILURE!
!Portfolio methodsFor: 'report building' stamp: 'FD 11/15/2020 15:29:48' prior: 50361945 overrides: 50361938!
buildReport: reportInstructions from: aReportToBuildOnto

	| reportInProgess |
	
	reportInProgess := reportInstructions affectReport: aReportToBuildOnto FromPortfolio: self.
		
	^accounts
	inject: reportInProgess 
	into: [:report :transaction | transaction buildReport: reportInstructions from: report].! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:30:20'!
affectReport: aReportInProgress FromPortfolio: aDeposit

	aReportInProgress add: 'Depósito por ', aDeposit value printString.	
	
	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:30:32' prior: 50365226!
affectReport: aReportInProgress FromPortfolio: aPortfolio

	aReportInProgress add: 'Depósito por ', aPortfolio value printString.	
	
	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:30:57' prior: 50365234!
affectReport: aReportInProgress FromPortfolio: aPortfolio

	aReportInProgress add: aPortfolio name.	
	
	^aReportInProgress.! !
!Portfolio methodsFor: 'balance' stamp: 'FD 11/15/2020 15:31:21' overrides: 16882612!
name

	^name.! !
!Account methodsFor: 'balance' stamp: 'FD 11/15/2020 15:31:39' overrides: 16882612!
name

	self subclassResponsibility .! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'FD 11/15/2020 15:31:53' overrides: 50365254!
name 
	
	^ name.! !

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:32:00'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 15:33:02'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 15:33:02'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 15:33:02'!
ERROR!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 15:33:02'!
ERROR!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 15:33:02'!
ERROR!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 15:33:02'!
ERROR!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 15:33:02'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 15:33:02'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 15:33:02'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 15:33:02'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 15:33:02'!
PASSED!
!NetTransferReport methodsFor: 'report building' stamp: 'FD 11/15/2020 15:33:30'!
affectReport: aReportInProgress FromPortfolio: aPortfolio

	^aReportInProgress.! !
!Balance methodsFor: 'report building' stamp: 'FD 11/15/2020 15:33:36'!
affectReport: aReportInProgress FromPortfolio: aPortfolio

	^aReportInProgress.! !
!AccountSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 15:33:44'!
affectReport: aReportInProgress FromPortfolio: aPortfolio

	^aReportInProgress.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 15:33:46'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 15:33:46'!
PASSED!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:34:54'!
test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount

	| accountTreeStructure portfolio | 
	
	portfolio := Account named: 'test portfolio'.
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test portfolio'.! !
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:35:00' prior: 50365576!
test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount

	| accountTreeStructure account | 
	
	account := Account named: 'test portfolio'.
	
	accountTreeStructure := AccountTreeStructure for: account.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test portfolio'.! !
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:35:07' prior: 50365591!
test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount

	| accountTreeStructure account | 
	
	account := Account named: 'test account'.
	
	accountTreeStructure := AccountTreeStructure for: account.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test account'.! !

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:35:13'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:35:13'!
ERROR!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:35:13'!
ERROR!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:35:23' prior: 50365605!
test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount

	| accountTreeStructure account | 
	
	account := ReceptiveAccount named: 'test account'.
	
	accountTreeStructure := AccountTreeStructure for: account.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test account'.! !

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:35:25'!
FAILURE!
!ReceptiveAccount methodsFor: 'report building' stamp: 'FD 11/15/2020 15:35:56' prior: 50361923 overrides: 50361938!
buildReport: reportInstructions from: aReportToBuildOnto

	| reportInProgess |
	
	reportInProgess := reportInstructions affectReport: aReportToBuildOnto FromAccount: self.
	
	^transactions
	inject: reportInProgess 
	into: [:report :transaction | transaction buildReport: reportInstructions from: report].! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:36:25'!
affectReport: aReportInProgress FromAccount: anAccount

	aReportInProgress add: anAccount name.	
	
	^aReportInProgress.! !
!AccountSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 15:37:14'!
affectReport: aReportInProgress FromAccount: aAccount

	^aReportInProgress.! !
!Balance methodsFor: 'report building' stamp: 'FD 11/15/2020 15:37:20'!
affectReport: aReportInProgress FromAccount: aAccount

	^aReportInProgress.! !
!NetTransferReport methodsFor: 'report building' stamp: 'FD 11/15/2020 15:37:25'!
affectReport: aReportInProgress FromAccount: aAccount

	^aReportInProgress.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 15:37:27'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 15:37:27'!
PASSED!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:38:22'!
test03ReportDoesNotShowTransactions

	| accountTreeStructure account | 
	
	account := ReceptiveAccount named: 'test account'.
	Deposit register: 100 on: account.
	
	accountTreeStructure := AccountTreeStructure for: account.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test account'.! !

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 15:38:25'!
ERROR!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 15:38:25'!
ERROR!
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:39:04' overrides: 50362219!
affectReport: aReportInProgress FromDeposit: aDeposit

	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:39:26' overrides: 50362237!
affectReport: aReportInProgress FromWithdraw: aWithdraw

	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:39:38' overrides: 50362225!
affectReport: aReportInProgress FromTransferReception: aTransferReception

	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:39:49' overrides: 50362231!
affectReport: aReportInProgress FromTransferSending: aTransferSending

	^aReportInProgress.! !

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:39:52'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:39:52'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 15:39:52'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 15:39:54'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 15:39:54'!
PASSED!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:41:39'!
test04ChildAccountsAreIndented

	| accountTreeStructure account | 
	
	account := ReceptiveAccount named: 'test account'.
	
	
	accountTreeStructure := AccountTreeStructure for: account.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test account'.! !
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:41:43' prior: 50366051!
test04ChildAccountsAreIndented

	| accountTreeStructure portfolio | 
	
	portfolio := ReceptiveAccount named: 'test account'.
	
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test account'.! !
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:42:10' prior: 50366065!
test04ChildAccountsAreIndented

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio named: 'a portfolio'.
	
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test account'.! !
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:44:01' prior: 50366079!
test04ChildAccountsAreIndented

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio named: 'a portfolio' with: (Account named: 'an account').
	
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report second equals: '   an account'.! !

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 15:44:06'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:44:44'!
named: aName with: anotherAccount

	^self new 
		name: aName;
		add: anotherAccount;
		yourself! !

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:44:50'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:44:50'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 15:44:50'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 15:44:50'!
ERROR!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 15:44:50'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:45:15' prior: 50366109!
named: aName with: anotherAccount

	^self new 
		named: aName;
		add: anotherAccount;
		yourself! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 15:45:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:45:28'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:45:28'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 15:45:28'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 15:45:28'!
ERROR!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 15:45:28'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:46:05' prior: 50366135!
named: aName with: anotherAccount

	^self new 
		name: aName;
		add: anotherAccount;
		yourself! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 15:46:15'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:46:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:46:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 15:46:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 15:46:18'!
ERROR!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 15:46:18'!
ERROR!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 15:46:38' prior: 50366093!
test04ChildAccountsAreIndented

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio named: 'a portfolio' with: (ReceptiveAccount named: 'an account').
	
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report second equals: '   an account'.! !

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 15:46:40'!
FAILURE!
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:47:07' prior: 50365664!
affectReport: aReportInProgress FromAccount: anAccount

	aReportInProgress add: '   ',anAccount name.	
	
	^aReportInProgress.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:47:09'!
FAILURE!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 15:47:09'!
FAILURE!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 15:47:09'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 15:50:40'!
FAILURE!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 15:50:40'!
FAILURE!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 15:50:40'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 15:50:40'!
PASSED!
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 15:51:08' prior: 50366319!
affectReport: aReportInProgress FromAccount: anAccount

	aReportInProgress add: anAccount name.	
	
	^aReportInProgress.! !
!Portfolio methodsFor: 'report building' stamp: 'FD 11/15/2020 16:03:31' prior: 50365213 overrides: 50361938!
buildReport: reportInstructions from: aReportToBuildOnto

	| reportInProgess |
	
	reportInProgess := reportInstructions affectReport: aReportToBuildOnto FromPortfolio: self.
		
	accounts
	inject: reportInProgess 
	into: [:report :transaction | transaction buildReport: reportInstructions from: report].
	
	reportInstructions afterAffectReport.
	
	^reportInProgess.! !

!classDefinition: #AccountTreeStructure category: 'Portfolio' stamp: 'FD 11/15/2020 16:04:06'!
Report subclass: #AccountTreeStructure
	instanceVariableNames: 'account indentationLevel'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 16:04:04'!
afterAffectReport

	indentationLevel := indentationLevel - 1.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 16:04:13' prior: 50365042!
initializeWith: anAccount 
	
	account := anAccount.
	indentationLevel := 0.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 16:04:39' prior: 50366640!
affectReport: aReportInProgress FromAccount: anAccount

	indentationLevel := indentationLevel + 1.
	aReportInProgress add: anAccount name.	
	
	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 16:04:56' prior: 50365243!
affectReport: aReportInProgress FromPortfolio: aPortfolio

	aReportInProgress add: aPortfolio name.	
	indentationLevel := indentationLevel + 1.
	
	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 16:05:03' prior: 50366683!
affectReport: aReportInProgress FromAccount: anAccount

	aReportInProgress add: anAccount name.	
	indentationLevel := indentationLevel + 1.
	
	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 16:05:42' prior: 50366701!
affectReport: aReportInProgress FromAccount: anAccount

	aReportInProgress add: (self indent: anAccount name).	
	indentationLevel := indentationLevel + 1.
	
	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'initialization' stamp: 'FD 11/15/2020 16:05:56' prior: 50366692!
affectReport: aReportInProgress FromPortfolio: aPortfolio

	aReportInProgress add: (self indent: aPortfolio name).	
	indentationLevel := indentationLevel + 1.
	
	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'report building' stamp: 'FD 11/15/2020 16:06:45'!
indent: anEntry

	^'  '.! !

'a'time: 3.!

2 timesRepeat: ['a','b']!

2 timesRepeat: ['a','b']!

3 timesRepeat: [2*1]!

a := 'hola'.!

3 timesRepeat: [a,'G']!

3 timesRepeat: [a,'G']!

a!

3 timesRepeat: [a := a,'G']!

3 timesRepeat: [a := a,'G']!

a!
!AccountTreeStructure methodsFor: 'report building -- private' stamp: 'FD 11/15/2020 16:20:11' prior: 50366728!
indent: anEntry

	| indentedEntry |
	
	indentedEntry := anEntry.
	indentationLevel timesRepeat: [indentedEntry := '   ',indentedEntry ].
	
	^indentedEntry.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:20:29'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:20:29'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:20:29'!
ERROR!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:20:29'!
ERROR!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:20:29'!
ERROR!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:20:29'!
FAILURE!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:20:29'!
FAILURE!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:20:29'!
ERROR!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:20:29'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:20:29'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:20:29'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:20:29'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:20:32'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:20:32'!
FAILURE!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:20:32'!
FAILURE!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:20:32'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:20:40'!
FAILURE!
!AccountTreeStructure methodsFor: 'action' stamp: 'FD 11/15/2020 16:21:33' prior: 50365065 overrides: 50362243!
report

	| structure |
	
	structure := OrderedCollection new.

	account buildReport: self from: structure.
	
	indentationLevel := 0.
	^structure.! !

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:21:36'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:21:36'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:21:36'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:21:36'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:21:37'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:21:38'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:21:38'!
ERROR!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:21:38'!
ERROR!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:21:38'!
ERROR!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:21:38'!
ERROR!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:21:38'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:21:38'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:21:38'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:21:38'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:21:38'!
PASSED!
!AccountSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:22:08'!
afterAffectReport! !
!Balance methodsFor: 'report building' stamp: 'FD 11/15/2020 16:22:12'!
afterAffectReport! !
!NetTransferReport methodsFor: 'report building' stamp: 'FD 11/15/2020 16:22:15'!
afterAffectReport! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:22:18'!
FAILURE!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:22:18'!
FAILURE!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:22:18'!
FAILURE!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:22:18'!
FAILURE!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:22:18'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:22:26'!
FAILURE!
!Portfolio methodsFor: 'report building' stamp: 'FD 11/15/2020 16:24:32' prior: 50366648 overrides: 50361938!
buildReport: reportInstructions from: aReportToBuildOnto

	| reportInProgess |
	
	reportInProgess := reportInstructions affectReport: aReportToBuildOnto FromPortfolio: self.
		
	reportInProgess := accounts
	inject: reportInProgess 
	into: [:report :transaction | transaction buildReport: reportInstructions from: report].
	
	reportInstructions afterAffectReport.
	
	^reportInProgess.! !
!ReceptiveAccount methodsFor: 'report building' stamp: 'FD 11/15/2020 16:24:47' prior: 50365651 overrides: 50361938!
buildReport: reportInstructions from: aReportToBuildOnto

	| reportInProgess |
	
	reportInProgess := reportInstructions affectReport: aReportToBuildOnto FromAccount: self.
	
	^transactions
	inject: reportInProgess 
	into: [:report :transaction | transaction buildReport: reportInstructions from: report].! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:24:50'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:24:50'!
PASSED!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:25:31'!
test04ChildAccountIsIndented

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio named: 'a portfolio' with: (ReceptiveAccount named: 'an account').
	
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report second equals: '   an account'.! !

!methodRemoval: AccountTreeStructureTest #test04ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:25:31'!
test04ChildAccountsAreIndented

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio named: 'a portfolio' with: (ReceptiveAccount named: 'an account').
	
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report second equals: '   an account'.!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:29:21'!
test05ChildAccountsAreIndented

	| accountTreeStructure childPortfolio portfolio | 
	
	childPortfolio := Portfolio named: 'a portfolio' with: (ReceptiveAccount named: 'an account').
	portfolio := Portfolio named: 'parent portfolio' with: childPortfolio .
	
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report second equals: '   a portfolio'.
	self assert: accountTreeStructure report third equals: '      an account'.! !

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:29:24'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:29:24'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:29:24'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:29:24'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:29:24'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:29:24'!
PASSED!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:30:53' prior: 50367489!
test05ChildAccountsAreIndented

	| accountTreeStructure childPortfolio portfolio | 
	
	childPortfolio := Portfolio named: 'a portfolio' with: (ReceptiveAccount named: 'an account').
	portfolio := Portfolio named: 'parent portfolio' with: childPortfolio .
	portfolio add: (ReceptiveAccount named: 'another account').
	
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report second equals: '   a portfolio'.
	self assert: accountTreeStructure report third equals: '      an account'.
		self assert: accountTreeStructure report third equals: '   another account'.! !
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:30:56' prior: 50367530!
test05ChildAccountsAreIndented

	| accountTreeStructure childPortfolio portfolio | 
	
	childPortfolio := Portfolio named: 'a portfolio' with: (ReceptiveAccount named: 'an account').
	portfolio := Portfolio named: 'parent portfolio' with: childPortfolio .
	portfolio add: (ReceptiveAccount named: 'another account').
	
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report second equals: '   a portfolio'.
	self assert: accountTreeStructure report third equals: '      an account'.
	self assert: accountTreeStructure report third equals: '   another account'.! !

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:30:57'!
FAILURE!
!ReceptiveAccount methodsFor: 'report building' stamp: 'FD 11/15/2020 16:31:43' prior: 50367293 overrides: 50361938!
buildReport: reportInstructions from: aReportToBuildOnto

	| reportInProgess |
	
	reportInProgess := reportInstructions affectReport: aReportToBuildOnto FromAccount: self.
	
	reportInProgess := transactions
	inject: reportInProgess 
	into: [:report :transaction | transaction buildReport: reportInstructions from: report].
	
	reportInstructions afterAffectReport.
	
	^reportInProgess.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:31:45'!
FAILURE!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:31:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:31:46'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:31:46'!
FAILURE!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:32:02'!
FAILURE!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:32:02'!
FAILURE!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:32:17'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:32:17'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:32:17'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:32:17'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:32:17'!
FAILURE!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:32:17'!
FAILURE!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:32:24'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:32:24'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:32:24'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:32:24'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:32:24'!
FAILURE!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:32:24'!
FAILURE!
!AccountTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:33:01' prior: 50367553!
test05ChildAccountsAreIndented

	| accountTreeStructure childPortfolio portfolio | 
	
	childPortfolio := Portfolio named: 'a portfolio' with: (ReceptiveAccount named: 'an account').
	portfolio := Portfolio named: 'parent portfolio' with: childPortfolio .
	portfolio add: (ReceptiveAccount named: 'another account').
	
	
	accountTreeStructure := AccountTreeStructure for: portfolio.
	
	self assert: accountTreeStructure report second equals: '   a portfolio'.
	self assert: accountTreeStructure report third equals: '      an account'.
	self assert: accountTreeStructure report fourth equals: '   another account'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:33:04'!
PASSED!

ReportTest subclass: #AccountTreeStructureWithSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountTreeStructureWithSummaryTest category: 'Portfolio' stamp: 'FD 11/15/2020 16:34:15'!
ReportTest subclass: #AccountTreeStructureWithSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!AccountTreeStructureWithSummaryTest methodsFor: 'nil' stamp: 'FD 11/15/2020 16:36:02'!
test01! !

!methodRemoval: AccountTreeStructureWithSummaryTest #test01 stamp: 'FD 11/15/2020 16:36:05'!
test01!

!classDefinition: #AccountTreeStructureWithSummary category: 'Portfolio' stamp: 'FD 11/15/2020 16:36:42'!
Report subclass: #AccountTreeStructureWithSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!AccountTreeStructureWithSummaryTest methodsFor: 'nil' stamp: 'FD 11/15/2020 16:36:27'!
test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts

	| accountTreeStructure portfolio | 
	
	portfolio := Portfolio named: 'test portfolio'.
	
	accountTreeStructure := AccountTreeStructureWithSummary for: portfolio.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test portfolio'.! !

Report subclass: #AccountTreeStructureWithSummary
	instanceVariableNames: 'account indentationLevel'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #AccountTreeStructureWithSummary category: 'Portfolio' stamp: 'FD 11/15/2020 16:37:05'!
Report subclass: #AccountTreeStructureWithSummary
	instanceVariableNames: 'account indentationLevel'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!AccountTreeStructureWithSummary methodsFor: 'nil' stamp: 'FD 11/15/2020 16:37:19'!
initializeWith: anAccount 
	
	account := anAccount.
	indentationLevel := 0.! !
!AccountTreeStructureWithSummary methodsFor: 'initialization' stamp: 'FD 11/15/2020 16:37:35' overrides: 50362243!
report

	| structure |
	
	structure := OrderedCollection new.

	account buildReport: self from: structure.
	
	indentationLevel := 0.
	^structure.! !
!AccountTreeStructureWithSummary methodsFor: 'nil' stamp: 'FD 11/15/2020 16:37:52'!
indent: anEntry

	| indentedEntry |
	
	indentedEntry := anEntry.
	indentationLevel timesRepeat: [indentedEntry := '   ',indentedEntry ].
	
	^indentedEntry.! !
!AccountTreeStructureWithSummary methodsFor: 'report building -- private' stamp: 'FD 11/15/2020 16:38:13'!
affectReport: aReportInProgress FromAccount: anAccount

	aReportInProgress add: (self indent: anAccount name).	
	indentationLevel := indentationLevel + 1.
	
	^aReportInProgress.! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:38:31' overrides: 50362219!
affectReport: aReportInProgress FromDeposit: aDeposit

	^aReportInProgress.! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:38:38'!
affectReport: aReportInProgress FromPortfolio: aPortfolio

	aReportInProgress add: (self indent: aPortfolio name).	
	indentationLevel := indentationLevel + 1.
	
	^aReportInProgress.! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:38:45' overrides: 50362225!
affectReport: aReportInProgress FromTransferReception: aTransferReception

	^aReportInProgress.! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:38:54' overrides: 50362231!
affectReport: aReportInProgress FromTransferSending: aTransferSending

	^aReportInProgress.! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:39:05' overrides: 50362237!
affectReport: aReportInProgress FromWithdraw: aWithdraw

	^aReportInProgress.! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:39:12'!
afterAffectReport

	indentationLevel := indentationLevel - 1.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:39:18'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:39:18'!
PASSED!
!AccountTreeStructureWithSummaryTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:39:36'!
test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccountWithoutTransactions

	| accountTreeStructure account | 
	
	account := ReceptiveAccount named: 'test account'.
	
	accountTreeStructure := AccountTreeStructure for: account.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test account'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccountWithoutTransactions stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:39:38'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:39:38'!
PASSED!
!AccountTreeStructureWithSummaryTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:41:03'!
test02ShowsEachAccountsSummary

	| accountTreeStructure account | 
	
	account := ReceptiveAccount named: 'test account'.
	Deposit register: 100 on: account. 
	
	accountTreeStructure := AccountTreeStructureWithSummary for: account.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test account'.! !

!methodRemoval: AccountTreeStructureWithSummaryTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccountWithoutTransactions stamp: 'FD 11/15/2020 16:41:07'!
test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccountWithoutTransactions

	| accountTreeStructure account | 
	
	account := ReceptiveAccount named: 'test account'.
	
	accountTreeStructure := AccountTreeStructure for: account.
	
	self assert: accountTreeStructure report size equals: 1.
	self assert: accountTreeStructure report first equals: 'test account'.!
!AccountTreeStructureWithSummaryTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:48:54' prior: 50368478!
test02ShowsEachAccountsSummary

	| accountTreeStructure account1 account2 portfolio| 
	
	account1 := ReceptiveAccount named: 'test account1'.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount named: 'test account2'.
	Withdraw register: 50 on: account2.
	
	portfolio := Portfolio named: 'a portfolio'.
	portfolio add: account1.
	portfolio add: account2.
	
	accountTreeStructure := AccountTreeStructureWithSummary for: portfolio .
	
	self assert: accountTreeStructure report size equals: 7.
	self assert: accountTreeStructure report first equals: 'a portfolio'.
	self assert: accountTreeStructure report second equals: '   test account1'.
	self assert: accountTreeStructure report third equals: '      Depósito por 100'.
	self assert: accountTreeStructure report fourth equals: '      Balance = 100'.
	self assert: accountTreeStructure report fifth equals: '   test account2'.
	self assert: accountTreeStructure report sixth equals: '      Extracción por 50'.
	self assert: accountTreeStructure report seventh equals: '      Balance = -50'.! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:51:17' prior: 50368076!
affectReport: aReportInProgress FromAccount: anAccount

	aReportInProgress add: (self indent: anAccount name).	
	indentationLevel := indentationLevel + 1.
	
	aReportInProgress addAll: ( self indentCollection: ( AccountSummary  for: anAccount ) report)
	
	^aReportInProgress.! !
!AccountTreeStructureWithSummary methodsFor: 'report building -- private' stamp: 'FD 11/15/2020 16:52:40'!
indentCollection: aCollectionOfEntries

	^aCollectionOfEntries collect: [:anEntry | self indent: anEntry ].! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test02ShowsEachAccountsSummary stamp: 'FD 11/15/2020 16:52:43'!
ERROR!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:52:43'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test02ShowsEachAccountsSummary stamp: 'FD 11/15/2020 16:52:43'!
ERROR!
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:53:00' prior: 50368547!
affectReport: aReportInProgress FromAccount: anAccount

	aReportInProgress add: (self indent: anAccount name).	
	indentationLevel := indentationLevel + 1.
	
	aReportInProgress addAll: ( self indentCollection: ( AccountSummary  for: anAccount ) report).
	
	^aReportInProgress.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test02ShowsEachAccountsSummary stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:53:02'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:53:02'!
PASSED!
!AccountTreeStructureWithSummaryTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:53:34' prior: 50368510!
test02ShowsEachAccountsSummary

	| accountTreeStructure account1 account2 portfolio| 
	
	account1 := ReceptiveAccount named: 'test account1'.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount named: 'test account2'.
	Withdraw register: 50 on: account2.
	
	portfolio := Portfolio named: 'a portfolio'.
	portfolio add: account1.
	portfolio add: account2.
	
	accountTreeStructure := AccountTreeStructureWithSummary for: portfolio .
	
	self assert: accountTreeStructure report size equals: 7.
	self assert: accountTreeStructure report first equals: 'a portfolio'.
	self assert: accountTreeStructure report second equals: '   test account1'.
	self assert: accountTreeStructure report third equals: '      Depósito por 100'.
	self assert: accountTreeStructure report fourth equals: '      Balance = 100'.
	self assert: accountTreeStructure report fifth equals: '   test account2'.
	self assert: accountTreeStructure report sixth equals: '      Extracción por 50'.
	self assert: accountTreeStructure report seventh equals: '      Balance = 50'.! !

!testRun: #AccountTreeStructureWithSummaryTest #test02ShowsEachAccountsSummary stamp: 'FD 11/15/2020 16:53:36'!
FAILURE!
!AccountTreeStructureWithSummaryTest methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:56:11' prior: 50368922!
test02ShowsEachAccountsSummary

	| accountTreeStructure account1 account2 portfolio| 
	
	account1 := ReceptiveAccount named: 'test account1'.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount named: 'test account2'.
	Withdraw register: 50 on: account2.
	
	portfolio := Portfolio named: 'a portfolio'.
	portfolio add: account1.
	portfolio add: account2.
	
	accountTreeStructure := AccountTreeStructureWithSummary for: portfolio .
	
	self assert: accountTreeStructure report size equals: 7.
	self assert: accountTreeStructure report first equals: 'a portfolio'.
	self assert: accountTreeStructure report second equals: '   test account1'.
	self assert: accountTreeStructure report third equals: '      Depósito por 100'.
	self assert: accountTreeStructure report fourth equals: '      Balance = 100'.
	self assert: accountTreeStructure report fifth equals: '   test account2'.
	self assert: accountTreeStructure report sixth equals: '      Extracción por 50'.
	self assert: accountTreeStructure report seventh equals: '      Balance = -50'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test02ShowsEachAccountsSummary stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:56:13'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:56:13'!
PASSED!
!NetTransferReport methodsFor: 'report building' stamp: 'FD 11/15/2020 16:57:36'!
cleanAfterAffectReport! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:57:36'!
cleanAfterAffectReport

	indentationLevel := indentationLevel - 1.! !
!Balance methodsFor: 'report building' stamp: 'FD 11/15/2020 16:57:36'!
cleanAfterAffectReport! !
!AccountSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 16:57:36'!
cleanAfterAffectReport! !
!AccountTreeStructure methodsFor: 'report building' stamp: 'FD 11/15/2020 16:57:36'!
cleanAfterAffectReport

	indentationLevel := indentationLevel - 1.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:57:36' prior: 50367277 overrides: 50361938!
buildReport: reportInstructions from: aReportToBuildOnto

	| reportInProgess |
	
	reportInProgess := reportInstructions affectReport: aReportToBuildOnto FromPortfolio: self.
		
	reportInProgess := accounts
	inject: reportInProgess 
	into: [:report :transaction | transaction buildReport: reportInstructions from: report].
	
	reportInstructions cleanAfterAffectReport.
	
	^reportInProgess.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'FD 11/15/2020 16:57:36' prior: 50367580 overrides: 50361938!
buildReport: reportInstructions from: aReportToBuildOnto

	| reportInProgess |
	
	reportInProgess := reportInstructions affectReport: aReportToBuildOnto FromAccount: self.
	
	reportInProgess := transactions
	inject: reportInProgess 
	into: [:report :transaction | transaction buildReport: reportInstructions from: report].
	
	reportInstructions cleanAfterAffectReport.
	
	^reportInProgess.! !

!methodRemoval: NetTransferReport #afterAffectReport stamp: 'FD 11/15/2020 16:57:37'!
afterAffectReport!

!methodRemoval: AccountTreeStructureWithSummary #afterAffectReport stamp: 'FD 11/15/2020 16:57:37'!
afterAffectReport

	indentationLevel := indentationLevel - 1.!

!methodRemoval: Balance #afterAffectReport stamp: 'FD 11/15/2020 16:57:37'!
afterAffectReport!

!methodRemoval: AccountSummary #afterAffectReport stamp: 'FD 11/15/2020 16:57:37'!
afterAffectReport!

!methodRemoval: AccountTreeStructure #afterAffectReport stamp: 'FD 11/15/2020 16:57:37'!
afterAffectReport

	indentationLevel := indentationLevel - 1.!

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test02ShowsEachAccountsSummary stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:57:47'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:57:47'!
PASSED!
!AccountTreeStructure methodsFor: 'report building' stamp: 'FD 11/15/2020 16:58:54'!
increaseIndentationLevel

	^ indentationLevel := indentationLevel + 1! !
!AccountTreeStructure methodsFor: 'report building' stamp: 'FD 11/15/2020 16:58:54' prior: 50366710!
affectReport: aReportInProgress FromAccount: anAccount

	aReportInProgress add: (self indent: anAccount name).	
	self increaseIndentationLevel.
	
	^aReportInProgress.! !
!AccountTreeStructure methodsFor: 'report building' stamp: 'FD 11/15/2020 16:59:08' prior: 50366719!
affectReport: aReportInProgress FromPortfolio: aPortfolio

	aReportInProgress add: (self indent: aPortfolio name).	
	self increaseIndentationLevel.
	
	^aReportInProgress.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test02ShowsEachAccountsSummary stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 16:59:20'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 16:59:20'!
PASSED!
!AccountTreeStructure methodsFor: 'report building' stamp: 'FD 11/15/2020 16:59:48'!
decreaseIndentationLevel

	^ indentationLevel := indentationLevel - 1! !
!AccountTreeStructure methodsFor: 'report building' stamp: 'FD 11/15/2020 16:59:48' prior: 50369185!
cleanAfterAffectReport

	self decreaseIndentationLevel.! !
!AccountTreeStructure methodsFor: 'action' stamp: 'FD 11/15/2020 17:00:05'!
resetIndentationLevel

	^ indentationLevel := 0! !
!AccountTreeStructure methodsFor: 'action' stamp: 'FD 11/15/2020 17:00:05' prior: 50366925 overrides: 50362243!
report

	| structure |
	
	structure := OrderedCollection new.

	account buildReport: self from: structure.
	
	self resetIndentationLevel.
	^structure.! !
!AccountTreeStructureWithSummary methodsFor: 'action' stamp: 'FD 11/15/2020 17:00:26'!
resetIndentationLevel

	^ indentationLevel := 0! !
!AccountTreeStructureWithSummary methodsFor: 'action' stamp: 'FD 11/15/2020 17:00:26' prior: 50368059 overrides: 50362243!
report

	| structure |
	
	structure := OrderedCollection new.

	account buildReport: self from: structure.
	
	self resetIndentationLevel.
	^structure.! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 17:00:43'!
increaseIndentationLevel

	^ indentationLevel := indentationLevel + 1! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 17:00:43' prior: 50368740!
affectReport: aReportInProgress FromAccount: anAccount

	aReportInProgress add: (self indent: anAccount name).	
	self increaseIndentationLevel.
	
	aReportInProgress addAll: ( self indentCollection: ( AccountSummary  for: anAccount ) report).
	
	^aReportInProgress.! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 17:00:57' prior: 50368092!
affectReport: aReportInProgress FromPortfolio: aPortfolio

	aReportInProgress add: (self indent: aPortfolio name).	
	self increaseIndentationLevel.
	
	^aReportInProgress.! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 17:01:11'!
decreaseIndentationLevel

	^ indentationLevel := indentationLevel - 1! !
!AccountTreeStructureWithSummary methodsFor: 'report building' stamp: 'FD 11/15/2020 17:01:11' prior: 50369172!
cleanAfterAffectReport

	self decreaseIndentationLevel.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfAnEmptyPortfolioOnlyShowsBalance stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAPortfolioWithADepositAddsIt stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAPortfolioWithAWithdrawalAddsIt stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAPortfolioWithASendingTransferAddsIt stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAPortfolioWithAReceivingTransferAddsIt stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryShowsTheBalance stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfAnAccountWithMultipleTransactionsAddsThemAll stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountTreeStructureTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountTreeStructureTest #test02ReportOnlyShowsTheRootNameWhenUsedOnAnAccount stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountTreeStructureTest #test03ReportDoesNotShowTransactions stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountTreeStructureTest #test04ChildAccountIsIndented stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountTreeStructureTest #test05ChildAccountsAreIndented stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test01ReportOnlyShowsTheRootNameWhenPortfolioDoesNotHaveAccounts stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #AccountTreeStructureWithSummaryTest #test02ShowsEachAccountsSummary stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #NetTransferTest #test01NetTransferReportForAnAccountWithoutTransfersReturnsZero stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #NetTransferTest #test02NetTransferReportForAnAccountWithTransfersReturnsTheNetValue stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #TransferTest #test01ARegisteredTransferToAnotherAccountDiminishesBalance stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #TransferTest #test02ARegisteredTransferFromAnotherAccountIncreasesBalance stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #TransferTest #test03SenderKnowsItsTransfer stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #TransferTest #test04ReceiverKnowsItsTransfer stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #TransferTest #test05AnAccountCannotTransferToItself stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

!testRun: #TransferTest #test06TransferAmountShouldBeGreaterThanZero stamp: 'FD 11/15/2020 17:01:15'!
PASSED!

----SNAPSHOT----(15 November 2020 17:01:30) CuisUniversity-4383.image priorSource: 1065260!