

----QUIT----(30 August 2020 19:10:58) CuisUniversity-4365.image priorSource: 12340405!

----STARTUP---- (30 August 2020 19:10:59) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4365.image!


!testRun: #ArithmeticObjectIntervalStrategyTest #testSingleton stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testAccessing stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testAdd stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testAddToCollection stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testAt stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testComparing stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testCopyAndGrowBy stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testDeepCopy stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testDo stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testFirst stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testHash stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testIncludes stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testInvalidAt stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testInvalidCreation stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testLast stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testPrintOn stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testReject stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testRemoveIfAbsent stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testReverse stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testReverseDo stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testSelect stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testShallowCopy stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testSize stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testStoreOn stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testBetweenAndNotInclusive stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testHash stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testMax stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testMin stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testNotInclusiveBetweenAnd stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testNotInclusiveBetweenAndNotInclusive stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testTo stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testToBy stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testToByDo stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testToNegativeBy stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testToReverse stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testToYourself stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #NumberToArithmeticObjectAdapterTest #testPrintString stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #UndefinedArithmeticObjectValueExceptionTest #testSignal stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #EdgeTest #testAccessing stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #EdgeTest #testConverging stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #EdgeTest #testEqual stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #EdgeTest #testGoing stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #EdgeTest #testHash stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #EdgeTest #testIsIncidentTo stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #EdgeTest #testPrintString stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #EdgeTest #testStarting stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphPathFinderTest #testGraphPathNotFoundException stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphPathFinderTest #testInvalidPath stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphPathFinderTest #testPathToFarAwayPlaces stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphPathFinderTest #testPathToNeighborPlace stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphPathFinderTest #testSamePlace stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphPathFinderTest #testWithLoops stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphTest #testAccessImmutability stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphTest #testApplyUsingDepthFistSearch stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphTest #testConvergingEdges stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphTest #testCreateGraphWithInvalidEdge stamp: 'HAW 8/30/2020 19:11:04'!
PASSED!

!testRun: #GraphTest #testCreateGraphWithUnconnectedNodes stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testCreateGraphWithoutEdges stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testCreationImmutability stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testEdgesConvergingToSelf stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testEqual stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testEqualsDifferentGraphs stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testGraphCreation stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testHash stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testIncludesNode stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testIsAcyclicWhenGraphIsAcyclic stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testIsAcyclicWhenGraphIsCyclic stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testIsEmpty stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testNodesAdjacentTo stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testNodesWithoutEdges stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testNotEmpty stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testRemoveNode stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testRemoveNodeWithInvalidNode stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testRemoveNodes stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testSameNodesAs stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #GraphTest #testStartingEdges stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #TopologicalSortTest #testCreateWithCyclicGraph stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #TopologicalSortTest #testValue stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #TopologicalSortTest #testValueWithAnotherGraph stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #TopologicalSortTest #testWithGraphWithoutEdges stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testBaseUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testConvertToBaseUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDenominator stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideByDifferentBaseUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideByDifferentDomainDerivedUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideByDivideUnitSameBaseUnitNumerator stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideByDivideUnitSameDomainDerivedUnitNumerator stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideByInfinity stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideByMinusInfinity stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideByMultipliedUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideByNullUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideByNumber stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideBySameBaseUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testDivideBySameDomainDerivedUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testEqualDerivedSameBaseUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testEqualDifferentBaseUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testEqualDividedUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testEqualMultipliedUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testEqualNullUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testEqualSameBaseUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testFloatDividedByUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testFloatDividedByUnitTwice stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testFloatMultipliedByUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testFloatMultipliedByUnitTwice stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testIntegerDividedByUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testIntegerDividedByUnitTwice stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testIntegerMultipliedByUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testIntegerMultipliedByUnitTwice stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testMeasureCreation stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByDividedUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByInfinity stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByMinusInfinity stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByMultipliedUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByNullUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByNumber stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyBySimpleUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testName stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testNameFor stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testNameForMany stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testNameForOne stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testNameForUndefinedAmount stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testNothingAmount stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testNullMeasure stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testNumerator stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testReciprocal stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsDerivedUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsDerivedUnitOfOtherDomain stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsDifferentBaseUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsDividedUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsMultipliedUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsNullUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsSameBaseUnit stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #BaseUnitTest #testSign stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #CircularReadStreamTest #testAtBegin stamp: 'HAW 8/30/2020 19:11:05'!
PASSED!

!testRun: #CircularReadStreamTest #testAtEnd stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CircularReadStreamTest #testCurrent stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CircularReadStreamTest #testDistanceFrom stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CircularReadStreamTest #testDistanceFromTo stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CircularReadStreamTest #testDistanceTo stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CircularReadStreamTest #testDistanceToFrom stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CircularReadStreamTest #testNext stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CircularReadStreamTest #testNextANumberOfSomething stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CircularReadStreamTest #testPrevious stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CircularReadStreamTest #testPreviousANumberOfSomething stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CircularReadStreamTest #testRelativeDistanceFromTo stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAdd stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAddAssociativity stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAddBags stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAddCommutativity stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAddEquality stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAddExistingUnit stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAddFloatWithMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAddFractionWithMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAddImmutability stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAddIntegerWithMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAddNothing stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAtSameBaseUnitAsWithBaseUnits stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testAtSameBaseUnitAsWithDerivedUnits stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testCompoundMeasureImmutability stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testConvertAmountToBaseUnit stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testCreationWithMeasures stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testCreationWithMeasuresCopiesCollection stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testDivideByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testDivision stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testDivisionDistributivity stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testDivisionFloatByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testDivisionFractionByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testDivisionIntegerByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testDivisionMeasureByCompoundMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testEqual stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testEqualAllNothing stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testEqualNumber stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testEqualOneNothing stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testEqualWithDifferentBagSizeButRepresentSameEntity stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testEqualWithDifferentBagSizeIsNothing stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testHash stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testHashAllNothing stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testHashOneNothing stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testInvalidTruncated stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testIsCompoundMeasurement stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testIsFraction stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testIsNothing stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testLessThan stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testMeasures stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testModulo stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testModuloCompoundMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testModuloFloatByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testModuloFractionByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testModuloIntegerByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testModuloMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplication stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplicationByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplicationByZero stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplicationCommutativity stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplicationDistributivity stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplyFloatByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplyFractionByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplyIntegerByMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplyMeasureByCompoundMeasure stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testNegated stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testNegatedDistribution stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testNegatedZeroBag stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testNotEqual stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testNumberOfMeasures stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testPrintingForMany stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testPrintingForOne stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testRemFrom stamp: 'HAW 8/30/2020 19:11:06'!
PASSED!

!testRun: #CompoundMeasureTest #testRemainder stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testRemainderCompoundMeasure stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testRemainderFloatByMeasure stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testRemainderIntegerByMeasure stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testRemainderMeasure stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testRoundTo stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtract stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractBags stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractEquality stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractExistingUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractFloatWithMeasure stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractFractionWithMeasure stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractIntegerWithMeasure stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractMeasureByCompoundMeasure stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractNothing stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testTheZeroOfTheDomainIsEqualToZero stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testTruncated stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testUnitNameOf stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testWithWithBaseUnits stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testWithWithDerivedUnits stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testZeroDivision stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #CompoundMeasureTest #testZeroEqualsTheZeroOfTheDomain stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testAccessing stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testAccessingImmutability stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testAddUnitConversionRule stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testBreakEquivalence stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testConvertsTo stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testDerivedUnitIsEquivalentTo stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testFromToUse stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testGraph stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testGraphChange stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testIsEquivalentTo stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testNoUnitConversionRule stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testRemove stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #ConversionTableTest #testUnitConversionRuleUniqueness stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testBaseUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testConvertToBaseUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testDenominator stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testDivideByDividedUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testDivideByFloat stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testDivideByInfinity stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testDivideByInteger stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testDivideByMinusInfinity stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testDivideBySimpleUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testDividedByMultipliedUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testDividedByNullUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testEqualDividedUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testEqualMultipliedUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testEqualNullUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testEqualSimpleUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testFloatDividedByUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testFloatDividedByUnitTwice stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testFloatMultipliedByUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testFloatMultipliedByUnitTwice stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testIntegerDividedByUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testIntegerDividedByUnitTwice stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testIntegerMultipliedByUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testIntegerMultipliedByUnitTwice stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testMeasureCreation stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByDividedUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByFloat stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByInfinity stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByInteger stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByMinusInfinity stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByMultipliedUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByNullUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyBySimpleUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testName stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testNameForMany stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testNameForOne stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testNothingAmount stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testNullMeasure stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testNumerator stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testReciprocal stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testSameDomainAsDividedUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testSameDomainAsMultipliedUnit stamp: 'HAW 8/30/2020 19:11:07'!
PASSED!

!testRun: #DividedUnitTest #testSameDomainAsNullUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #DividedUnitTest #testSameDomainAsSameSimpleUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #DividedUnitTest #testSign stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #EvaluationTest #testAdd stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #EvaluationTest #testDivide stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #EvaluationTest #testIsCompoundMeasure stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #EvaluationTest #testModulo stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #EvaluationTest #testMultiply stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #EvaluationTest #testNegated stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #EvaluationTest #testRemainder stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #EvaluationTest #testSubtract stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #EvaluationTest #testTruncated stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MeasureConverterTest #testCanConvertTo stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MeasureConverterTest #testCompoundMeasureConversion stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MeasureConverterTest #testConvertToUsing stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MeasureConverterTest #testDefaultGraphPathFinder stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MeasureConverterTest #testDirectSearching stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MeasureConverterTest #testIndirectSearching stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MeasureConverterTest #testInvalidConversion stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MeasureConverterTest #testSameDomainConversion stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testAdd stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testAmount stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testBagCreationWithNumber stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testBaseUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testBetweenAnd stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testCompoundMeasureCreationWithMeasure stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testConvertAmountToBaseUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testConvertTo stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testConvertToBaseUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testDenominator stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testDivide stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testDivideByUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testDivideMeasure stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testEqualsCompoundMeasure stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testEqualsMeasure stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testIsCompoundMeasure stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testIsNothing stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testMax stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testMin stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testModulo stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testModuloMeasure stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testMultiplication stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testMultiplyByUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testMultiplyMeasure stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testNegated stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testNegative stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testNumerator stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testPositive stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testRemainder stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testRemainderMeasure stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testRoundTo stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testSameDomainAs stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testSameUnitAs stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testSubtract stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testToBy stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testToFromFixed stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testToInfinity stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testToToFixed stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testTruncated stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MinusInfinityTest #testUnitNameOf stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testBaseUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testConvertToBaseUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testDenominator stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideByDividedUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideByFloat stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideByInfinity stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideByInteger stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideByMinusInfinity stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideBySimpleUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testDividedByMultipliedUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testDividedByNullUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testEqualDividedUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testEqualMultipliedUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testEqualNullUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testEqualSimpleUnit stamp: 'HAW 8/30/2020 19:11:08'!
PASSED!

!testRun: #MultipliedUnitTest #testFloatDividedByUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testFloatDividedByUnitTwice stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testFloatMultipliedByUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testFloatMultipliedByUnitTwice stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testIntegerDividedByUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testIntegerDividedByUnitTwice stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testIntegerMultipliedByUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testIntegerMultipliedByUnitTwice stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testMeasureCreation stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByDividedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByFloat stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByInfinity stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByInteger stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByMinusInfinity stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByMultipliedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByNullUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyBySimpleUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testName stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testNameForMany stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testNameForOne stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testNothingAmount stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testNullMeasure stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testNumerator stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testReciprocal stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testSameDomainAsDividedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testSameDomainAsMultipliedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testSameDomainAsNullUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testSameDomainAsSameSimpleUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #MultipliedUnitTest #testSign stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testBaseUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testConvertToBaseUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testDenominator stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testName stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testNameForMany stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testNameForOne stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testNothingAmount stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testNullMeasure stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testNumerator stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testReciprocal stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testSameDomainAs stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testSign stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testBaseUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testConvertToBaseUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testDenominator stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testDivideByDividedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testDivideByMultipliedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testDivideByNullUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testDivideBySimpleUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testEqualBaseUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testEqualDerivedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testEqualDividedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testEqualMultipliedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testEqualNullUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testMeasureCreation stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testMultiplyByDividedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testMultiplyByMultipliedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testMultiplyByNullUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testMultiplyBySimpleUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testName stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testNameForMany stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testNameForOne stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testNumerator stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testReciprocal stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testSameDomainAsBaseUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testSameDomainAsDerivedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testSameDomainAsDividedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testSameDomainAsMultipliedUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testSameDomainAsNullUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NullUnitTest #testSign stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testAmount stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testBaseUnit stamp: 'HAW 8/30/2020 19:11:09'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testConvertTo stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testConvertToBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testConvertToIfSuccessfullDoIfFails stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testIsNothing stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testAdd stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testAmount stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testBagCreationWithNumber stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testBetweenAnd stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testCompoundMeasureCreationWithMeasure stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testConvertAmountToBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testConvertTo stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testConvertToBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testDenominator stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testDivide stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testDivideByUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testDivideMeasure stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testEqualsCompoundMeasure stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testEqualsMeasure stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testIsCompoundMeasure stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testIsNothing stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testMax stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testMin stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testModulo stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testModuloMeasure stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testMultiplication stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testMultiplyByUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testMultiplyMeasure stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testNegated stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testNegative stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testNumerator stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testPositive stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testRemainder stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testRemainderMeasure stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testRoundTo stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testSameDomainAs stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testSameUnitAs stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testSubtract stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testToBy stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testToFromFixed stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testToInfinity stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testToToFixed stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testTruncated stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #PlusInfinityTest #testUnitNameOf stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testConversionFactor stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testConvertToBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDenominator stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByDifferentBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByDifferentDomainDerivedUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByDivideUnitSameDerivedUnitNumerator stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByDividedUnitSameBaseUnitNumerator stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByMultipliedUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByNullUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideBySameBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideBySameDomainDerivedUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualDerivedSameBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualDifferentBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualDividedUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualMultipliedUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualNullUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualSameBaseUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualSameDerivedUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testMeasureCreation stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testMultiplyByDividedUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testMultiplyByMultipliedUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testMultiplyByNullUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testMultiplyBySimpleUnit stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testName stamp: 'HAW 8/30/2020 19:11:10'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testNameForMany stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testNameForOne stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testNothingAmount stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testNullMeasure stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testNumerator stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testReciprocal stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsDerivedUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsDerivedUnitOfOtherDomain stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsDifferentBaseUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsDividedUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsMultipliedUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsNullUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsSameBaseUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSign stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalUnitConversionFunctionTest #testAccessing stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalUnitConversionFunctionTest #testEqual stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalUnitConversionFunctionTest #testHash stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalUnitConversionFunctionTest #testInvalidValues stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #ProportionalUnitConversionFunctionTest #testValidValues stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAbs stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddAssociativity stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddBaseUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddBaseUnitAndDerivedUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddCommutativity stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddDerivedUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddDifferentBaseUnits stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddDifferentUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddDividedMeasure stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddFloatWithMeasure stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddFractionWithMeasure stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddInfinity stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddIntegerWithMeasure stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddMinusInfinity stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddMultipliedMeasure stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAddNumber stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAmount stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAmountCanBeConvertedToFloat stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAmountCanBeConvertedToFraction stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAmountCanBeConvertedToInteger stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testAtBaseUnitIfNone stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testBaseUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testBetweenAnd stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testBetweenAndNotInclusive stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testCompareGreaterThan stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testConvertAmountToBaseUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testConvertNothing stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testConvertTo stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testConvertToBaseUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDenominator stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivideInfinity stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivideMinusInfinity stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByDividedMeasure stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByMeasureBaseUnitOverBaseUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByMeasureBaseUnitOverDerivedUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByMeasureDerivedUnitOverBaseUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByNumber stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByZero stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionFloatByMeasure stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionFractionByMeasure stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionIntegerByMeasure stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionOfBaseUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionOfDerivedUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testEqual stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testEqualDifferentBaseUnit stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testEqualNothingWhenRepresentSameEntity stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testEqualNumber stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testGreaterThanEquals stamp: 'HAW 8/30/2020 19:11:11'!
PASSED!

!testRun: #SimpleMeasureTest #testHash stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testIntegerDivideCompoundMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidBetweenAnd stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidBetweenAndNotInclusive stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidConvertTo stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidGreaterThan stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidGreaterThanAgainstScalar stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidGreaterThanEquals stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidLessThan stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidLessThanEquals stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidMax stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidMin stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidNotInclusiveBetweenAnd stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidNotInclusiveBetweenAndNotInclusive stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testIsFraction stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testIsNothing stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testLessThan stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testLessThanEquals stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMax stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMeasures stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMin stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloByZero stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloFloatByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloFractionByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloInfinity stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloIntegerByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloMinusInfinity stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloOfBaseUnit stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloOfDerivedUnit stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplicationOfBaseUnit stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplicationOfDerivedUnit stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyByDividedMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyByMeasureAssociativity stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyByMultipliedMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyByNumber stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyFloatByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyFractionByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyInfinity stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyIntegerByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyMinusInfinity stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testNegated stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testNegative stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testNotEqual stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testNotInclusiveBetweenAnd stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testNotInclusiveBetweenAndNotInclusive stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testNumerator stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testPositive stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testPrintingForMany stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testPrintingForOne stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRemFrom stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderByZero stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderCompoundMeasureByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderFloatByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderInfinity stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderIntegerByMeasure stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderMinusInfinity stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderOfBaseUnit stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderOfDerivedUnit stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testRoundTo stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testSameDomainAs stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testSimplificationsAddingWithZero stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testSimplificationsDividingFromZero stamp: 'HAW 8/30/2020 19:11:12'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractAssociativity stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractBaseUnit stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractDerivedUnit stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractDividedMeasure stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractFloatWithMeasure stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractFractionWithMeasure stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractInfinity stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractIntegerWithMeasure stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractMinusInfinity stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractMultipliedMeasure stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testTheZeroOfTheDomainIsEqualToZero stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testTo stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testToAt stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testToAtByNegative stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testToBy stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testToByDo stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testToCollect stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testToFirst stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testToLast stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testToSize stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testTruncated stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testUnit stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testUnitNameOf stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #SimpleMeasureTest #testZeroIsEqualToTheZeroOfTheDomain stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #UnitConversionRuleTest #testAccessing stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #UnitConversionRuleTest #testConvert stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #UnitConversionRuleTest #testEqual stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #UnitConversionRuleTest #testHash stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #UnitConversionRuleToEdgeAdapterTest #testAccessing stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #UnitConversionRuleToEdgeAdapterTest #testEdgeProtocol stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #UnitConversionRuleToEdgeAdapterTest #testEdgeProtocolBehavior stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #UnitConversionRuleToEdgeAdapterTest #testEqual stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #UnitConversionRuleToEdgeAdapterTest #testHash stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #AllDatesUniverseTest #testDo stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #AllDatesUniverseTest #testFrom stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #AllDatesUniverseTest #testPrintOn stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #AllDatesUniverseTest #testTo stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testCreation stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testIncludesDayMovesToTheNextMonday stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testIncludesDayMovesToThePreviousMonday stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testIncludesDayWhenDayIsMonday stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testIncludesDayWhenDayIsSaturday stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testPrintOn stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #CardinalDayMonthRuleTest #testDifferentMonth stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #CardinalDayMonthRuleTest #testIncludesDayMovesToTheThirdMonday stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #CardinalDayMonthRuleTest #testIncludesDayWhenDayIsSaturday stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #CardinalDayMonthRuleTest #testPrintOn stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DayOfMonthRuleTest #testAccessing stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DayOfMonthRuleTest #testIncludes stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testAdd stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testAddRules stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testAlwaysFulfills stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testAsOrderedCollection stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testAsSortedCollection stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testComposite stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testCreation stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testDo stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testExcludedFromTo stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testExcludedIn stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testExcludes stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testExcludesAll stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testIncludedFromTo stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testIncludedIn stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testIncludes stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testIncludesAll stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testInvalidDo stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testIsEmpty stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testRemoveAllRules stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testRemoveIfAbsent stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testRemoveRule stamp: 'HAW 8/30/2020 19:11:13'!
PASSED!

!testRun: #DefinedByRulesTest #testRulesCopy stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #DefinedByRulesTest #testRulesThatInclude stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #DefinedByRulesTest #testSize stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #DefinedByRulesTest #testSpecies stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testAccessing stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testEquals stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testImmutableValue stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testMonday stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testMonth stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testNext stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testNextFiltered stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testPreviousFiltered stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testPrintOn stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testSaturday stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testSunday stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #FilteredGregorianDateTest #testToday stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #IntervalConstrainedInclusionRuleTest #testFrom stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #IntervalConstrainedInclusionRuleTest #testIncludes stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #IntervalConstrainedInclusionRuleTest #testInstanceCreating stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #IntervalConstrainedInclusionRuleTest #testPrintString stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #IntervalConstrainedInclusionRuleTest #testTo stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testDaysBetween stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testExcludedFromTo stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testExcludedIn stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testExcludes stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testExcludesAll stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testIncludedFromTo stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testIncludedIn stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testIncludes stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testIncludesAll stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testName stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testNegated stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testNextNegativeDuration stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testNextPositiveDuration stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testPrintOn stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testStream stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAbsoluteDate stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAcceptAVisitor stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAsSmalltalkDate stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAt stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAtMidnight stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAtNoon stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAtTimeOfDay stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDay stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDayNumber stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDayOfMonth stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDaysFrom stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDaysTo stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDefaultIntervalIncrement stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testEqual stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testHash stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testIntervalStrategy stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testIsFirstDayOfMonth stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testIsFirstDayOfYear stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testIsLastDayOfMonth stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testIsLastDayOfYear stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testLessThan stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testMonth stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testMonthOfYear stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNext stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNextDay stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNumberOfDaysFromBaseDate stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNumberOfDaysFromBeginningOfMonth stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNumberOfDaysFromJanuaryFirst stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNumberOfDaysToEndOfMonth stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNumberOfDaysToEndOfYear stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testPrevious stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testPreviousDay stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testPrintOn stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testToEvery stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testToEveryDay stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testToEveryDayNumber stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testToEveryDayNumbers stamp: 'HAW 8/30/2020 19:11:14'!
PASSED!

!testRun: #RelativeGregorianDateTest #testYear stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #SpecificDayRuleTest #testAccessing stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #SpecificDayRuleTest #testIncludes stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #SpecificObjectInclusionRuleTest #testAccessing stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #SpecificObjectInclusionRuleTest #testIncludes stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #SpecificObjectInclusionRuleTest #testPrintOn stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterStreamTest #testAtEnd stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterStreamTest #testCurrent stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterStreamTest #testDo stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterStreamTest #testReset stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testAddArgentineLaw23555Rule stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testAddCardinalDayMonthRuleRule stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testAddDateRule stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testAddDayOfMonthRule stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testAddDayRule stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testAddRuleFrom stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testAddRuleFromTo stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testAddRules stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testAddRulesFrom stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testAddRulesFromTo stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testDateRule stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testDayOfMonthRule stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testDayRule stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testDaysBetween stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testExcludedFromTo stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testExcludedIn stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testExcludes stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testExcludesAll stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testFromString stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testHash stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testIncludedFromTo stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testIncludedIn stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testIncludes stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testIncludesAll stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testNegatedIncludes stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testNegatedNext stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testNextNegativeDuration stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testNextPositiveDuration stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testNumberOfDaysBetweenTwoDates stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testPrintOn stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testRemoveAllRules stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testRuleFromTo stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testRules stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testRulesThatIncludeADate stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #TimeLineFilterTest #testStream stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #UniverseTest #testDo stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testEqual stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testHash stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testLastDayNumber stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testLessThan stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testName stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testNext stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testNumber stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testNumberOfDaysFromBeginningOfYear stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testNumberOfDaysIn stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testPrevious stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testPrintString stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FixedGregorianDateTest #test29OfFebruaryToEveryDayOfMonth stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FixedGregorianDateTest #testAsSmalltalkDate stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FixedGregorianDateTest #testAt stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FixedGregorianDateTest #testAtMidnight stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FixedGregorianDateTest #testAtNoon stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FixedGregorianDateTest #testAtTimeOfDay stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FixedGregorianDateTest #testCreation stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FixedGregorianDateTest #testDay stamp: 'HAW 8/30/2020 19:11:15'!
PASSED!

!testRun: #FixedGregorianDateTest #testDayNumber stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testDayOfMonth stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testDaysFrom stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testDaysTo stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testEqual stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testHash stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testImmutableValue stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIncludesDate stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIncludesDateTime stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIncludesMonthOfYear stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIncludesYear stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testInvalidCreation stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsApril stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsAugust stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsDecember stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsFebruary stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsFirstDayOfMonth stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsFirstDayOfYear stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsFriday stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsJanuary stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsJuly stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsJune stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsLastDayOfMonth stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsLastDayOfYear stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsMarch stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsMay stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsMonday stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsNovember stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsOctober stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsSaturday stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsSeptember stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsSunday stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsThursday stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsTuesday stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsWednesday stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testLessThan stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testMonth stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testMonthOfYear stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNext stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNextDay stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNextDayOfMonth stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNextInNumberOfDays stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNextInWeeks stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNextMonth stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNumberOfDaysFromBaseDate stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNumberOfDaysFromBeginningOfMonth stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNumberOfDaysFromJanuaryFirst stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNumberOfDaysToEndOfMonth stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testNumberOfDaysToEndOfYear stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testPrevious stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testPreviousDay stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testPreviousDayOfMonth stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testPreviousInNumberOfDays stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testPreviousInWeeks stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testPrintString stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testTheBeginningAndTheEndOfTime stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testTo stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testToBy stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testToByDo stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testToByReverse stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryBeginningDifferentDay stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryBeginningSameDay stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryDayBeginningDifferentDay stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryDayBeginningSameDay stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryDayNumber stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryDayNumbers stamp: 'HAW 8/30/2020 19:11:16'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryDayOfMonth stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #FixedGregorianDateTest #testToNegativeBy stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #FixedGregorianDateTest #testTomorrow stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #FixedGregorianDateTest #testVisitorAccessing stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #FixedGregorianDateTest #testYear stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #FixedGregorianDateTest #testYesterday stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #GregorianDateTimeTest #testAccessing stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #GregorianDateTimeTest #testAdd stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #GregorianDateTimeTest #testComparing stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #GregorianDateTimeTest #testFirstTimeOfDay stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #GregorianDateTimeTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #GregorianDateTimeTest #testHash stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #GregorianDateTimeTest #testLastTimeOfDay stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #GregorianDateTimeTest #testLessThan stamp: 'HAW 8/30/2020 19:11:17'!
PASSED!

!testRun: #GregorianDateTimeTest #testNow stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testPrintString stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testReverse stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testSameDateAs stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testSameTimeOfDayAs stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testSpecialDateTimes stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testSubtract stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testTimeFrom stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testTimeFromMidnight stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testTimeTo stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testTimeToEndOfDay stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testTo stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testToBy stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testToByDo stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testToByMinutesDo stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testToNegativeByDo stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testWithDay stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDateTimeTest #testWithDayOfMonth stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testComma stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testComparing stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testCreation stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testDateOfYear stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testDaysFrom stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testDaysTo stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testDivisionSymbolCanBeUseToCreateADate stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testEqual stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testHash stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testInvalidCreation stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testIsFirstDayOfMonth stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testIsFirstDayOfYear stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testIsLastDayOfMonth stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testIsLastDayOfYear stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNext stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNextANumberOfDays stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNumberOfDaysFromBeginningOfMonth stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNumberOfDaysFromJanuaryFirst stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNumberOfDaysToEndOfMonth stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNumberOfDaysToEndOfYear stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testPrevious stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testPreviousANumberOfDays stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testPrintString stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testTo stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToBy stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToByDo stamp: 'HAW 8/30/2020 19:11:18'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToEveryDayNumber stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToEveryDayNumbers stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToNegativeBy stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToReverse stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testCommonDaysMeasure stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testDayCreation stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testDayPositionedInWeek stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testDays stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testDaysFrom stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testDaysTo stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testEqual stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testGlobalVariables stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testInvalidNameCreation stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testIsFriday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testIsMonday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testIsSaturday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testIsSunday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testIsThursday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testIsTuesday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testIsWednesday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testName stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testNext stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testNextInANumberOfDays stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testNumberOfDaysSinceSunday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testPrevious stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testPreviousInANumberOfDays stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testPrintString stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testSinceSunday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testTo stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testToBy stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testToDo stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testToNegativeBy stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testToNegativeByDo stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianDayTest #testToday stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testCardinalDay stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testCreation stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testCurrent stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testDates stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testEqual stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testFirstDate stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testFirstDay stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testHash stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testIncludesDate stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testIncludesDateTime stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testIncludesMonthOfYear stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testIncludesYear stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testInvalidCreation stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testLastDate stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testLastDay stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testLastDayNumber stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testLessThan stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testMonthsFrom stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testMonthsTo stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testName stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testNext stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testNextANumberOfMonths stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testNextMonthDefinedAs stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testNumberOfDays stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testPrevious stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testPreviousANumberOfMonths stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testPreviousMonthDefinedAs stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testPrintString stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testTo stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testToBy stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testToByDo stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testToByYearsDo stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testToNegativeBy stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testToReverse stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthTest #testApril stamp: 'HAW 8/30/2020 19:11:19'!
PASSED!

!testRun: #GregorianMonthTest #testAugust stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testComma stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testCommonMonthsMeasure stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testCurrent stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testDayOfMonthCreation stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testDecember stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testDivisionSymbolCanBeUseToCreateADayOfMonth stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testFebruary stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testFirstDayOfMonth stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testGlobalVariables stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIdentity stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsApril stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsAugust stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsDecember stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsFebruary stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsJanuary stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsJuly stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsJune stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsMarch stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsMay stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsNovember stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsOctober stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testIsSeptember stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testJanuary stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testJuly stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testJune stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testLastDayOfMonth stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testLessThan stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testMarch stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testMay stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testMonthCreation stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testMonthsFrom stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testMonthsTo stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testNamed stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testNext stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testNextInANumberOfMonths stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testNovember stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testNumberOfMonthsPerYear stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testOctober stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testOf stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testOfYear stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testPrevious stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testPreviousInANumberOfMonths stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testSeptember stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testTo stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testToBy stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testToByDo stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testToNegativeByDo stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianMonthTest #testToReverse stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianTimespanTest #testAccessing stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianTimespanTest #testAsInterval stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianTimespanTest #testCanCreateATimespanAfterATimeMeasure stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianTimespanTest #testCanCreateATimespanBeforeATimeMeasure stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianTimespanTest #testEqual stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianTimespanTest #testFromInterval stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianTimespanTest #testHash stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianTimespanTest #testPrintString stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianTimespanTest #testTo stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testCurrent stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testDates stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testDaysInFebruary stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testDistanceTo stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testEqual stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testFirstDate stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testFirstDay stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testFirstMonth stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testHash stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testIncludesDate stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testIncludesDateTime stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testIncludesMonthOfYear stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testIncludesYear stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testInvalidNextANumberOfYears stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testInvalidPreviousANumberOfYears stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testInvalidYear stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testIsLeap stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testLastDate stamp: 'HAW 8/30/2020 19:11:20'!
PASSED!

!testRun: #GregorianYearTest #testLastDay stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testLastMonth stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testLessThan stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testMonths stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testMonthsOfYearsAccessing stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testNext stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testNextANumberOfYears stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testNextLeapYear stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testNumber stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testNumberOfDays stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testNumberOfDaysFromBaseDate stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testPrevious stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testPreviousANumberOfYears stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testPreviousLeapYear stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testPrintString stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testTo stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testToBy stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testToByDo stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testToByReverse stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testToNegativeBy stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testYearsFrom stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testYearsTo stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #GregorianYearTest #testZeroYears stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testEqual stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testHash stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testLastDayNumber stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testLessThan stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testName stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testNext stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testNumber stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testNumberOfDaysFromBeginningOfYear stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testNumberOfDaysIn stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testPrevious stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testPrintString stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #MoreThanOnePointInTimeIntervalStrategyTest #testIsValidIntervalFromToBy stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testEqual stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testGreaterThanFebruary stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testHash stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testLastDayNumber stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testLessThan stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testLessThanFebruary stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testName stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testNumber stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testNumberOfDaysFromJanuaryFirst stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testNumberOfDaysIn stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testPrintString stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testDayOfMonthCreation stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testEqual stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testGreaterThanFebruary stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testHash stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testLastDayNumber stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testLessThan stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testLessThanFebruary stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testName stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testNumber stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testNumberOfDaysFromJanuaryFirst stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testNumberOfDaysIn stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testPrintString stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyOneDaysGregorianMonthTest #testThirtieth stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #ThirtyOneDaysGregorianMonthTest #testThirtyfirst stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testAdd stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testCanCreateAsWrittenInEnglish stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testCanNotCreateTimeOfDayWithSemiColonWhenReceiverHasSeconds stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testComparing stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testCreation stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testCreationHour stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testCreationMilliseconds stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testCreationMinute stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testCreationSecond stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testFirstTimeOfDay stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testGreaterThan stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testHash stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testInvalidCreation stamp: 'HAW 8/30/2020 19:11:21'!
PASSED!

!testRun: #TimeOfDayTest #testLastTimeOfDay stamp: 'HAW 8/30/2020 19:11:22'!
PASSED!

!testRun: #TimeOfDayTest #testLessThan stamp: 'HAW 8/30/2020 19:11:22'!
PASSED!

!testRun: #TimeOfDayTest #testNow stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testOneMillisecond stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testOneSecond stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testPrintString stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testReverse stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testSubtract stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testTimeFrom stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testTimeFromMidnight stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testTimeTo stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testTimeToEndOfDay stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testTo stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testToBy stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testToByDo stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testToNegativeByDo stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testTwentyFourHours stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeOfDayTest #testZeroHours stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeUnitsTest #testAllUnits stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeUnitsTest #testDay stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeUnitsTest #testHour stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeUnitsTest #testMillisecond stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeUnitsTest #testMinute stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeUnitsTest #testMonth stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeUnitsTest #testSecond stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeUnitsTest #testWeek stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #TimeUnitsTest #testYear stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #BinarySearchTest #testquickFindFirst stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #BinarySearchTest #testquickFindLast stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #BinarySearchTest #testquickIndexOf stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #BinarySearchTest #testquickIndexOfWithSemistableOrder stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectTest #testIdentitySet stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectTest #testOrderedCollection stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectTest #testSet stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectTest #testSortedCollection stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testAsCommaSeparatedOnWorksAsCommaStringAnd stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testAsCommaStringAndDoesNotAddAnythingWhenEmpty stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testAsCommaStringAndDoesNotAddAnythingWhenHasOneElement stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testAsCommaStringAndSeparatesWithAndWhenTwoOneElements stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testAsCommaStringAndSeparatesWithCommaButLastOneWithAndWhenMoreThanTwoElements stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testAverageFailsWhenTheCollectionIsEmpty stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testAverageIfEmptyCalculatesItAsUsualWhenTheCollectionIsNotEmpty stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testAverageIfEmptyEvaluatesEmptyBlockWhenTheCollectionIsEmpty stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testGroupByHavingSelectsTheResultOfGroupBy stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testGroupByReturnsADictionaryThatGroupsACollectionByThePluggableKey stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testIsCollection stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testItMaintainsTheSameCollectionSpecies stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testSetEquality stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionContainsASingleLevelOfElementsItReturnsTheSameCollection stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionContainsMoreThanTwoLevelsltReturnsTheElementsOfAllNestedCollections stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionContainsStringCollectionsItDoesNotFlattenTheStrings stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionContainsStringsItReturnsTheSameCollection stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionContainsTwoLevelsOfElementsItReturnsTheElementsOfAllNestedCollections stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionIsEmptyItReturnsTheSameCollection stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #CollectionTest #testsAverageWorksWithABlock stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #DictionaryTest #testIsCollection stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #DictionaryTest #testKeyNotFoundSignalTheRightMessage stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testAt stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testDoesNotIncludeNumbersOutsideTheInInterval stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testDoesNotIncludeObjectsThatAreNotNumbers stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testDoesNotIncludedNumbersThatAreInRangeButNotReachedByTheStep stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testDoesNotIncludedNumbersThatAreInRangeButNotReachedByTheStepWithReversedIntervals stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testFloatInterval stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testFloatToByDo stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testIncludedNumbersRespectAStepDifferentToOne stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testIncludedNumbersRespectNegativeSteps stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testIncludesNumbersInsideTheInterval stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testIncludesNumbersInsideTheIntervalEvenForReversedIntervals stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testIntegerInterval stamp: 'HAW 8/30/2020 19:11:23'!
PASSED!

!testRun: #IntervalTest #testIntegerToByDo stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #IntervalTest #testIntervalWithOneNumberAndNegativeStepBiggerThanOneIncludeOnlyThatNumber stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #IntervalTest #testIntervalWithOneNumberAndNegativeStepIncludeOnlyThatNumber stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #IntervalTest #testIntervalWithOneNumberAndStepBiggerThanOneIncludesOnlyTheNumber stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #IntervalTest #testIntervalWithOneNumberIncludesOnlyTheNumber stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #OrderedCollectionTest #testIsCollection stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #OrderedCollectionTest #testStreamContentsWorksAsExpected stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #OrderedCollectionTest #testWriteStreamOnOrderedCollectionGrowsAsExpected stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #OrderedDictionaryTest #testOrder stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #OrderedDictionaryTest #testRemove stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testCombinationsAtATimeDoShouldEvaluateBlockWithEmptyCollection stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testCombinationsAtATimeDoWorksAsExpected stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testDoSeparatedByDoesNotValueSeparatedBlockForCollectionsOfOneElement stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testDoSeparatedByDoesNotValueSeparatedBlockOnLastElement stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testDoSeparatedByDoesNothingForEmptyCollection stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testFirstAvailableReturnsAllObjectsWhenRequestedMoreThanTheSize stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testFirstAvailableReturnsAllObjectsWhenRequestedTheReceiversSize stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testFirstAvailableReturnsTheFirstRequestedObjectsWhenTheyAreAvailable stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testLastAvailableReturnsAllObjectsWhenRequestedMoreThanTheSize stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testLastAvailableReturnsAllObjectsWhenRequestedTheReceiversSize stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testLastAvailableReturnsTheLastRequestedObjectsWhenTheyAreAvailable stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testWithIndexDoSeparatedByDoesNotValueSeparatedBlockForCollectionsOfOneElement stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testWithIndexDoSeparatedByDoesNotValueSeparatedBlockOnLastElement stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #SequenceableCollectionTest #testWithIndexDoSeparatedByDoesNothingForEmptyCollection stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #TextTest #testIsText stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #WeakIdentitySetTest #test stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #BehaviorTest #testAllAccessToInstVarReturnsAccessReceiversBranch stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #BehaviorTest #testAllAccessToIsEmptyForVariableNotDefinedInClass stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #BehaviorTest #testAllBroadAccessToReturnsAccessInAllHierarchy stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #BehaviorTest #testAllSuperclassesUpToFailsWhenWantsToStopOnInvalidSuperclass stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #BehaviorTest #testAllSuperclassesUpToPutsFirstSuperclassesFirst stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #BehaviorTest #testAllSuperclassesUpToStopsOnRightClass stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #BehaviorTest #testAllUnreferencedInstanceVariablesReturnsOnlyUnreferencedVariables stamp: 'HAW 8/30/2020 19:11:24'!
PASSED!

!testRun: #BehaviorTest #testHasReferencesToInstanceVariableNamedLooksInClassOnly stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #BehaviorTest #testHighestClassImplementingReturnsReceiverWhenNoOtherSuperclassImplementsSelector stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #BehaviorTest #testHighestClassImplementingReturnsTheTopSuperclassImplementingSelector stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #BehaviorTest #testHighestClassImplementingValuesIfNoneBlockWhenSelectorIsNotImplemented stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #BehaviorTest #testIsInstanceVariableNamedReferencedInHierarchyLooksReferencesInHierarchy stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #BehaviorTest #testProtoObjectAllRegularInstVarNamesDoesNotFail stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #BehaviorTest #testUnreferencedInstanceVariablesReturnsOnlyUnreferencedVariables stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #BehaviorTest #testWithAllSuperclassesUpToIncludesReceiverClass stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #ClassTest #testDefinitionReplacingCategoryWithReplacesTheCategoryWithTheGivenOne stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #ClassTest #testDefinitionReplacingCategoryWithWorksWhenCategoryIsNil stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateAndTimeTest #testCreation stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateAndTimeTest #testDayOfWeek stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateAndTimeTest #testInvalidOperations stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateAndTimeTest #testIsDateAndTime stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateAndTimeTest #testLessDateAndTime stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateAndTimeTest #testOperations stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateAndTimeTest #testToByDo stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateTest #testCreation stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateTest #testInvalidOperations stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateTest #testLessDate stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DateTest #testLessDuration stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #DurationTest #testPrintString stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #MonthTest #testCreation stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #MonthTest #testPrintString stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #TimeTest #testCreation stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #TimeTest #testEqual stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #TimeTest #testSqueakInquiries stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #TimeTest #testTimePartsArePositive stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #TimespanTest #testIsTimespan stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #WeekTest #testCreation stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #WeekTest #testIncluding stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #WeekTest #testInvalidOperations stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #WeekTest #testPrintString stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #WeekTest #testWeekDayNames stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #YearTest #testCreation stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #YearTest #testIncluding stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test01isGetterWhenSameSelectorAsInstanceVariableAndOnlyReturnsThatVariable stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test01withPropertiesDoIfSelectorEvaluatesFirstBlockWhenMethodHasProperties stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test02isNotGetterWhenDifferentSelectorAsInstanceVariable stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test02removePropertiesRestoresPenultimalLiteralToSelector stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test03isNotGetterWhenSameSelectorAsInstanceVariableButDoesOtherThingBesidesReturningVariable stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test03removePropertiesKeepsSelectorIfMethodDoesNotHaveProperties stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test04isSetterWhenSameKeywordSelectorAsInstanceVariableAndOnlySetsTheVariable stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test04withPropertiesDoIfSelectorEvaluatesSecondBlockWhenMethodHasNoProperties stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test05hasLiteralSuchThatTravelsListeralsWhenMethodHasProperties stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test05isNotSetterWhenDifferentKeywordSelectorAsInstanceVariable stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test06hasLiteralSuchThatTravelsListeralsWhenMethodHasNoProperties stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test06isNotSetterWhenSameKeywordSelectorAsInstanceVariableButDoesNotAssignParameter stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test0701withPropertiesDoReturnsNilIfMethodHasNoProperties stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test07AccessorDescriptionIsGetterForAGetter stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test07withPropertiesDoEvaluatesBlockOnlyWhenMethodHasProperties stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test08AccessorDescriptionIsSetterForASetter stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test08hasLiteralThoroughReturnTrueWhenMethodHasPropertiesAndHasLiteral stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test09AccessorDescriptionIsReadForMethodThatReadsInstanceVariable stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test09hasLiteralThoroughReturnFalseWhenMethodHasPropertiesAndHasNoLiteral stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test10AccessorDescriptionIsWriteForMethodThatWritesInstanceVariable stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test10hasLiteralThoroughReturnTrueWhenMethodHasNoPropertiesAndHasLiteral stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test11AccessorDescriptionIsWriteReadForMethodThatWritesAndReadInstanceVariable stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test11hasLiteralThoroughReturnFalseWhenMethodHasNoPropertiesAndHasNoLiteral stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test12pragmaAtReturnsPragmaIfExist stamp: 'HAW 8/30/2020 19:11:25'!
PASSED!

!testRun: #CompiledMethodTest #test13pragmaAtReturnsNilIfPragmaDoesNotExist stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test14pragmasReturnsCollectionOfMethodPragmas stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test15pragmasReturnsEmptyCollectionWhenMethodHasNoProperties stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test16propertiesReturnsAnNewAdditionalMethodStateWhenNoPropertiesHasBeenSet stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test17propertiesReturnsTheAlreadySetAdditionalMethodStateWhenHasProperties stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test18propertyKeysAndValuesDoIteratesOverProperties stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test19propertyKeysAndValuesDoDoesNotEvaluateBlockWhenMethodHasNoProperties stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test20propertyValueAtReturnsPropertyValueWhenSetted stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test21propertyValueAtReturnsNilWhenPropertyIsNotFound stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test22propertyValueAtReturnsNilWhenMethodHasNoProperties stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test23propertyValueAtIfAbsetReturnsPropertyValueWhenFound stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test24propertyValueAtIfAbsetEvaluatesIfAbsentBlockWhenNotFound stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test25propertyValueAtIfAbsetEvaluatesIfAbsentBlockWhenMethodHasNoProperties stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test26propertyValueAtPutCreatesPropertiesWithNewOne stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test27propertyValueAtPutReplacesPropertyIfAlreadyExisted stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test28propertyValueAtPutAddsNewPropertyIfPropertiesExisted stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test29selectorReturnsMethodSelectorWhenNoProperties stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test30selectorReturnsMethodSelectorWhenHasProperties stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test31SettingSelectorWhenHasNoProperties stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #CompiledMethodTest #test32SettingSelectorWhenHasProperties stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #DelayTest #testBounds stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #DelayTest #testMultiProcessWaitOnSameDelay stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #DelayTest #testMultiSchedule stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #MonitorTest #testExample1 stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #MonitorTest #testExample2 stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #MonitorTest #testMonitorNotGainingUnwantedSignalsDuringUnwinding stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #ProcessTest #testAtomicSuspend stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #SemaphoreTest #testCritical stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #SemaphoreTest #testCriticalIfError stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #SemaphoreTest #testSemaAfterCriticalWait stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #SemaphoreTest #testSemaInCriticalWait stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #SemaphoreTest #testWaitAndWaitTimeoutTogether stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #SemaphoreTest #testWaitTimeoutMSecs stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!classDefinition: #BecomeTestExperiment category: #'BaseImageTests-Kernel' stamp: 'HAW 8/30/2020 19:11:26'!
Object subclass: #BecomeTestExperiment
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'BaseImageTests-Kernel'!

!testRun: #BecomeTest #testBecome stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!classDefinition: #BecomeTestExperiment category: #'BaseImageTests-Kernel' stamp: 'HAW 8/30/2020 19:11:26'!
Object subclass: #BecomeTestExperiment
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'BaseImageTests-Kernel'!

!testRun: #BecomeTest #testShapeMutation stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #BooleanTest #testAndAndAndAndTrueTable stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #BooleanTest #testAndAndAndTrueTable stamp: 'HAW 8/30/2020 19:11:26'!
PASSED!

!testRun: #BooleanTest #testAndAndTrueTable stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #BooleanTest #testIsBoolean stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #BooleanTest #testOrOrOrOrTrueTable stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #BooleanTest #testOrOrOrTrueTable stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #BooleanTest #testOrOrTrueTable stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterSetTest #testIncludesReturnsFalseForCharacterNotIncluded stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterSetTest #testIncludesReturnsFalseForObjectsThatAreNotCharacters stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterSetTest #testIncludesReturnsTrueForCharacterIncluded stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterTest #testCaseConversion stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterTest #testFromUtf8 stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterTest #testIsCharacter stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterTest #testSomeLatinCharsFromUtf8 stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterTest #testSomeLatinCharsToUtf8 stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterTest #testSorting stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterTest #testTestingMethods stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #CharacterTest #testToUtf8 stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNilIfNotNil0Arg stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNilIfNotNil0ArgAsVar stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNilIfNotNil1Arg stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNilIfNotNil1ArgAsVar stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNil0Arg stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNil0ArgAsVar stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNil1Arg stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNil1ArgAsVar stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNilIfNil0Arg stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNilIfNil0ArgAsVar stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNilIfNil1Arg stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNilIfNil1ArgAsVar stamp: 'HAW 8/30/2020 19:11:27'!
PASSED!

!testRun: #ProcessorTest #testGrabProcessor stamp: 'HAW 8/30/2020 19:11:28'!
PASSED!

!testRun: #ProcessorTest #testGrabProcessorOnlyForNoTimeout stamp: 'HAW 8/30/2020 19:11:30'!
PASSED!

!testRun: #ProcessorTest #testGrabProcessorOnlyForTimeout stamp: 'HAW 8/30/2020 19:11:31'!
PASSED!

!testRun: #ProcessorTest #testValueUnpreemptively stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #SpecialSelectorsTest #testCollectionAtSymbol stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #SpecialSelectorsTest #testNumberAtSymbol stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StrikeFontTest #testBaseAndDerivedFont stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StrikeFontTest #testBaseAndDerivedFontSanity stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testAfterBlanksEndsWith stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testArticle stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testAsUtf8 stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testAsUtf8WithNCRs stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testBase64 stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testCaseConversion stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testEncompassParagraph1 stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testEncompassParagraph2 stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testEncompassParagraph3 stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testEncompassParagraph4 stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testEncompassParagraph5 stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testFirstNoBlankIndex stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testIsString stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testLastNoBlankIndex stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testLineSeparators stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testSorting stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testWithBlanksTrimmed stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testWithoutLeadingBlanks stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testWithoutSeparators stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #StringTest #testWithoutTrailingBlanks stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #ArrayTest #testAntepenultimateIfAbsentReturnsAntepenultimateIfExists stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #ArrayTest #testAntepenultimateIfAbsentValuesIfAbsentBlockWhenNoAntepenultimate stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #ArrayTest #testAntepenultimateReturnsAntepenultimateIfExists stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #ArrayTest #testAntepenultimateSignalsErrorWhenCollectionIsNotBigEnough stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #ArrayTest #testCanNotInsertShiftingRightWhenInsertionPointIsBiggerThanSize stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #ArrayTest #testCanNotInsertShiftingRightWhenInsertionPointIsLessThanOne stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #ArrayTest #testInsertShiftingRightLoosesLastElementAndKeepsPreviousOnes stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #ArrayTest #testInsertShiftingRightReplacesElementWhenSizeIsOne stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #ArrayTest #testInsertShiftingRightReplacesLastElementWhenInsertingAtLastIndex stamp: 'HAW 8/30/2020 19:11:33'!
PASSED!

!testRun: #ArrayTest #testIsArray stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ArrayTest #testIsCollection stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ArrayTest #testLastIfEmptyReturnsLastWhenExist stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ArrayTest #testLastIfEmptyValuesEmptyBlockWhenEmpty stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ArrayTest #testLastSignalsErrorWhenEmpty stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ArrayTest #testPenultimateIfAbsentReturnsPenultimateIfExists stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ArrayTest #testPenultimateIfAbsentValuesIfAbsentBlockWhenNoPenultimate stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ArrayTest #testPenultimateReturnsPenultimateIfExists stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ArrayTest #testPenultimateSignalsErrorWhenCollectionIsNotBigEnough stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #FloatArray64Test #testIsCollection stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #FloatArray64Test #testZeroArrayDividend stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #FloatArray64Test #testZeroArrayDivisor stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #FloatArray64Test #testZeroDividend stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #FloatArray64Test #testZeroDivisor stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #FloatArrayTest #testIsType stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #FloatArrayTest #testZeroArrayDividend stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #FloatArrayTest #testZeroArrayDivisor stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #FloatArrayTest #testZeroDividend stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #FloatArrayTest #testZeroDivisor stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testBlockClosuresCanBeUsedAsHandlingCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithExceptionTypeAndExceptionType stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithExceptionTypeAndFilterCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithExceptionTypeAndOrCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithFilterConditionAndExceptionType stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithFilterConditionAndFilterCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithFilterConditionAndOrCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithOrConditionAndExceptionType stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithOrConditionAndFilterCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithOrConditionAndOrCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithExceptionTypeAndExceptionType stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithExceptionTypeAndFilterCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithExceptionTypeAndOrCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithFilterConditionAndExceptionType stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithFilterConditionAndFilterCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithFilterConditionAndOrCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithOrConditionAndExceptionType stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithOrConditionAndFilterCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithOrConditionAndOrCondition stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testExceptionsFollowTheExpectedHierarchy stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testFilterConditionWorksAsExcpetedWhenHandlingException stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testOrConditionWorksAsExcpetedWhenHandlingException stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testDoubleOuterPass stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testDoublePassOuter stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testDoubleResume stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testHandlerFromAction stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testNoTimeout stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testNonResumableFallOffTheEndHandler stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testNonResumableOuter stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testNonResumablePass stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testResignalAs stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testResignalAsUnwinds stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testResumableFallOffTheEndHandler stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testResumableOuter stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testResumablePass stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSignalFromHandlerActionTest stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleEnsure stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleEnsureTestWithError stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleEnsureTestWithNotification stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleEnsureTestWithUparrow stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleIsNested stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleOuter stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimplePass stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleResignalAs stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleResume stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleRetry stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleRetryUsing stamp: 'HAW 8/30/2020 19:11:34'!
PASSED!

!testRun: #ExceptionTests #testSimpleReturn stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ExceptionTests #testTimeoutWithZeroDuration stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ProcessTerminateBug #testSchedulerTermination stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ProcessTerminateBug #testTerminationDuringUnwind stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ProcessTerminateBug #testUnwindFromActiveProcess stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ProcessTerminateBug #testUnwindFromForeignProcess stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ArrayLiteralTest #testIsArray stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ArrayLiteralTest #testReservedIdentifiers stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ArrayLiteralTest #testSymbols stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test01isAtSuperclassWhenIndexIsInSuperclass stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test02isNotAtSuperclassWhenIndexIsOutsideSuperclass stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test03isAtClassNameWhenIndexIsInClassName stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test04isNotAtClassNameWhenIndexIsOutsideClassName stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test05isAtInstanceVariablesWhenIndexIsInInstanceVariablesString stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test06isNotAtInstanceVariablesWhenIndexIsOutsideInstanceVariablesString stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test07CanAccessSuperclass stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test08isAtCategoryWhenIndexIsInCategoryString stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test09isNotAtCategoryWhenIndexIsOutsideCategoryString stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test10InstanceVariablesIsTheSecondParameter stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test11CategoryIsTheFifthParameter stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testBlockDoitDecompilation stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testBlockNumbering stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testBlockNumberingForInjectInto stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testDebuggerTempAccess stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testInjectIntoDecompilationsEncoderForV3PlusClosures stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testInjectIntoDecompiledDebugs stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionEM1 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionLR1 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionLR2 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionLR3 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionSD1 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testSourceRangeAccessForClosureBytecodeInjectInto stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testSourceRangeAccessForInjectInto stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureCompilerTest #testTempNameAccessForInjectInto stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample01 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample02 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample03 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample04 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample05 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample06 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample07 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample08 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample09 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample10 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureSerializationTest #testSample11 stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureTests #testBlockArgument stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureTests #testBlockTemp stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureTests #testCopyNonLocalReturn stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureTests #testIsTrivialClosure stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureTests #testMethodArgument stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureTests #testMethodTemp stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureTests #testToDoArgument stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureTests #testToDoArgumentNotInlined stamp: 'HAW 8/30/2020 19:11:35'!
PASSED!

!testRun: #ClosureTests #testToDoInsideTemp stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ClosureTests #testToDoInsideTempNotInlined stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ClosureTests #testToDoOutsideTemp stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ClosureTests #testToDoOutsideTempNotInlined stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ClosureTests #testWhileModificationAfter stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ClosureTests #testWhileModificationAfterNotInlined stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ClosureTests #testWhileModificationBefore stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ClosureTests #testWhileModificationBeforeNotInlined stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ClosureTests #testWhileWithTemp stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ClosureTests #testWhileWithTempNotInlined stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ContextCompilationTest #testVariablesAndOffsetsDo stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorAt stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorClass stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorEqEq stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorInstVarAt stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorPerform stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorSize stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ParserTest #testItGeneratesATempDeclarationNodeForEachTempInABlock stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ParserTest #testItGeneratesATempDeclarationNodeForEachTempInAMethod stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ParserTest #testItGeneratesAnEmptyTempsDeclarationNodeForAMethodWithoutTemps stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ParserTest #testRangesAreOkWhenReturningAVariableWithoutSpaceAfterThat stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #PrettyPrintingTest #test1 stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #PrettyPrintingTest #test2 stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #PrettyPrintingTest #test3 stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #PrettyPrintingTest #test4 stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #PrettyPrintingTest #test5 stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #PrettyPrintingTest #test6 stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #ScannerTest #testLiteralSymbols stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test01TryingToTrimAnAlreadyTrimmedIntervalThatRepresentsASmalltalkExpressionDoesNotChangeTheOriginalInterval stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test02StartingAndEndingSeparatorsAreTrimmed stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test03StartingAndEndingDotsAreTrimmed stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test04GroupsOfParenthesesAreTrimmed stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test05GroupsOfParenthesesIncludingSeparatorsAreTrimmed stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test06AnIntervalThatDoesNotHaveCharactersToExpandRemainsTheSame stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test07AnIntervalEnclosedByParenthesesCanBeExpanded stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test08AnIntervalWithParenthesesOnJustOneSideCannotBeExpanded stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test09AnIntervalEnclosedByBackticksCanBeExpanded stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test10AnIntervalEnclosedMultipleBackticksAndParenthesesCanBeExpanded stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #SourceCodeIntervalTest #test11AsSourceCodeIntervalMessageDoesNotCreateANewSourceCodeIntervalInstance stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileIOAccessorTest #testDirectoryExists stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testAbsolutePath stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testAtPut stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testConcatenation stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testCopy stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testDefaultDirectory stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testFileContents stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testIsAbsolutePathName stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testIsRelativePathName stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testPathComponents stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testPipe stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testRecursiveDelete stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testRefresh stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testRename stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testRoot stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #FileManTest #testStream stamp: 'HAW 8/30/2020 19:11:36'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testAddressRange stamp: 'HAW 8/30/2020 19:11:37'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testChangesFileAddressRange stamp: 'HAW 8/30/2020 19:11:37'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testFileIndexFromSourcePointer stamp: 'HAW 8/30/2020 19:11:37'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testFilePositionFromSourcePointer stamp: 'HAW 8/30/2020 19:11:37'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testSourcePointerFromFileIndexAndPosition stamp: 'HAW 8/30/2020 19:11:37'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testSourcesFileAddressRange stamp: 'HAW 8/30/2020 19:11:37'!
PASSED!

!testRun: #SystemConsistencyTest #testMethodsWithUnboundGlobals stamp: 'HAW 8/30/2020 19:11:37'!
PASSED!

!testRun: #TrieTest #testAllMesssagesLikeDicionary stamp: 'HAW 8/30/2020 19:11:42'!
PASSED!

!testRun: #TrieTest #testAllMesssagesLikeSet stamp: 'HAW 8/30/2020 19:11:46'!
PASSED!

!testRun: #TrieTest #testIncludesReturnsFalseForObjectsThatAreNotString stamp: 'HAW 8/30/2020 19:11:46'!
PASSED!

!testRun: #TrieTest #testIncludesReturnsFalseForStringsNotIncluded stamp: 'HAW 8/30/2020 19:11:46'!
PASSED!

!testRun: #TrieTest #testIncludesReturnsTrueForIncludedStrings stamp: 'HAW 8/30/2020 19:11:46'!
PASSED!

!testRun: #TrieTest #testKeyNotFoundSignalTheRightMessage stamp: 'HAW 8/30/2020 19:11:46'!
PASSED!

!testRun: #TrieTest #testPrefixIteration stamp: 'HAW 8/30/2020 19:11:46'!
PASSED!

!testRun: #TrieTest #testPrefixIteration2 stamp: 'HAW 8/30/2020 19:11:47'!
PASSED!

!testRun: #TrieTest #testRemoveLikeDicionary stamp: 'HAW 8/30/2020 19:11:50'!
PASSED!

!testRun: #TrieTest #testRemoveLikeSet stamp: 'HAW 8/30/2020 19:11:54'!
PASSED!

!testRun: #TrieTest #testSetProtocol stamp: 'HAW 8/30/2020 19:11:54'!
PASSED!

!testRun: #ReferenceStreamTest #testDiskProxy stamp: 'HAW 8/30/2020 19:11:54'!
PASSED!

!testRun: #ReferenceStreamTest #testSortedCollection stamp: 'HAW 8/30/2020 19:11:54'!
PASSED!

!testRun: #ReferenceStreamTest #testWeakDumps stamp: 'HAW 8/30/2020 19:11:54'!
PASSED!

!testRun: #SmartRefStreamTest #testDiskProxy stamp: 'HAW 8/30/2020 19:11:54'!
PASSED!

!testRun: #SmartRefStreamTest #testSortedCollection stamp: 'HAW 8/30/2020 19:11:54'!
PASSED!

!testRun: #SmartRefStreamTest #testWeakDumps stamp: 'HAW 8/30/2020 19:11:54'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbAdd stamp: 'HAW 8/30/2020 19:11:54'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbMax stamp: 'HAW 8/30/2020 19:11:54'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbMin stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbMinInvert stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbMul stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbSub stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #BitBltTest #testAlphaCompositing stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #BitBltTest #testAlphaCompositing2 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test16bpp stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test16bpp61 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test16bpp62 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test16bpp63 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test16bppLE stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test16bppLE61 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test16bppLE62 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test16bppLE63 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test32bpp stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test32bpp63 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #test32bppLE63 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #testBA16bpp stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #testBA16bpp61 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #testBA16bpp62 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #testBA16bpp63 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #testBA16bppLE stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #testBA16bppLE61 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #testBA16bppLE62 stamp: 'HAW 8/30/2020 19:11:55'!
PASSED!

!testRun: #JpegTest #testBA16bppLE63 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #JpegTest #testBA32bpp stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #JpegTest #testBA32bpp63 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #JpegTest #testGray stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #JpegTest #testGray61 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #JpegTest #testGray62 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #JpegTest #testGray63 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #JpegTest #testGrayBA stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #JpegTest #testGrayBA61 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #JpegTest #testGrayBA62 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #JpegTest #testGrayBA63 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #AffineTransformationTest #testComposition stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #AffineTransformationTest #testDisplayBounds stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #AffineTransformationTest #testFloatInverseTransform stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #AffineTransformationTest #testFloatTransform stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #AffineTransformationTest #testInverseTransformation stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #LayoutMorphTest #testLayout1 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #LayoutMorphTest #testLayout2 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #LayoutMorphTest #testLayout3 stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #MorphicLocationTest #testComposition stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #MorphicTranslationTest #testComposition stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #MorphicTranslationTest #testDisplayBounds stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #MorphicTranslationTest #testInverseTransform stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #MorphicTranslationTest #testInverseTransformation stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #MorphicTranslationTest #testTransform stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #WorldTest #testDoOneCycleWorksWithDeferredQueue stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TaskbarTest #testClassSingleton stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TaskbarTest #testHorizontalAlignment stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TaskbarTest #testWidth stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TestCaseTest #testAssertChangesByPassesWhenActionChangesConditionByTheSpecifiedAmount stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TestCaseTest #testAssertChangesFromToPassesWhenActionChangesConditionFromAndToTheSpecifiedValues stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TestCaseTest #testAssertChangesPassesWhenConditionIsAlteredByAction stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TestCaseTest #testAssertDoeNotChangePassesWhenConditionIsNotAlteredByAction stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TestCaseTest #testAssertIncludesFailsWhenElementIsNotIncludedInCollection stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TestCaseTest #testAssertIncludesShouldNotFailWhenElementIsInCollection stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToPassesForSameNumberDifferentToZero stamp: 'HAW 8/30/2020 19:11:56'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToPassesWhenBothAreZero stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToPassesWithSameCalculatedNumber stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToWithPrecisionPassesWhenDifferenceIsNegativeAndLessThanPrecision stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToWithPrecisionPassesWhenDifferenceIsPositiveAndLessThanPrecision stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testAssertIsNotCloseWithPrecisionPassesWhenDifferenceIsBiggerThanPrecision stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testIsTestCase stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldFailErrorsWhenNoErrorIsSignaled stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldFailPassesWhenAnErrorIsSignaled stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldNotTakeMoreThanFailsWhenClosureTakesMoreThanTheLimit stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldNotTakeMoreThanPassesWhenClosureTakesLessThanTheLimit stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoCanExpectException stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoFailsWhenNoExceptionIsSignaled stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoFailsWhenOtherExceptionTypeIsSignaled stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoPassSignaledExceptionToAssertionsBlock stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoValuesAssertionsBlockWhenExceptionIsRaised stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithMessageTextDoesNotFailWithRightMessageText stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithMessageTextFailsWithDifferentMessageText stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShoulndFailErrorsWhenAnErrorIsSignaled stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestCaseTest #testShoulndFailPassesWhenNoErrorIsSignaled stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestSuiteTest #test01SuiteForTestCaseClassHasTheSameTestAsCreatingTheSuiteFromTheTestCaseClass stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestSuiteTest #test02SuiteForNoTestCaseClassUsesTestClassWithSameNameEndingWithTest stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestSuiteTest #test03SuiteForNoTestCaseClassAndNoTestClassLooksForReferencesInTests stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestSuiteTest #test04SuiteForTestMethodIncludesOnlyTheMethod stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestSuiteTest #test05SuiteForNoTestMethodIncludesTestCaseSendingTheCompiledMethodSelector stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestSuiteTest #test06ForSystemCategoryWithTestCasesIncludesOnlyTestCasesClasses stamp: 'HAW 8/30/2020 19:11:57'!
PASSED!

!testRun: #TestSuiteTest #test07ForSystemCategoryWithNoTestCasesIncludesTestClassesTests stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #TestSuiteTest #test08ForMessageCategoryContainingTestCasesIncludesThoseTestCases stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #TestSuiteTest #test09ForMessageCategoryWihoutTestIsEmpty stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #TestSuiteTest #test10CanNotDebugAsFailureQuickMethods stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #DifferenceFinderTest #testCharacters stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #DifferenceFinderTest #testCharacters2 stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #DifferenceFinderTest #testCode stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #DifferenceFinderTest #testLines stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #DifferenceFinderTest #testWords stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #UnicodeTest #test1ReadBinary stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #UnicodeTest #test2ReadWithOutBinary stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #UnicodeTest #test3ReadUtf8 stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #UnicodeTest #test4BackConversion stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #UnicodeTest #test5ReadWriteUtf8 stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinNonLocalReturnFixReal stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinNonLocalReturnFixSimply stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinTimingBasic stamp: 'HAW 8/30/2020 19:11:58'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinTimingNestedInner stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinTimingNestedOuter stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinTimingRepeat stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testIsStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testNewLineTabWhenConditionIsFalseDoesNotPutANewLineTabInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testNewLineTabWhenConditionIsTruePutsANewLineTabInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testNewLineWhenConditionIsFalseDoesNotPutANewLineInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testNewLineWhenConditionIsTruePutsANewLineInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testNextPutAllWhenConditionIsFalseDoesNotPutCollectionInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testNextPutAllWhenConditionIsTruePutsCollectionInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testNextPutWhenConditionIsFalseDoesNotPutObjectInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testNextPutWhenConditionIsTruePutsObjectInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testPrintWhenConditionIsFalseDoesNotPrintObjectInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testPrintWhenConditionIsTruePrintsObjectInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testSpaceManyTimesWhenConditionIsFalseDoesNotPutASpaceInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testSpaceManyTimesWhenConditionIsTruePutSpacesInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testSpaceWhenConditionIsFalseDoesNotPutASpaceInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testSpaceWhenConditionIsTruePutsASpaceInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testTabManyTimesWhenConditionIsFalseDoesNotPutATabInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testTabManyTimesWhenConditionIsTruePutsTabsInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testTabWhenConditionIsFalseDoesNotPutATabInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #WriteStreamTest #testTabWhenConditionIsTruePutsATabInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #TranscriptTest #testNewLineWhenConditionIsFalseDoesNotPutANewLineInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #TranscriptTest #testNewLineWhenConditionIsTruePutsANewLineInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #TranscriptTest #testNextPutAllWhenConditionIsFalseDoesNotPutCollectionInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #TranscriptTest #testNextPutAllWhenConditionIsTruePutsCollectionInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #TranscriptTest #testNextPutWhenConditionIsFalseDoesNotPutObjectInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #TranscriptTest #testNextPutWhenConditionIsTruePutsObjectInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #TranscriptTest #testPrintWhenConditionIsFalseDoesNotPrintObjectInStream stamp: 'HAW 8/30/2020 19:11:59'!
PASSED!

!testRun: #TranscriptTest #testPrintWhenConditionIsTruePrintsObjectInStream stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #TranscriptTest #testSpaceWhenConditionIsFalseDoesNotPutASpaceInStream stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #TranscriptTest #testSpaceWhenConditionIsTruePutsASpaceInStream stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #TranscriptTest #testTabWhenConditionIsFalseDoesNotPutATabInStream stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #TranscriptTest #testTabWhenConditionIsTruePutsATabInStream stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ColorTest #testIsColor stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #RectangleTest #testIsRectangle stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ColorFormTest #testIsColorForm stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #GrayFormTest #testIsGrayForm stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ObjectTest #testErrorSignalsTheRightException stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ObjectTest #testShouldNotHappenBecauseSignalsTheRightError stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ObjectTest #testShouldNotHappenSignalsTheRightError stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #WeakMessageSendTest #testIsMessageSend stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #test01DefaultStringVersionIsClassAndSelector stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #test02CanPrefixStringVersion stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassIfAbsentEvaluatesBlockIfClassDoesNotExist stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassIfAbsentReturnsClassIfClassExists stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassReturnNilWhenClassDoesNotExist stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassReturnsClassIfExists stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testCompiledMethodIfAbsentEvaluatesAbsentBlockWhenActualClassIsNil stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testCompiledMethodIfAbsentEvaluatesAbsentBlockWhenSelectorIsNotImplemented stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testCompiledMethodIfAbsentReturnsImplementedMethodWhenItExists stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testReferencesParameterAtReturnsFalseWhenInvalid stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testReferencesParameterAtReturnsTrueWhenTheParameterIsReferenced stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeIfAbsentEvaluatesBlockIfClassDoesNotExist stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeIfAbsentEvaluatesBlockIfMethodDoesNotExist stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeIfAbsentReturnsSourceCodeIfExists stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeReturnsSourceCodeIfMethodExist stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeSignalExceptionIfClassDoesNotExist stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeSignalExceptionIfMethodDoesNotExist stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #SymbolTest #testIsNotValidBinarySelectorIfItContainsACharacterNotAllowed stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #SymbolTest #testIsNotValidKeywordSelectorIfItContainsSeparators stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #SymbolTest #testIsNotValidUnarySelectorIfItContainsCharactersUsedInBinarySelectors stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #SymbolTest #testIsNotValidUnarySelectorIfItStartsWithALetterAndContainsSeparators stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #SymbolTest #testIsValidBinarySelectorIfItContainsAnAllowedCharacterOrSequenceOfCharacters stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #SymbolTest #testIsValidKeywordSelectorIfItContainsKeywordsWithColons stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #SymbolTest #testIsValidUnarySelectorIfItStartsWithALetterAndDoesNotContainSeparators stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualImplementorsTest #test01WhenIsImplementedOnlyInRootReturnsThatImplementorOnly stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualImplementorsTest #test02ReturnsImplementorsOfSuperclasses stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualImplementorsTest #test03IfNotImplementedInRootOrSuperclassesDoesNotIncludeSubclassesImplementations stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualImplementorsTest #test04IncludesSubclassesImplementations stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualImplementorsTest #test05DoesNotIncludeImplementorsOfSubclassesNotDefinedInSuperclass stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualImplementorsTest #test06DoesNotIncludeImplementorsOfSiblingsWhenNotDefinedInSuperclass stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualImplementorsTest #test07ReturnsAllSubclassesImplementorsOfTheHighestImplementorClass stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualImplementorsTest #test08highestClassImplementingSelectorReturnsHighgestClass stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualImplementorsTest #test09WhenNoHighestClassImplementingSelectorIfNoneBlockIsEvaluated stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test01SurelyRecognizeTypeSenderWhenSentToInstanceVariable stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test02SurelyRecognizeTypeSenderWhenSentToTemporaryVariable stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test03SurelyRecognizeTypeSenderInACollaboration stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test04RecognizeTypeSendersToInstancesOfSubClasses stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test05RecognizeTypeSendersToLiteralTrue stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test06RecognizeTypeSendersToLiteralFalse stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test07RecognizeTypeSendersToThisContext stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test08RecognizeTypeSendersToSelf stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test09RecognizeTypeSendersToSuper stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test09_01 stamp: 'HAW 8/30/2020 19:12:00'!
PASSED!

!testRun: #ActualSendersTest #test10RecognizeTypeSendersToSelfOfMessageImplementedInSuperclass stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test11RecognizeTypeSendersToReturnsOfMessageSend stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test12RecognizeTypeSendersOfChainedMessageSends stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test13RecognizeTypeSendersToReturnOfMessageSendNoMatterThePrecedence stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test14RecognizeTypeSendersToClasses stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test15RecognizeTypeSendersToVariablesReferencingClasses stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test16RecognizeTypeSendersToAnyLiteral stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test17CanRecognizePossibleTypeSenders stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test18RecognizeTypeSendersWhenReturnTypeIsSelfType stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test19RecognizeTypeSendersWhenReturnTypeIsClassType stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test20SurelySendWhenReceiverTypeIsSuperclassOfImplementorType stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test21ActualSendersWorksWithCascadeMessageSends stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ActualSendersTest #test22ActualSendersDoesNotHangWhenReceiverIsTempVarInMethodWithoutTypes stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #AdditionalMethodStateTest #test01topBlockTempsMapReturnsTheTempsMapOfTheMethod stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #AdditionalMethodStateTest #test02MethodWithNoParametersNoTemporariesAreInitializedCorrectly stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #AdditionalMethodStateTest #test03MethodWithOnlyOneArgumentAreInitializedCorrectly stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #AdditionalMethodStateTest #test04rawTypesOfInvalidVariableNameEvaluatesIfAbsentBlock stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #AdditionalMethodStateTest #test05MethodWithOnlyOneTempTwoArgumentsAreInitializedCorrectly stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #AdditionalMethodStateTest #test06MethodWithRemoveVectorVariablesAreInitializedCorrectly stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #AdditionalMethodStateTest #test07RemoteVectorRawTypesIsNilWhenMethodHasNoVariableInRemoteVector stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #AdditionalMethodStateTest #test08VariableRawTypesIsNilWhenMethodHasNoVariableButHasInRemoteVector stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #AdditionalMethodStateTest #test09CanGetRawTypesWhenMethodHasNoVariableButHasInRemoteVector stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #ClosureVariablesTest #testOneArrayForTypesIsCreatedWhenAMethodHasNoClosures stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #DynamicTypesTest #test01TypeConvertionForAClassReturnsSameClass stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #DynamicTypesTest #test02TypeConvertionForSelfTypeReturnsReceiversType stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #DynamicTypesTest #test03TypeConvertionForClassTypeReturnsReceiversTypeClass stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #DynamicTypesTest #test04ClassMessageSendChainsClassType stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #DynamicTypesTest #test05TypeConvertionForInstanceTypeReturnsMetaclassSoleInstance stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #DynamicTypesTest #test06newTypeIsMetaclassSoleInstance stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #DynamicTypesTest #test07InstanceTypeReturnsClassWhenIsKindOfOfBehaviorButNotMeta stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #DynamicTypesTest #test08InstanceTypeErrorsWhenUsedWithNoBehavior stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #DynamicTypesTest #test09ClassTypeForMetamodelIsMetaclass stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test01TypeCollectionOfInstanceVariableDefinedInLeafClassDoesNotTraverseHierarchy stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test02TypeCollectionIncludesSubclasses stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test03TypeCollectionDoesNotIncludeSuperclassesAndSiblings stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test05TypeCollectionIncludesAllSubclasses stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test06IsNotMegamorphicIfTypesSizeIsLessToTheMaxOfWithAllSubclassesRawTypesSize stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test07IsMegamorphicIfTypesSizeIsEqualToTheMaxOfWithAllSubclassesRawTypesSize stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test08IsNotMegamorphicIfDoesNotFillRawTypesForLocalTypeInfo stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test09IsMegamorphicIfFillsRawTypesOfDefiningClassForLocalTypeInfo stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test10IsMegamorphicIfFillsRawTypesOfNotDefiningClassForLocalTypeInfo stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test11IsTypesEmptyOfNonLocalTypeInfoTakesCareOfHierarchy stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test12IsTypesEmptyForLocalTypeInfoOnlyCheckOnLocalRawTypes stamp: 'HAW 8/30/2020 19:12:01'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 8/30/2020 19:12:01'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 8/30/2020 19:12:02'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #InstanceVariableTypeInfoTest #test13RemovingAClassRemovesItAndItsClassFromInstanceVariableRawTypes stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test14InstVarAtPutKeepTypeInfo stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test01InstanceVariablesTypesIsInitializedWithAnArrayOfClassInstSize stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test02InitializeInstanceVariablesTypesWithAllInstancesStoreCurrentClassInstancesTypes stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test03TypesOfDifferentInstVarsAreStoredCorrectly stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test04MoreThanOneTypeAreStoredCorrectlyInDifferentInstVars stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test05TypesAreStoredUpToInstVarTypesSize stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test06NoTypesAreStoredWhenInstVarTypesIsNil stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test07CommonSupertypeOfReturnsSupertypeOfStoredTypes stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test08CommonSupertypeIfNoTypesEvaluatesAlternativeBlockWhenNoTypeHasBeenStore stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test09EvaluatesIfAbsentBlockWhenAskTypeInfoForNonExistingInstVar stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test01KeepTypesOfLocalTemporariesI stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test02KeepTypesOfRemoteTemporaries stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test03KeepTypesOfParameters stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test04KeepReturnTopTypes stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test05KeepReturnConstantTypes stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test06KeepReturnReceiverTypes stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test07KeepReturnFromClosureTypes stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test08KeepReturnTypeWhenUnwind stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test09BlockReturnDoesNotAffectMethodReturn stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test10KeepTypesOfParametersWhenSendingValueWithArguments stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test11BlockWithParametersDoNotAffectMethodParameters stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #MethodNotAnnotatingTypesTest #test01CanSignalItWithAMethod stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!testRun: #MethodNotAnnotatingTypesTest #test02IsResumable stamp: 'HAW 8/30/2020 19:12:02'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 8/30/2020 19:12:02'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 8/30/2020 19:12:03'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #MethodVariableTypeInfoTest #test01RemovingAClassRemovesItFromMethodVariableRawTypesForParameter stamp: 'HAW 8/30/2020 19:12:03'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 8/30/2020 19:12:03'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 8/30/2020 19:12:03'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #MethodVariableTypeInfoTest #test02RemovingAClassRemovesItsClassFromMethodVariableRawTypesForParameter stamp: 'HAW 8/30/2020 19:12:04'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 8/30/2020 19:12:04'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 8/30/2020 19:12:04'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #MethodVariableTypeInfoTest #test03RemovingAClassRemovesItFromMethodVariablesRawTypes stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 8/30/2020 19:12:05'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 8/30/2020 19:12:05'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #MethodVariableTypeInfoTest #test04RemovingAClassRemovesItFromMethodVariableRemoteVectorRawTypes stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test01ActualSendersIsEmpty stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test02CategoryIsNil stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test03CompiledMethodSignalsError stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test04CompiledMethodIfAbsentEvaluatesIfAbsentBlock stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test05doesOnlySurelySendReturnsFalse stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test06dynamicTypingAutoCompleterDocumentationReturnsEmptyText stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test07IsNotValid stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test08liveTypingAutoCompleterDocumentationReturnsEmptyText stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test09rangesOASentSelectorWhenSendToReceiverTypesIsEmpty stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test10FailsWhenAsItsSourceCode stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #NotImplementedMethodTest #test11StringVersionStartsWithNotImplemented stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #PossibleSenderTest #test01StringVersionBeginsWithPossible stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #ReturnTypeInfoTest #test01QuickReturnSelfMethodsReturnSelfTypeAsReturnType stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #ReturnTypeInfoTest #test02QuickReturnTrueMethodsReturnTrueReturnType stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #ReturnTypeInfoTest #test03QuickReturnFalseMethodsReturnFalseAsReturnType stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #ReturnTypeInfoTest #test04QuickReturnNilMethodsReturnUndefinedObjectAsReturnType stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #ReturnTypeInfoTest #test05QuickReturnMinusOneMethodsReturnSmallIntegerAsReturnType stamp: 'HAW 8/30/2020 19:12:05'!
PASSED!

!testRun: #ReturnTypeInfoTest #test06QuickReturnZeroMethodsReturnSmallIntegerAsReturnType stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #ReturnTypeInfoTest #test07QuickReturnOneMethodsReturnSmallIntegerAsReturnType stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #ReturnTypeInfoTest #test08QuickReturnTwoMethodsReturnSmallIntegerAsReturnType stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #ReturnTypeInfoTest #test09QuickReturnOfFirstInstanceVariableMethodsReturnInstanceVariableTypesAsReturnType stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #ReturnTypeInfoTest #test10QuickReturnOfSecondInstanceVariableMethodsReturnInstanceVariableTypesAsReturnType stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #ReturnTypeInfoTest #test11classMethodReturnsClassTypeAsReturnType stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #ReturnTypeInfoTest #test12newMethodReturnsInstanceTypeAsReturnType stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #ReturnTypeInfoTest #test13yourselfMethodReturnsSelfTypeAsReturnType stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 8/30/2020 19:12:06'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 8/30/2020 19:12:06'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #ReturnTypeInfoTest #test14RemovingAClassRemovesItAndItsClassFromMethodReturnType stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #ReturnTypeInfoTest #test15ReturnTypesOfAbstractMethodsIncludesSubclassesImplementationsTypes stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #ReturnTypeInfoTest #test16ReturnTypesOfAbstractMethodWorksWhenNotImplementedInAllSubclasses stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #VariableTypeInfoTest #test01IsEmptyWhenAllTypesAreNil stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #VariableTypeInfoTest #test02StoresAddedTypes stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #VariableTypeInfoTest #test03StoresSameTypeOnce stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #VariableTypeInfoTest #test04StoresMoreThanOneTypeCorrectly stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #VariableTypeInfoTest #test05DoesNotStoreTypesWhenContainerIsNil stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #VariableTypeInfoTest #test06CommonSupertypeOfSiblingsClassesReturnsRightSuperclass stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #VariableTypeInfoTest #test07CommonSupertypeOnSameHierarchyIsMostTopClass stamp: 'HAW 8/30/2020 19:12:06'!
PASSED!

!testRun: #VariableTypeInfoTest #test08CommonSupertypeOnSameHierarchyIsNotAffectedByAddingOrder stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test09ObjectIsCommonSupertypeWhenClassesAreNotSiblings stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test10ProtoObjectIsCommonSupertypeWhenThereAreNoTypesStored stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test11ProtoObjectIsCommonSupertypeWhenCointainerIsNil stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test12CommonSupertypeIfNoTypesReturnsAlternativeClosureValueWhenIsEmpty stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test13CommonSupertypeIfNoTypesReturnsAlternativeClosureValueWhenContainerIsNil stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test14UndefinedObjectIsNotConsideredWhenLookingForCommonSupertype stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test15StoresTypesIsTrueWhenContainerIsNotNil stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test16StoresTypesIsFalseWhenContainerIsNil stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test17IsMegamorphicWhenContainerIsFull stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test18IsNotMegamorphicWhenContainerIsNotFull stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test19CommonSelectorsPreviousToSameOnlyTypeIsEmpty stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test20CommonSelectorsPreviousToSuperclassOfOnlyAddedTypeAreAddedTypeSelectors stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test21CommonSelectorsPreviousToSuperclassSuperclassOfOnlyAddedTypeAreAddedTypeUpToSuperclassSelectors stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test22CommonSelectorsPreviousToInvalidSuperclassRaisesError stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test23CommonSelectorsPreviousToSuperclassOfSiblingTypesAreSiblingsCommonSelectors stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test24CommonSelectorsPreviousToOnSameHierarchyReturnsCommonSuperclassesSelectors stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test25CommonSelectorsPreviousToAddedSSupertypeOnSameHierarchyIsEmpty stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test26CommonSelectorsPreviousToWhenNotStoringTypesIsEmpty stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test27CommonSelectorsPreviousToIfInvalidSupertypeEvaluatesInvalidBlock stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test28CommonSelectorsPreviousToIfInvalidSupertypeWithManyTypesEvaluatesInvalidBlock stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test29CommonSelectosGoesUpToIncludingProtoObject stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test30CommonSupertypeIfGenericEvaluatesIfGenericBlockForObject stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test31CommonSupertypeIfGenericEvaluatesIfGenericBlockForProtoObject stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test32WithCommonSupertypeDoIfGenericEvaluatesDoBlockWhenNoGenericSupertype stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test33WithCommonSupertypeDoIfGenericEvaluatesGenericBlockWhenGenericSupertype stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test34AddingATypeWhenNoMoreSpaceEvaluatesIsFullBlock stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test35TypeIsNotMoreInTypesWhenRemoved stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test36RemovingTypeWhenTypesIsEmptyEvaluatesIfAbsent stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test37RemovingNotIncludedTypeEvaluatesIfAbsent stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test38RemovingLastAddedTypeWorksAsExpected stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test39RemoveTypeSignalExceptionWhenTypeNotFound stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #VariableTypeInfoTest #test40TypesDoEvaluatesBlockOnEachType stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test01ManyMethodsCanBeTypeChecked stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test02ClassesCanBeTypeChecked stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test03MethodsWithoutTypeAnnotationsLogsAProblem stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test04ProblemsDetectIfNone stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test05ProblemsDetectIfNoneValuesIfNoneWhenNoProblemFound stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test06WarningsCollectsAllTypeCheckersWarnings stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test07ErrorsDetectIfNone stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test08ErrorsDetectIfNoneValuesIfNoneWhenNoProblemFound stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test09ProblemsCollectsTypeCheckersProblems stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test10WarningsDetectIfNone stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test11WarningsDetectIfNoneValuesIfNoneWhenNoProblemFound stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test12HasErrorsReturnsTrueIfATypeCheckerHasErrors stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test13HasErrorsReturnsFalseWhenNoErrorFound stamp: 'HAW 8/30/2020 19:12:07'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test14ErrorsCollectsAllTypeCheckersErrors stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test15HasErrorsOrWarnings stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test01MethodNotAnnotatingTypesGeneratesWarning stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test02EmptyMethodDoesNotGenerateWarningsOrErrors stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test03MessageSendNotUnderstoodByReceiverGeneratesError stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test04MessageUnderstooodByReceiverDoesNotGenerateErrors stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test05ErrorsWhenNoTypeImplementMessageSent stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test06DifferentErrorsAreReported stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test07ReceiverWithoutTypesGeneratesWarning stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test08GivesAWarningWhenReceiversTypeHasAnError stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test09WhenMethodHasNoReturnTypesAProblemIsAdded stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test10PrimitiveMethodsAreNotTypedChecked stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test11IfNotNilFiltersUndefinedObjectType stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test12IfNotNilDoesNotFiltersUndefinedObjectTypeForNotCheckedObject stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test13ComparingForNilWithIfTrueIfFalse stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test14ComparingForNilWithIfTrueIfFalseWhenNilFiltersOtherTypes stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test15ComparingForNilWithIfTrueIfFalseWhenNilKeepsUndefinedObject stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test16NestedIfNotNilFiltersUndefinedObjectType stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test17NestedIfNotNilDoesNotFilterUndefinedObjectWhenOutsideRightIfNotNil stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test18IfNilAssumesUndefinedObjectAsType stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test19NestedIfNilAssumesUndefinedObjectAsType stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test20NestedIfNilDoesUseUndefinedObjectWhenOutsideRightIfNil stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test21IfNilIfNotNilWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test22IfNotNilIfNilWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test23EqualsNilIfTrueIfFalseWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test24EqualsNilIfTrueWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test25IdenticalToNilIfTrueWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test26EqualsNilIfFalseWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test27IdenticalToNilIfFalseWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test28EqualsToNilIfFalseIfTrueWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test29IdenticalToNilIfFalseIfTrueWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test30nilEqualsToIfTrueIfFalseOrIfFalseIfTrueWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test31nilEqualsToIfTrueOrIfFalseWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test32nilIdenticalToWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test32_01_nilNotIdenticalOrEqualToWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test33NotEqualToNilWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test34NotIdenticalToNilWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test35isNilWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test36notNilWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test37TypeCastWithEqualOrIdenticalToWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test38TypeCastWithNotEqualOrNotIdenticalToWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test39TypeCastToUsingEqualOrIdenticalToWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test40TypeCastToUsingNotEqualOrNotIdenticalToWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test41TypeCastUsingIsKindOfToWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test42TypeCheckMessageWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test43TypeCheckMessageSentToSelfWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test44TypeCheckMessageWorksAsExpected stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test46TypeCastRejectsCanBeNested stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test47IsKindOfCastingAllowsSubtypes stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test48IfNotNilWithBlockArgumentFiltersUndefinedObject stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test49TypeCastWithBlockInRejectBlockKeepsCastingStrategy stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test50TypeCastWithoutBlockShouldFail stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test51NotNilAndFiltersUndefinedObject stamp: 'HAW 8/30/2020 19:12:08'!
PASSED!

!testRun: #MethodTypeCheckerTest #test52CascasdeMessageSendAreTypeChecked stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test53TypeCastWorksOnCascadeMessageSends stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test54IfNilWithReturnRejectsNilInNextColaborations stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test55TypeCheckMessageWithSubclassesReturningFalse stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test56Float_store_on_hasNoTypeErrors stamp: 'HAW 8/30/2020 19:12:09'!
FAILURE!

!testRun: #MethodTypeCheckerTest #test57TypeCheckMessageWithFalse_True_False_InSubclassesCastCorrectly stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test58TypeCheckMessageWithReturnOnIfTrueRejectsTypeInNextColaborations stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test59TypeCheckMessageWithReturnOnIfFalseRejectsTypeInNextColaborations stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test60TypeCastWithReturnOnIfTrueRejectsTypeInNextColaborations stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test61TypeCastWithReturnOnIfFalseRejectsTypeInNextColaborations stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test62ifNotNilifNotNilWithMoreThanAMessageSendAndNilAsValue stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test63orCheck stamp: 'HAW 8/30/2020 19:12:09'!
FAILURE!

!testRun: #MethodTypeCheckerTest #test64notNilAndIfTrue stamp: 'HAW 8/30/2020 19:12:09'!
FAILURE!

!testRun: #MethodTypeCheckerTest #test65isNilOr stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test66DoesNotFailsWithMessageSendAsConditionOfIfTrueWithCascadeSend stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test66orWithoutMessageAsReceiverShouldNotError stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test67andWithoutMessageAsReceiverShouldNotError stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #MethodTypeCheckerTest #test68DoesNotFailsWithIfTrueSendInCascadeMode stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #DenotativeObjectRenameMethodApplierTest #test01ScopeOptionsAreTheSame stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #DenotativeObjectTest #test01IsDenotativeObjectNamedReturnsTrueForADenotativeObject stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #DenotativeObjectTest #test02IsDenotativeObjectNamedReturnsFalseForANoDenotativeObject stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #TestChangesTest #testDataClassName stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #test32bitConversion stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #test32bitConversion2 stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #test32bitGradualUnderflow stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #test32bitInfinities stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #test32bitNaN stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #test32bitRoundingMode stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #test32bitZeros stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testAdd stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testArCosh stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testArSinh stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testArTanh stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testArcTan stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testArcTanNonPrimitive stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testAsTrueFraction stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testCeiling stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testCharacterization stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testComparisonWhenPrimitiveFails stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testComparisonWithFraction stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testCopy stamp: 'HAW 8/30/2020 19:12:09'!
PASSED!

!testRun: #FloatTest #testCopySign stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testCos stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testCosh stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testDegreeCos stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testDegreeCosForExceptionalValues stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testDegreeSin stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testDegreeSinForExceptionalValues stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testDivide stamp: 'HAW 8/30/2020 19:12:10'!
ERROR!

!testRun: #FloatTest #testDivide stamp: 'HAW 8/30/2020 19:12:10'!
ERROR!

!testRun: #FloatTest #testDivide stamp: 'HAW 8/30/2020 19:12:10'!
ERROR!

!testRun: #FloatTest #testDivide stamp: 'HAW 8/30/2020 19:12:10'!
ERROR!

!testRun: #FloatTest #testDivide stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testE stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testEqualityComparison stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testEquals stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testExactAsString stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testExactAsString2 stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testExactStoreString stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testExactStoreString2 stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testExp stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testExpNonPrimitive stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFloatRounded stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFloatTruncated stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFloatsAwayFrom stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFloatsAwayFromWithPowersOfTwo stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFloor stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFloorLog2 stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFractionAsFloat stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFractionAsFloat2 stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFractionAsFloatRoundsHalfToEven stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFractionAsFloatWithUnderflow stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testFromStringDoesNotUnderflow stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testHashWithBigNegativeSmallInteger stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testHashWithBigSmallInteger stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testHashWithFraction stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testHashWithLargeNegativeInteger stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testHashWithLargePositiveInteger stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testHashWithSmallishLargeNegativeInteger stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testHashWithSmallishLargeNegativeInteger2 stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testHashWithSmallishLargePositiveInteger stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testHashWithSmallishLargePositiveInteger2 stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testHugeValues stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testInfinity1 stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testInfinity2 stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testInfinityTruncated stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testIntegerAsFloat stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testIsDenormalized stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testIsZero stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testLiteralEqualityOfNan stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testLiteralEqualityOfZeroAndNegativeZero stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testLn stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testLnForExceptionalValues stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testLnNonPrimitive stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testMaxExactInteger stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testMinimalAsString stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testMixedTypeArithmetic stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testMixedTypeComparison stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testMultiply stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testNaN1 stamp: 'HAW 8/30/2020 19:12:10'!
PASSED!

!testRun: #FloatTest #testNaN2 stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testNaN3 stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testNaN4 stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testNaNCompare stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testNaNPropagationBinary stamp: 'HAW 8/30/2020 19:12:11'!
FAILURE!

!testRun: #FloatTest #testNaNPropagationUnary stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testNaNTruncated stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testNaNisLiteral stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testNextAwayFromZero stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testNextTowardsZero stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testNoIntegerHash stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPartBits stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPi stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPositiveAndNegativeZero stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPredecessorSuccessor stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPredecessorSuccessor2 stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimAdd stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimArcTan stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimDivideBy stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimEqual stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimExpAndLn stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimExponent stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimGreater stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimGreaterEqual stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimLess stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimLessEqual stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimMultiplyBy stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimNotEqual stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimSin stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimSmallIntegerAsFloat stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimSqrt stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimSubtract stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimTimesTwoPower stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrimTruncated stamp: 'HAW 8/30/2020 19:12:11'!
FAILURE!

!testRun: #FloatTest #testPrintShowingDecimalPlaces4 stamp: 'HAW 8/30/2020 19:12:11'!
PASSED!

!testRun: #FloatTest #testPrintStringStress stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testReadFromManyDigits stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testReciprocal stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testReciprocal stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testRoundHalfToEven stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testRounded stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testSetOfFloat stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testSignificandAndExponent stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testSignificandAsInteger stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testSin stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testSinNonPrimitive stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testSinh stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testSomeNines stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testSqrt stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testSqrtNonPrimitive stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testStoreBase16 stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testStoreOn stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testStringAsFloatRoundsHalfToEven stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testStringAsFloatRoundsHalfToEven2 stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testStringAsNumber stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testStringAsNumber2 stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testSubtract stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testTanh stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testTimesTwoPowerGradualUnderflow stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testTimesTwoPowerOverflow stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testTimesTwoPowerUnderflow stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testTruncated stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testUlp stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testZeroAbs stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testZeroDividedByZero stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testZeroDividedByZero stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testZeroDividedByZero stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testZeroDividedByZero stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testZeroDividedByZero stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 8/30/2020 19:12:12'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testZeroSign stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FloatTest #testZeroSignificandAsInteger stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testCeiling stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testDegreeCos2 stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testDegreeSin2 stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testExactRaisedTo stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testExactSqrt stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testFloor stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testFloorLog stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testFloorLogExactness stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testFractionPrinting stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testHash stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testInexactRaisedTo stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testInexactSqrt stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testIntegerWholeDivision stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testIntegerWholeMultiplication stamp: 'HAW 8/30/2020 19:12:12'!
PASSED!

!testRun: #FractionTest #testIsType stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testLn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testLog stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testNthRoot stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testReciprocal stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testRoundHalfToEven stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testRounded stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testThatFractionDenominatorIsPositive stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testThatFractionIsReduced stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testTruncated stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testWholeDifference stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testWholeDivision stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testWholeMultiplication stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #FractionTest #testWholeSum stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerDigitLogicTest #testAndSingleBitWithMinusOne stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerDigitLogicTest #testLargeShift stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerDigitLogicTest #testMixedSignDigitLogic stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerDigitLogicTest #testNBitAndNNegatedEqualsN stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerDigitLogicTest #testNNegatedEqualsNComplementedPlusOne stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerDigitLogicTest #testShiftMinusOne1LeftThenRight stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerDigitLogicTest #testShiftOneLeftThenRight stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #test01readFromWithEmptyStringRaisesAnError stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #test02readFromWithInvalidStringRaisesAnError stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnLn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnLp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnSn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnSp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpLn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpLp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpSn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpSp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnLn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnLp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnSn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnSp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpLn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpLp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpSn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpSp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBenchFib stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBigReceiverInexactNthRoot stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBigReceiverInexactSqrt stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBitAt stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBitLogic stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBitReversal stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testBitReversalCorrectClass stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testCrossSumBase stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDifferentBases stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivLnLn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivLnLp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivLnSn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivLnSp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivLpLn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivLpLp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivLpSn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivLpSp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivSnLn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivSnLp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivSnSn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivSnSp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivSpLn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivSpLp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivSpSn stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testDivSpSp stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testEven stamp: 'HAW 8/30/2020 19:12:13'!
PASSED!

!testRun: #IntegerTest #testExactRaisedTo stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testExactSqrt stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testFloorLog stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testFloorLogExactness stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testGCDAndLCM stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testGCDExample stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testGCDProperties stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testHighBit stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testHighBitOfMagnitude stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testIntegerDivision stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testIntegerPadding stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testIntegerReadFrom stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testIsInteger stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testIsPowerOfTwo stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testIsPowerOfTwoM6873 stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testIsPrime stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testIsProbablyPrime stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testLCMExample stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testLCMProperties stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testLargePrimesUpTo stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testLn stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testLog stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testLowBit stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModLnLn stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModLnLp stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModLnSn stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModLnSp stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModLpLn stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModLpLp stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModLpSn stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModLpSp stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModSnLn stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModSnLp stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModSnSn stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModSnSp stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModSpLn stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModSpLp stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModSpSn stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testModSpSp stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testMontgomeryMultiplication stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testNegativeIntegerPrinting stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testNew stamp: 'HAW 8/30/2020 19:12:14'!
ERROR!

!testRun: #IntegerTest #testNew stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testNthRoot stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testNthRootErrorConditions stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testNthRootExactness stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testNthRootExactnessForHugeValue stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testNthRootImmuneToDoubleRounding stamp: 'HAW 8/30/2020 19:12:14'!
PASSED!

!testRun: #IntegerTest #testNthRootTruncated stamp: 'HAW 8/30/2020 19:12:15'!
PASSED!

!testRun: #IntegerTest #testNumberOfDigits stamp: 'HAW 8/30/2020 19:12:15'!
PASSED!

!testRun: #IntegerTest #testPositiveIntegerPrinting stamp: 'HAW 8/30/2020 19:12:15'!
PASSED!

!testRun: #IntegerTest #testPrimesUpTo stamp: 'HAW 8/30/2020 19:12:15'!
PASSED!

!testRun: #IntegerTest #testPrintOnBaseShowRadix stamp: 'HAW 8/30/2020 19:12:15'!
PASSED!

!testRun: #IntegerTest #testPrintStringBase stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoLnLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoLnLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoLnSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoLnSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoLpLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoLpLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoLpSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoLpSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoRem stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoSnLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoSnLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoSnSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoSnSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoSpLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoSpLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoSpSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testQuoSpSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRaisedToModulo stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRange stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testReadFrom stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemLnLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemLnLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemLnSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemLnSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemLpLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemLpLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemLpSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemLpSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemSnLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemSnLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemSnSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemSnSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemSpLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemSpLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemSpSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRemSpSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testRomanPrinting stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpLn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpLp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpSn stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpSp stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testSqrtFloor stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testStringAsNumber stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testTwoComplementBitLogicWithCarry stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #IntegerTest #testTwoComplementRightShift stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testCompactClassIndex stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testDenormalizedPrintString stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testDigitAt stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testDigitAtPut stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testDigitLength stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testEmptyTemplate stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testMinimumNegativeIntegerArithmetic stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testReplaceFromToWithStartingAt stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargePositiveIntegerTest #testBitShift stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargePositiveIntegerTest #testCompactClassIndex stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargePositiveIntegerTest #testDenormalizedPrintString stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargePositiveIntegerTest #testDigitAt stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargePositiveIntegerTest #testDigitAtPut stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargePositiveIntegerTest #testDigitLength stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargePositiveIntegerTest #testEmptyTemplate stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargePositiveIntegerTest #testLargeSqrtFloor stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargePositiveIntegerTest #testMultDicAddSub stamp: 'HAW 8/30/2020 19:12:16'!
PASSED!

!testRun: #LargePositiveIntegerTest #testNormalize stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #LargePositiveIntegerTest #testReplaceFromToWithStartingAt stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #test01readFromWhenTheInitilValueIsNaNTheResultIsNaN stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #test02readFromWhenTheInitilValueIsInfinityTheResultIsInfinity stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #test03readFromWhenTheInitilValueIsMinusInfinityTheResultIsNegativeInfinity stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #test04readFromWhenTheInitilValueIsANegativeNumberTheResultIsThatNumberNegated stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #test05readFromWhenTheInitilValueIsJustANumberTheResultIsThatNumber stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #test06readFromWhenTheInitialValueIncludesRadixItIsConvertedWithTheIndicatedRadixBase stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #test07readFromWhenTheInitialValueIncludesAnInvalidRadixItRaisesAnError stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #test08readFromWhenTheInitialValueIncludesANegativeRadixItConvertsTheNumberWithTheIndicatedRadixBase stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #test09readFromWhenTheInitialValueIsEmptyItRaisesAnError stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testFractionPart stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testHash1 stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testHash2 stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testHash3 stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testIntegerPart stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testOne stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testPrintShowingDecimalPlaces stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testPrintShowingDecimalPlaces2 stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testPrintShowingDecimalPlaces3 stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testRaisedTo stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testRaisedToInteger stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testRaisedToIntegerWithFloats stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testReadFrom stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testReciprocal stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #NumberTest #testZeroDivideHandler stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #SmallIntegerTest #testBasicNew stamp: 'HAW 8/30/2020 19:12:17'!
ERROR!

!testRun: #SmallIntegerTest #testBasicNew stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #SmallIntegerTest #testDivide stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #SmallIntegerTest #testEven stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #SmallIntegerTest #testMaxVal stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #SmallIntegerTest #testMinVal stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #SmallIntegerTest #testNew stamp: 'HAW 8/30/2020 19:12:17'!
ERROR!

!testRun: #SmallIntegerTest #testNew stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #SmallIntegerTest #testOdd stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #SmallIntegerTest #testPrintPaddedWith stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #SmallIntegerTest #testPrintString stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #SmallIntegerTest #testZeroRaisedToNegativePower stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testNext stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testNextBits stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testNextBitsInvalid stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testNextInteger stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testNextIntegerInvalid stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testRandomLargeInteger1 stamp: 'HAW 8/30/2020 19:12:17'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testRandomLargeInteger2 stamp: 'HAW 8/30/2020 19:12:19'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testSeedAndRepeatability stamp: 'HAW 8/30/2020 19:12:19'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testSetAtRandom stamp: 'HAW 8/30/2020 19:12:19'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testSimpleBuckets stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testNext stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testNextBits stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testNextBitsInvalid stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testNextInteger stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testNextIntegerInvalid stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testParkMillerCorrectness stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testParkMillerInitialValues stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testParkMillerSeedCornerCases stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testParkMillerSeedRange stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testRandomLargeInteger1 stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testRandomLargeInteger2 stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testSeedAndRepeatability stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testSetAtRandom stamp: 'HAW 8/30/2020 19:12:20'!
PASSED!

!testRun: #ParkMiller88RandomTest #testSimpleBuckets stamp: 'HAW 8/30/2020 19:12:21'!
PASSED!

!testRun: #ParkMiller93RandomTest #testNext stamp: 'HAW 8/30/2020 19:12:21'!
PASSED!

!testRun: #ParkMiller93RandomTest #testNextBits stamp: 'HAW 8/30/2020 19:12:21'!
PASSED!

!testRun: #ParkMiller93RandomTest #testNextBitsInvalid stamp: 'HAW 8/30/2020 19:12:21'!
PASSED!

!testRun: #ParkMiller93RandomTest #testNextInteger stamp: 'HAW 8/30/2020 19:12:21'!
PASSED!

!testRun: #ParkMiller93RandomTest #testNextIntegerInvalid stamp: 'HAW 8/30/2020 19:12:21'!
PASSED!

!testRun: #ParkMiller93RandomTest #testRandomLargeInteger1 stamp: 'HAW 8/30/2020 19:12:21'!
PASSED!

!testRun: #ParkMiller93RandomTest #testRandomLargeInteger2 stamp: 'HAW 8/30/2020 19:12:21'!
PASSED!

!testRun: #ParkMiller93RandomTest #testSeedAndRepeatability stamp: 'HAW 8/30/2020 19:12:21'!
PASSED!

!testRun: #ParkMiller93RandomTest #testSetAtRandom stamp: 'HAW 8/30/2020 19:12:21'!
PASSED!

!testRun: #ParkMiller93RandomTest #testSimpleBuckets stamp: 'HAW 8/30/2020 19:12:22'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesAAtoAM stamp: 'HAW 8/30/2020 19:12:22'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesANtoAZ stamp: 'HAW 8/30/2020 19:12:23'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesBAtoBM stamp: 'HAW 8/30/2020 19:12:24'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesBNtoBZ stamp: 'HAW 8/30/2020 19:12:25'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesCAtoCM stamp: 'HAW 8/30/2020 19:12:25'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesCNtoCZ stamp: 'HAW 8/30/2020 19:12:26'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesDAtoDM stamp: 'HAW 8/30/2020 19:12:27'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesDNtoDZ stamp: 'HAW 8/30/2020 19:12:27'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesEAtoEM stamp: 'HAW 8/30/2020 19:12:27'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesENtoEZ stamp: 'HAW 8/30/2020 19:12:28'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesFAtoFM stamp: 'HAW 8/30/2020 19:12:29'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesFNtoFZ stamp: 'HAW 8/30/2020 19:12:30'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesGAtoGM stamp: 'HAW 8/30/2020 19:12:30'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesGNtoGZ stamp: 'HAW 8/30/2020 19:12:31'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesHAtoHM stamp: 'HAW 8/30/2020 19:12:31'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesHNtoHZ stamp: 'HAW 8/30/2020 19:12:31'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesIAtoIM stamp: 'HAW 8/30/2020 19:12:31'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesINtoIZ stamp: 'HAW 8/30/2020 19:12:32'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesJAtoJM stamp: 'HAW 8/30/2020 19:12:32'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesJNtoJZ stamp: 'HAW 8/30/2020 19:12:32'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesKAtoKM stamp: 'HAW 8/30/2020 19:12:32'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesKNtoKZ stamp: 'HAW 8/30/2020 19:12:32'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesLAtoLM stamp: 'HAW 8/30/2020 19:12:32'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesLNtoLZ stamp: 'HAW 8/30/2020 19:12:32'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesMAtoMM stamp: 'HAW 8/30/2020 19:12:33'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesMNtoMZ stamp: 'HAW 8/30/2020 19:12:34'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesNAtoNM stamp: 'HAW 8/30/2020 19:12:34'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesNNtoNZ stamp: 'HAW 8/30/2020 19:12:35'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesOAtoOM stamp: 'HAW 8/30/2020 19:12:35'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesONtoOZ stamp: 'HAW 8/30/2020 19:12:35'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesPAtoPM stamp: 'HAW 8/30/2020 19:12:36'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesPNtoPZ stamp: 'HAW 8/30/2020 19:12:37'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesQAtoQM stamp: 'HAW 8/30/2020 19:12:37'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesQNtoQZ stamp: 'HAW 8/30/2020 19:12:37'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesRAtoRM stamp: 'HAW 8/30/2020 19:12:38'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesRNtoRZ stamp: 'HAW 8/30/2020 19:12:38'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesSAtoSM stamp: 'HAW 8/30/2020 19:12:38'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesSNtoSZ stamp: 'HAW 8/30/2020 19:12:39'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesTAtoTM stamp: 'HAW 8/30/2020 19:12:39'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesTNtoTZ stamp: 'HAW 8/30/2020 19:12:39'!
FAILURE!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesTNtoTZ stamp: 'HAW 8/30/2020 19:12:39'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesUAtoUM stamp: 'HAW 8/30/2020 19:12:39'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesUNtoUZ stamp: 'HAW 8/30/2020 19:12:40'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesVAtoVM stamp: 'HAW 8/30/2020 19:12:40'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesVNtoVZ stamp: 'HAW 8/30/2020 19:12:40'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesWAtoWM stamp: 'HAW 8/30/2020 19:12:40'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesWNtoWZ stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesXAtoXM stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesXNtoXZ stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesYAtoYM stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesYNtoYZ stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesZAtoZM stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesZNtoZZ stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testRemoteTemp stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test000_AutocompletesMessagesFor_GlobalVariables_WithSelectorsFromTheirClasses stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test001_AutocompletesMessagesFor_Self_WithSelectorsFromTheBrowsedClass stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test002_AutocompletesMessagesFor_Super_WithSelectorsFromTheBrowsedClass stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test003_AutocompletesMessagesFor_Super_WithSelectorsForUnknownClassesWhenTheBrowsedClassDoesNotHaveASuperclass stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test004_AutocompletesMessagesFor_True_WithSelectorsFromTrue stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test005_AutocompletesMessagesFor_False_WithSelectorsFromFalse stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test006_AutocompletesMessagesFor_Nil_WithSelectorsFromUndefinedObject stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test007_AutocompletesMessagesFor_Characters_WithSelectorsFromCharacter stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test008_AutocompletesMessagesFor_Numbers_WithSelectorsFromTheirClass stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test009_AutocompletesMessagesFor_Strings_WithSelectorsFromString stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test010_AutocompletesMessagesFor_Symbols_WithSelectorsFromSymbol stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test011_AutocompletesMessagesFor_StringSymbol_WithSelectorsFromSymbol stamp: 'HAW 8/30/2020 19:12:41'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test012_AutocompletesMessagesFor_InstanceVariables stamp: 'HAW 8/30/2020 19:12:42'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test012_AutocompletesMessagesFor_InstanceVariables_WithSelectorsOfInstVarTypes stamp: 'HAW 8/30/2020 19:12:42'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test013_AutocompletesMessagesFor_MethodArguments_WithSelectorsForUnknownClasses stamp: 'HAW 8/30/2020 19:12:43'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test014_AutocompletesMessagesFor_TemporaryVariables_WithSelectorsForUnknownClasses stamp: 'HAW 8/30/2020 19:12:44'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test014_AutocompletesMessagesFor_TemporaryVariables_WithSelectorsOfTempVarTypes stamp: 'HAW 8/30/2020 19:12:44'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test015_AutocompletesMessagesFor_BlockArguments_WithSelectorsForUnknownClasses stamp: 'HAW 8/30/2020 19:12:44'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test016_AutocompletesMessagesFor_BlockTemporaryVariables_WithSelectorsForUnknownClasses stamp: 'HAW 8/30/2020 19:12:45'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test017_AutocompletesMessagesFor_NilWorkspaceVariables_WithSelectorsForUnknownClasses stamp: 'HAW 8/30/2020 19:12:46'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test017_AutocompletesMessagesFor_NonNilWorkspaceVariables_WithSelectorsFromTheirClasses stamp: 'HAW 8/30/2020 19:12:46'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test018_AutocompletesMessagesFor_ThisContext_WithSelectorsFromMethodContext stamp: 'HAW 8/30/2020 19:12:46'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test019_AutocompletesMessagesFor_ClassVariables_WithSelectorsFromTheirClasses stamp: 'HAW 8/30/2020 19:12:46'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test020_AutocompletesMessagesFor_PoolConstants_WithSelectorsFromTheirClasses stamp: 'HAW 8/30/2020 19:12:46'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test021_AutocompletesMessagesFor_BlockEndings_WithSelectorsFromBlockClosure stamp: 'HAW 8/30/2020 19:12:46'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test022_AutocompletesMessagesFor_ArrayEnds_WithSelectorsFromArray stamp: 'HAW 8/30/2020 19:12:46'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test023_AutocompletesMessagesFor_RightBraces_WithSelectorsFromArray stamp: 'HAW 8/30/2020 19:12:46'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test023_AutocompletingMessagesFor_UnaryMessages stamp: 'HAW 8/30/2020 19:12:46'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test024_AutocompletingMessagesFor_RightParenthesis stamp: 'HAW 8/30/2020 19:12:46'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test025_AutocompletesMessagesFor_UnknownIdentifiers_WithSelectorsForUnknownClasses stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test026_AutocompletingMessagesFor_Cascade stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test027_AutocompletesEntriesFor_GlobalVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test028_AutocompletesEntriesFor_PoolConstants_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test029_AutocompletesEntriesFor_WorkspaceVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test030_AutocompletesEntriesFor_ClassVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test031_AutocompletesEntriesFor_InstanceVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test032_AutocompletesEntriesFor_MethodArguments_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test033_AutocompletesEntriesFor_TemporaryVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test034_AutocompletesEntriesFor_BlockArguments_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test035_AutocompletesEntriesFor_BlockTemporaryVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test036_AutocompletesEntriesFor_IncompleteIdentifiers_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test037_AutocompletesEntriesFor_ReservedNames_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test038_DoesNotAutocompleteEntriesFor_UndefinedIdentifiers stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test039_AutocompletesEntriesFor_BinaryMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test040_AutocompletesEntriesFor_IncompleteBinaryMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test041_AutocompletesEntriesFor_UnaryMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test042_AutocompletesEntriesFor_IncompleteUnaryMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:47'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test043_AutocompletesEntriesFor_KeywordMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test044_AutocompletesEntriesFor_IncompleteKeywordMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #testMessages stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ArrayWithArrayAndOtherObjects stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndArray stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndArrayOfArray stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndArrayWithManyElements stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBinaryInParenthesis stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBlock stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBlockOfBlock stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBlockOfEvaluatedBlock stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndExpresionInParenthesis stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndLiteralArray stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndMoreThanOneUnaryAfterExpresionInParenthesis stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterBlock stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterBrace stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterCharacter stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterLiteralArray stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterStringSymbol stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterSymbol stamp: 'HAW 8/30/2020 19:12:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUnaryInProtoObject stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUncompleteKeywordAfterParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUncompleteKeywordAfterUnary stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUncompleteMessageAfterUnary stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryInParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryWithMoreThanOneUnary stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryWithOneUnary stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ClosedAndUnclosedParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ExpressionInManyParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ExpressionWithMoreThanOneParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_LFBeforeParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_SpaceBeforeParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnaryAfterExpresionInParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnclosedArrayAfterClosedArray stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnclosedBlockAfterBlock stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnclosedDoubleParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_selfInProtoObject stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Workspace_ExpresionInParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Workspace_MoreThanOneUnaryMessage stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Workspace_OnlyRightParenthesis stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:49'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:49'!
griffle [ var1 := 1. goo := 1. ^goo + var1 ]! !

!testRun: #CompilerTest #testAddsMoreThanOneUndeclaredVariableCorrectlyInBlock stamp: 'HAW 8/30/2020 19:12:49'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:50'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:50'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:50'!
griffle [|var1| var1 := 1.goo := 1.^ goo + var1]! !

!testRun: #CompilerTest #testAddsUndeclaredVariableCorrectlyInBlockWhenNoSpaceBetweenLastOneAndPipe stamp: 'HAW 8/30/2020 19:12:50'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:50'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:50'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:50'!
griffle [ :var1 | goo := 1.^ goo + var1]! !

!testRun: #CompilerTest #testAddsUndeclaredVariableCorrectlyInBlockWhenTheresAnArgumentAlready stamp: 'HAW 8/30/2020 19:12:50'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:51'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:51'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:51'!
griffle [ :var1 | | | goo := 1.^ goo + var1]! !

!testRun: #CompilerTest #testAddsUndeclaredVariableCorrectlyInBlockWhenTheresArgumentsAndTempDeclarationPipesWithNoTemps stamp: 'HAW 8/30/2020 19:12:51'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:52'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:52'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:52'!
griffle var1 := 1. [ goo := 1. ^goo + var1 ]! !

!testRun: #CompilerTest #testAddsUndeclaredVariableCorrectlyInMethodAndInBlock stamp: 'HAW 8/30/2020 19:12:52'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:52'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:53'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:53'!
griffle |var1| var1 := 1.goo := 1.^ goo + var1! !

!testRun: #CompilerTest #testAddsUndeclaredVariableCorrectlyInMethodWhenNoSpaceBetweenLastOneAndPipe stamp: 'HAW 8/30/2020 19:12:53'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:53'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:53'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:53'!
griffle [|goo| goo := 1. ^goo ]. [goo1:=1.^ goo1]! !

!testRun: #CompilerTest #testAddsUndeclaredVariableInRightBlock stamp: 'HAW 8/30/2020 19:12:53'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:54'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:54'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:54'!
griffle [ :var1 | | foo | foo := 2. goo := 1.^ goo + var1 + foo ]! !

!testRun: #CompilerTest #testAddsUndeclaredVariableWithAnArgumentAndTempAlreadyInBlock stamp: 'HAW 8/30/2020 19:12:54'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:55'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #CompilerTest #testCanNotDefineVarsInsideBackTick stamp: 'HAW 8/30/2020 19:12:55'!
PASSED!

!testRun: #CompilerTest #testCanNotHaveMoreThanOneExpressionInsideBackTick stamp: 'HAW 8/30/2020 19:12:55'!
PASSED!

!testRun: #CompilerTest #testCanNotHaveReturnInsideBackTick stamp: 'HAW 8/30/2020 19:12:55'!
PASSED!

!testRun: #CompilerTest #testCanNotReferenceSelfInsideBackTick stamp: 'HAW 8/30/2020 19:12:56'!
PASSED!

!testRun: #CompilerTest #testCanNotReferenceSuperInsideBackTick stamp: 'HAW 8/30/2020 19:12:56'!
PASSED!

!testRun: #CompilerTest #testCanNotReferenceTempVarsInsideBackTick stamp: 'HAW 8/30/2020 19:12:56'!
PASSED!

!testRun: #CompilerTest #testCanNotReferenceThisContextInsideBackTick stamp: 'HAW 8/30/2020 19:12:57'!
PASSED!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:57'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:57'!
griffle [ | goo | ]. [ | goo | ]! !

!testRun: #CompilerTest #testDoesNotConfusesVariablesWithSameNameOfDifferentBlocksWhenRemoving stamp: 'HAW 8/30/2020 19:12:57'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:58'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:58'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:58'!
griffle | goo |! !

!testRun: #CompilerTest #testDoesNotRemoveUnusedVariableIfSaidSo stamp: 'HAW 8/30/2020 19:12:58'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:58'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:58'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:58'!
griffle | goo a | a := 1. ^a! !

!testRun: #CompilerTest #testKeepsVariableDefinitionWhenThereAreUsedTemporaries stamp: 'HAW 8/30/2020 19:12:58'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:12:59'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:12:59'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:12:59'!
griffle [ | goo | ]! !

!testRun: #CompilerTest #testRemovesUnusedVariablesFromBlocks stamp: 'HAW 8/30/2020 19:12:59'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:13:00'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:13:00'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:13:00'!
griffle | goo |! !

!testRun: #CompilerTest #testRemovesVariableDefinitionWhenNoMoreUnusedTemporaries stamp: 'HAW 8/30/2020 19:13:00'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:13:00'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:13:00'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:13:00'!
griffle [ || goo := 1.^ goo ]! !

!testRun: #CompilerTest #testReusesBlockTempDeclarationWhenEmptyForUndeclaredVariable stamp: 'HAW 8/30/2020 19:13:00'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:13:01'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:13:01'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:13:01'!
griffle || goo := 1.^ goo! !

!testRun: #CompilerTest #testReusesMethodTempDeclarationWhenEmptyForUndeclaredVariable stamp: 'HAW 8/30/2020 19:13:01'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:13:02'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:13:02'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #CompilerTest #testUndeclaredVariableIsSignaledForUndeclaredVariables stamp: 'HAW 8/30/2020 19:13:02'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:13:02'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:13:02'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #CompilerTest #testUndefinedVariableIsSignaledForVariablesDefinedButNotInitialized stamp: 'HAW 8/30/2020 19:13:02'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:13:03'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:13:03'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #CompilerTest #testUnknownSelectorIsSignalForMessagesSendNotImplemented stamp: 'HAW 8/30/2020 19:13:03'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:13:03'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:13:03'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #CompilerTest #testUnusedVariableIsSignaledForUnusedVariables stamp: 'HAW 8/30/2020 19:13:03'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 8/30/2020 19:13:04'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test01AddingAClassShouldBeLogged stamp: 'HAW 8/30/2020 19:13:04'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 8/30/2020 19:13:05'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test01ScanNewClassChange stamp: 'HAW 8/30/2020 19:13:05'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 8/30/2020 19:13:05'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test02AddingANewMethodShouldBeLogged stamp: 'HAW 8/30/2020 19:13:05'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 8/30/2020 19:13:06'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test02ScanNewMethodChange stamp: 'HAW 8/30/2020 19:13:06'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 8/30/2020 19:13:07'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test03ChangingAMethodShouldBeLogged stamp: 'HAW 8/30/2020 19:13:07'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 8/30/2020 19:13:07'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test03ScanMethodModifiedChange stamp: 'HAW 8/30/2020 19:13:07'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 8/30/2020 19:13:08'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test04RemovingAMethodShouldBeLogged stamp: 'HAW 8/30/2020 19:13:08'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 8/30/2020 19:13:09'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test04ScanMethodRemovalChange stamp: 'HAW 8/30/2020 19:13:09'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 8/30/2020 19:13:09'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test05RemovingAClassShouldBeLogged stamp: 'HAW 8/30/2020 19:13:10'!
PASSED!

!testRun: #ChangesTest #test05ScanClassRemovalChange stamp: 'HAW 8/30/2020 19:13:10'!
PASSED!

!testRun: #ChangesTest #test06RenamingAClassShouldBeLogged stamp: 'HAW 8/30/2020 19:13:11'!
PASSED!

!classRemoval: #NewTestClass__ stamp: 'HAW 8/30/2020 19:13:11'!
RefactoringClassTestData subclass: #NewTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test06ScanClassRenamedChange stamp: 'HAW 8/30/2020 19:13:11'!
PASSED!

!classRemoval: #NewTestClass__ stamp: 'HAW 8/30/2020 19:13:12'!
RefactoringClassTestData subclass: #NewTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #testDataClassName stamp: 'HAW 8/30/2020 19:13:12'!
PASSED!

!testRun: #GreenTest #test01WhenANewTestIsAddedThenIsWritingAFailingTest stamp: 'HAW 8/30/2020 19:13:13'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:13:13'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test02WhenAProductionMethodIsAddedThenIsRefactoring stamp: 'HAW 8/30/2020 19:13:13'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 8/30/2020 19:13:14'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test03WhenAProductionMethodIsChangedThenIsRefactoring stamp: 'HAW 8/30/2020 19:13:14'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 8/30/2020 19:13:15'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test04WhenAProductionClassIsAddedThenIsRefactoring stamp: 'HAW 8/30/2020 19:13:15'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 8/30/2020 19:13:15'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test05WhenAProductionClassIsRemovedThenIsRefactoring stamp: 'HAW 8/30/2020 19:13:16'!
PASSED!

!testRun: #GreenTest #test06WhenATestIsChangedThenIsRefactoring stamp: 'HAW 8/30/2020 19:13:16'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 8/30/2020 19:13:17'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test07WhenATestPassesNothingHappens stamp: 'HAW 8/30/2020 19:13:17'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 8/30/2020 19:13:18'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test08WhenAMethodIsRemovedIsRefactoring stamp: 'HAW 8/30/2020 19:13:18'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 8/30/2020 19:13:18'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test09WhenATestHasAnErrorAnErrorIsReportedAndTransitionsToRed stamp: 'HAW 8/30/2020 19:13:18'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 8/30/2020 19:13:19'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test10WhenATestIsRenamedThenIsRefactoring stamp: 'HAW 8/30/2020 19:13:19'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 8/30/2020 19:13:20'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test11WhenATestFailsAnErrorIsReportedAndTransitionsToRed stamp: 'HAW 8/30/2020 19:13:20'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 8/30/2020 19:13:20'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test12WhenATestIsRemovedThenIsRefactoring stamp: 'HAW 8/30/2020 19:13:21'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 8/30/2020 19:13:21'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test13WhenATestClassIsRemovedThenIsRefactoring stamp: 'HAW 8/30/2020 19:13:22'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:22'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test14WhenATestClassIsAddedThenIsRefactoring stamp: 'HAW 8/30/2020 19:13:22'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:23'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test15WhenATestClassIsRenamedThenIsRefactoring stamp: 'HAW 8/30/2020 19:13:23'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 8/30/2020 19:13:24'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test01WhenAClassIsRemovedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:24'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:25'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test02WhenTheLastOfTheTestsIsRemovedIsBackToWritingAFailingTest stamp: 'HAW 8/30/2020 19:13:25'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:26'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test03WhenTheFirstOfTheTestsIsRemovedIsBackToWritingAFailingTest stamp: 'HAW 8/30/2020 19:13:26'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:26'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test04WhenAnotherTestIsRemovedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:26'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 8/30/2020 19:13:27'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:27'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test05WhenAMethodIsRemovedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:27'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:13:28'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:28'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test06WhenAModelMethodIsChangedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:28'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:13:29'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:29'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test07WhenAModelClassIsAddedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:29'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:13:30'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:30'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test08WhenAModelMethodIsAddedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:30'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:13:31'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:31'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test09WhenATestIsAddedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:31'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:32'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test10WhenATestClassIsAddedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:32'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 8/30/2020 19:13:33'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:33'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test11WhenOneOfTheTestTheTestsIsChangedIsStillInThisState stamp: 'HAW 8/30/2020 19:13:33'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:34'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test12WhenAnotherTestIsChangedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:34'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:34'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test13WhenATestFailsAnErrorIsReportedAndGoesToRed stamp: 'HAW 8/30/2020 19:13:35'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:35'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test14WhenOneOfTheTestsPassesTwoErrorsAreReported stamp: 'HAW 8/30/2020 19:13:35'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:36'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test15WhenAllOfTheTestsPassErrorsAreReportedAndGoesToGreen stamp: 'HAW 8/30/2020 19:13:36'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:37'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test16WhenOneOfTheTestsIsRenamedIsStillInThisState stamp: 'HAW 8/30/2020 19:13:37'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:37'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test17WhenAnotherTestIsRenamedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:37'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:38'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test18WhenATestUtilityIsChangedNothingHappens stamp: 'HAW 8/30/2020 19:13:38'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:39'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test01WhenAProductionClassIsAddedIsStillNotDoingTDD stamp: 'HAW 8/30/2020 19:13:39'!
PASSED!

!classRemoval: #ProdClassA stamp: 'HAW 8/30/2020 19:13:40'!
Object subclass: #ProdClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test02WhenAProductionMethodIsAddedIsStillNotDoingTDD stamp: 'HAW 8/30/2020 19:13:40'!
PASSED!

!classRemoval: #ProdClassA stamp: 'HAW 8/30/2020 19:13:40'!
Object subclass: #ProdClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test03WhenATestIsAddedIsStillNotDoingTDD stamp: 'HAW 8/30/2020 19:13:40'!
PASSED!

!classRemoval: #ProdClassA stamp: 'HAW 8/30/2020 19:13:41'!
TestCase subclass: #ProdClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test04WhenATestClassIsAddedIsStillNotDoingTDD stamp: 'HAW 8/30/2020 19:13:41'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:42'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test05WhenATestIsChangedIsStillNotDoingTDD stamp: 'HAW 8/30/2020 19:13:42'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:42'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test06WhenAProductionMethodIsChangedIsStillNotDoingTDD stamp: 'HAW 8/30/2020 19:13:42'!
PASSED!

!classRemoval: #ProductionClassA stamp: 'HAW 8/30/2020 19:13:43'!
Object subclass: #ProductionClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test07WhenAClassIsRemovedIsStillNotDoingTDD stamp: 'HAW 8/30/2020 19:13:43'!
PASSED!

!testRun: #NotDoingTDDTest #test08WhenThereIsOneTestAndPassesThenIsInGreen stamp: 'HAW 8/30/2020 19:13:44'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:44'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test09WhenOneOfTheTestFailsThenIsStillNotDoingTDD stamp: 'HAW 8/30/2020 19:13:45'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:45'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test10WhenOneOfTheTestIsNotRunThenIsStillNotDoingTDD stamp: 'HAW 8/30/2020 19:13:45'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:46'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test11WhenATestIsRenamedIsStillNotDoingTDD stamp: 'HAW 8/30/2020 19:13:46'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:47'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test12WhenThereIsMoreThanOneTestAndAllPassThenIsInGreen stamp: 'HAW 8/30/2020 19:13:47'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:47'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test13WhenATestIsRemovedIsNoLongerTakenIntoAccount stamp: 'HAW 8/30/2020 19:13:48'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:48'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test14WhenATestClassIsRemovedIsNoLongerTakenIntoAccount stamp: 'HAW 8/30/2020 19:13:49'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:13:49'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test15WhenAllTestAreRemovedThenGoesToGreen stamp: 'HAW 8/30/2020 19:13:50'!
PASSED!

!testRun: #NotStartedTest #test01WhenNoChangesAreDoneThenNothingHappens stamp: 'HAW 8/30/2020 19:13:50'!
PASSED!

!testRun: #NotStartedTest #test02WhenAModelClassIsAddedThenWeAsumeIsWritingAFailingTest stamp: 'HAW 8/30/2020 19:13:50'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:13:51'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test03WhenATestClassIsAddedThenIsWritingAFailingTest stamp: 'HAW 8/30/2020 19:13:51'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 8/30/2020 19:13:52'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test04WhenAProductionMethodIsAddedResultShouldHaveAnError stamp: 'HAW 8/30/2020 19:13:52'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:13:52'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test05WhenAMethodIsChangedResultShouldHaveAnError stamp: 'HAW 8/30/2020 19:13:52'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:13:53'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test06WhenATestIsAddedThenIsWritingAFailingTest stamp: 'HAW 8/30/2020 19:13:53'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:13:54'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test07WhenAClassIsRemovedResultShouldHaveAnError stamp: 'HAW 8/30/2020 19:13:54'!
PASSED!

!testRun: #NotStartedTest #test08WhenAMethodIsRemovedResultShouldHaveAnError stamp: 'HAW 8/30/2020 19:13:55'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:13:55'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test09WhenAllTestsPassThenIsInGreenState stamp: 'HAW 8/30/2020 19:13:55'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:13:56'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test10WhenATestFailsThenIsInRedState stamp: 'HAW 8/30/2020 19:13:56'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:13:57'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test11WhenATestHasAnErrorThenIsInRedState stamp: 'HAW 8/30/2020 19:13:57'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:13:57'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test12WhenATestIsChangedThenIsWritingAFailingTest stamp: 'HAW 8/30/2020 19:13:57'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:13:58'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test13WhenATestIsRenamedThenIsNotDoingTDD stamp: 'HAW 8/30/2020 19:13:58'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:13:59'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test01ShouldIgnoreDoIts stamp: 'HAW 8/30/2020 19:13:59'!
PASSED!

!testRun: #OtherTest #test02ResultKnowsTheChangesThatWereDone stamp: 'HAW 8/30/2020 19:13:59'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 8/30/2020 19:14:00'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test03TDDStateForEachChange stamp: 'HAW 8/30/2020 19:14:00'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 8/30/2020 19:14:01'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test04TestRenamesAreGroupedInASingleChange stamp: 'HAW 8/30/2020 19:14:01'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:01'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test05TestsWithSameNameInDifferentClassesAreDifferent stamp: 'HAW 8/30/2020 19:14:01'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 8/30/2020 19:14:02'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:02'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test06WhenATestHasAnErrorThisTestDoesNotFail stamp: 'HAW 8/30/2020 19:14:02'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:03'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test07RunFromASpecificChange stamp: 'HAW 8/30/2020 19:14:03'!
PASSED!

!classRemoval: #ExampleClass stamp: 'HAW 8/30/2020 19:14:04'!
Object subclass: #ExampleClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:04'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test08ReRunTheWholeAnalysis stamp: 'HAW 8/30/2020 19:14:04'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:05'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test09ReRunFromASpecificChange stamp: 'HAW 8/30/2020 19:14:05'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:05'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:06'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test10ChangeWhenAMethodWasAdded stamp: 'HAW 8/30/2020 19:14:06'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:06'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test01WhenAProductionClassIsAddedIsStillInRed stamp: 'HAW 8/30/2020 19:14:06'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 8/30/2020 19:14:07'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:07'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test02WhenAProductionMethodIsAddedIsStillInRed stamp: 'HAW 8/30/2020 19:14:07'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:08'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:08'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test03WhenTheTestPassesThenIsInGreen stamp: 'HAW 8/30/2020 19:14:08'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:09'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:09'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test04WhenTheTestFailsIsStillInRed stamp: 'HAW 8/30/2020 19:14:09'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:10'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:10'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test05WhenAProductionMethodIsChangedIsStillInRed stamp: 'HAW 8/30/2020 19:14:10'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:11'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:11'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test06WhenTheNewTestPassesButAnotherTestFailsThenIsStillInRed stamp: 'HAW 8/30/2020 19:14:12'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:12'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:12'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test07WhenAllTestsPassThenIsInGreen stamp: 'HAW 8/30/2020 19:14:13'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:13'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:14'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test08WhenATestIsAddedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:14:14'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:14'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test09WhenATestIsRenamedAndAllTestsPassThenIsInGreen stamp: 'HAW 8/30/2020 19:14:14'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:15'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:15'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test10WhenAModelMethodIsRemovedIsStillInRed stamp: 'HAW 8/30/2020 19:14:15'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:16'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:16'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test11WhenAModelClassIsRemovedIsStillInRed stamp: 'HAW 8/30/2020 19:14:17'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:17'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test11WhenATestClassIsAddedIsStillInRed stamp: 'HAW 8/30/2020 19:14:17'!
PASSED!

!classRemoval: #TestSomethingB stamp: 'HAW 8/30/2020 19:14:18'!
TestCase subclass: #TestSomethingB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:18'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test12WhenTheTestIsChangedIsStillInRed stamp: 'HAW 8/30/2020 19:14:18'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:19'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:19'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test13WhenAnotherTestIsChangedIsStillInRed stamp: 'HAW 8/30/2020 19:14:20'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:20'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test14WhenATestIsRemovedResultShouldHaveAnErrorAndIsNotDoingTDD stamp: 'HAW 8/30/2020 19:14:20'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:21'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test15WhenATestClassIsRemovedResultShouldHaveAnErrorAndIsNotDoingTDD stamp: 'HAW 8/30/2020 19:14:21'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:22'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test01WhenAProductionMethodIsChangedIsStillRefactoring stamp: 'HAW 8/30/2020 19:14:22'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:23'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test02WhenAProductionMethodIsAddedIsStillRefactoring stamp: 'HAW 8/30/2020 19:14:23'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:23'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test03WhenAProductionClassIsAddedIsStillRefactoring stamp: 'HAW 8/30/2020 19:14:23'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 8/30/2020 19:14:24'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test04WhenATestIsChangedIsStillRefactoring stamp: 'HAW 8/30/2020 19:14:24'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:25'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test05WhenATestIsRenamedIsStillRefactoring stamp: 'HAW 8/30/2020 19:14:25'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:26'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test06WhenATestClassIsAddedIsStillRefactoring stamp: 'HAW 8/30/2020 19:14:26'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:26'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test07WhenATestIsAddedResultHasAnErrorAndIsWritingAFailingTest stamp: 'HAW 8/30/2020 19:14:26'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:27'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test08WhenAllTestPassThenIsInGreen stamp: 'HAW 8/30/2020 19:14:27'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:28'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test09WhenOneOfTheTestFailsThenIsStillRefactoring stamp: 'HAW 8/30/2020 19:14:28'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:28'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test10WhenAClassIsRemovedIsStillRefactoring stamp: 'HAW 8/30/2020 19:14:29'!
PASSED!

!testRun: #RefactorTest #test11WhenAProductionMethodIsRemovedStillRefactoring stamp: 'HAW 8/30/2020 19:14:29'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 8/30/2020 19:14:30'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test12WhenATestClassIsRemovedThoseTestsAreNoLongerTakenIntoAccount stamp: 'HAW 8/30/2020 19:14:30'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 8/30/2020 19:14:31'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test13WhenATestIsRemovedIsNoLongerTakenIntoAccount stamp: 'HAW 8/30/2020 19:14:31'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:32'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test14WhenAllTestAreRemovedThenGoesToGreen stamp: 'HAW 8/30/2020 19:14:32'!
PASSED!

!testRun: #RefactorTest #test15WhenAModelMethodIsAddedButNotUsedThereIsAnError stamp: 'HAW 8/30/2020 19:14:32'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:33'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:33'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test16WhenAModelMethodIsAddedAndThenUsedThereAreNoErrors stamp: 'HAW 8/30/2020 19:14:33'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:34'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:34'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test17WhenAModelMethodIsAddedAndRemovedAndIsNotUsedThereAreNoErrors stamp: 'HAW 8/30/2020 19:14:34'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:35'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:35'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test18WhenAModelMethodIsAddedAndIsOnlyMentionedInACommentThereIsAnError stamp: 'HAW 8/30/2020 19:14:36'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:36'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:36'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test19WhenTwoModelMethodsAreAddedBothHaveToBeUsedInAValidRefactor stamp: 'HAW 8/30/2020 19:14:37'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:37'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:37'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test20WhenTwoModelMethodsAreAddedAndNotUsedIsNotAValidRefactor stamp: 'HAW 8/30/2020 19:14:38'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:38'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:38'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test21WhenAModelMethodIsAddedAndIsUsedAsAVariableNameIsNotAValidRefactor stamp: 'HAW 8/30/2020 19:14:39'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:39'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:39'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test22WhenAModelMethodIsNotUsedWhenAnalysisIsFinishedThereIsAnError stamp: 'HAW 8/30/2020 19:14:40'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:40'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:40'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test23WhenATestClassIsRenamedThoseTestsAreStillTakenIntoAccount stamp: 'HAW 8/30/2020 19:14:41'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:41'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassB stamp: 'HAW 8/30/2020 19:14:42'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test24WhenAMethodIsOverridenItIsConsideredUsedAndRefactorIsValid stamp: 'HAW 8/30/2020 19:14:42'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:42'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:43'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test01WhenTheTestIsChangedThenIsStillWritingAFailingTest stamp: 'HAW 8/30/2020 19:14:43'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:43'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test02WhenAModelClassIsAddedThenIsStillWritingAFailingTest stamp: 'HAW 8/30/2020 19:14:43'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 8/30/2020 19:14:44'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test03WhenATestClassIsAddedThenIsStillWritingAFailingTest stamp: 'HAW 8/30/2020 19:14:44'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:45'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test04WhenATestFailsThenIsInRedState stamp: 'HAW 8/30/2020 19:14:45'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:45'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test05WhenAModelMethodIsAddedAndNoTestIsBeingWrittenThenIsNotDoingTDD stamp: 'HAW 8/30/2020 19:14:45'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:46'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:46'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test06WhenTheTestIsRenamedThenIsStillWritingAFailingTest stamp: 'HAW 8/30/2020 19:14:46'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:47'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test07WhenAModelMethodIsChangedThenIsNotDoingTDD stamp: 'HAW 8/30/2020 19:14:47'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:14:48'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:48'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test08WhenSetUpMethodIsAddedToTheTestClassThenIsStillWritingAFailingTest stamp: 'HAW 8/30/2020 19:14:48'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:49'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test09WhenAMethodIsAddedToTheTestClassThenIsStillWritingAFailingTest stamp: 'HAW 8/30/2020 19:14:49'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:49'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test10WhenASecondTestIsAddedIsInMoreThanOneTestWritten stamp: 'HAW 8/30/2020 19:14:50'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:50'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test11WhenATestWithTheSameNameIsChangedInOtherClassThenIsNotDoingTDD stamp: 'HAW 8/30/2020 19:14:50'!
PASSED!

!classRemoval: #TestSomethingB stamp: 'HAW 8/30/2020 19:14:51'!
TestCase subclass: #TestSomethingB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomethingA stamp: 'HAW 8/30/2020 19:14:51'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test12WhenADifferentTestIsChangedThenIsNotDoingTDD stamp: 'HAW 8/30/2020 19:14:51'!
PASSED!

!classRemoval: #TestSomethingA stamp: 'HAW 8/30/2020 19:14:52'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test13WhenATestWithTheSameNameIsAddedInOtherClassThenIsInMoreThanOneTestWritten stamp: 'HAW 8/30/2020 19:14:52'!
PASSED!

!classRemoval: #TestSomethingB stamp: 'HAW 8/30/2020 19:14:53'!
TestCase subclass: #TestSomethingB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomethingA stamp: 'HAW 8/30/2020 19:14:53'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test14WhenAModelMethodIsRemovedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:14:53'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 8/30/2020 19:14:54'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomethingA stamp: 'HAW 8/30/2020 19:14:54'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test15WhenTheTestIsRemovedThenIsInGreen stamp: 'HAW 8/30/2020 19:14:54'!
PASSED!

!classRemoval: #TestSomethingA stamp: 'HAW 8/30/2020 19:14:55'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test16WhenATestIsRenamedThenIsStillWritingAFailingTest stamp: 'HAW 8/30/2020 19:14:55'!
PASSED!

!classRemoval: #TestSomethingA stamp: 'HAW 8/30/2020 19:14:55'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test17WhenAModelClassIsRemovedThenIsNotDoingTDD stamp: 'HAW 8/30/2020 19:14:56'!
PASSED!

!classRemoval: #TestSomethingA stamp: 'HAW 8/30/2020 19:14:56'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test18WhenTheTestPassesAnErrorIsReportedAndGoesToGreen stamp: 'HAW 8/30/2020 19:14:56'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:14:57'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test19AnotherTestIsRemovedAnErrorIsReportedAndIsStillWritingAFailingTest stamp: 'HAW 8/30/2020 19:14:57'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 8/30/2020 19:14:58'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:58'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test20WhenAFirstTestIsAddedIsStillWritingAFailingTest stamp: 'HAW 8/30/2020 19:14:58'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:14:59'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test21WhenAModelMethodIsAddedBeforeRunningTestsThenIsNotDoingTDD stamp: 'HAW 8/30/2020 19:14:59'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:15:00'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:15:00'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test22WhenAModelMethodIsChangedBeforeWritingATestThenIsNotDoingTDD stamp: 'HAW 8/30/2020 19:15:00'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 8/30/2020 19:15:01'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 8/30/2020 19:15:01'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test23WhenATestClassIsRemovedIsNotDoingTDD stamp: 'HAW 8/30/2020 19:15:01'!
PASSED!

!classRemoval: #TestSomethingB stamp: 'HAW 8/30/2020 19:15:02'!
TestCase subclass: #TestSomethingB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test01RunningAPassingTestShouldBeLogged stamp: 'HAW 8/30/2020 19:15:02'!
PASSED!

!classRemoval: 'TestChangesTestData' stamp: 'HAW 8/30/2020 19:15:03'!
TestCase subclass: 'TestChangesTestData'
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test02RunningAFailingTestShouldBeLogged stamp: 'HAW 8/30/2020 19:15:03'!
PASSED!

!classRemoval: 'TestChangesTestData' stamp: 'HAW 8/30/2020 19:15:03'!
TestCase subclass: 'TestChangesTestData'
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test03RunningATestWithAnErrorShouldBeLogged stamp: 'HAW 8/30/2020 19:15:03'!
PASSED!

!classRemoval: 'TestChangesTestData' stamp: 'HAW 8/30/2020 19:15:04'!
TestCase subclass: 'TestChangesTestData'
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test04OverridingAMethodShouldBeLoggedWithAReferenceToTheOverridenMethod stamp: 'HAW 8/30/2020 19:15:04'!
PASSED!

!classRemoval: #SubclassTestDataClass__ stamp: 'HAW 8/30/2020 19:15:05'!
TestChangesTestClass__ subclass: #SubclassTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestChangesTestClass__ stamp: 'HAW 8/30/2020 19:15:05'!
Object subclass: #TestChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test05WhenAMethodIsNotOverridenTheMethodReferenceIsNotIncluded stamp: 'HAW 8/30/2020 19:15:05'!
PASSED!

!classRemoval: #SubclassTestDataClass__ stamp: 'HAW 8/30/2020 19:15:06'!
TestChangesTestClass__ subclass: #SubclassTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestChangesTestClass__ stamp: 'HAW 8/30/2020 19:15:06'!
Object subclass: #TestChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test06WhenAMethodIsChangedItIsNotConsideredOverriden stamp: 'HAW 8/30/2020 19:15:06'!
PASSED!

!classRemoval: #TestChangesTestClass__ stamp: 'HAW 8/30/2020 19:15:07'!
Object subclass: #TestChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #ScanTestChangesTest #test01ScanPassingTestChange stamp: 'HAW 8/30/2020 19:15:07'!
PASSED!

!classRemoval: 'TestChangesTestData' stamp: 'HAW 8/30/2020 19:15:07'!
TestCase subclass: 'TestChangesTestData'
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #ScanTestChangesTest #test02ScanFailedTestChange stamp: 'HAW 8/30/2020 19:15:07'!
PASSED!

!classRemoval: 'TestChangesTestData' stamp: 'HAW 8/30/2020 19:15:08'!
TestCase subclass: 'TestChangesTestData'
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #ScanTestChangesTest #test03ScanNewTestClass stamp: 'HAW 8/30/2020 19:15:08'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 8/30/2020 19:15:09'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #ScanTestChangesTest #test04ScanOverridenMethod stamp: 'HAW 8/30/2020 19:15:09'!
PASSED!

!classRemoval: #AClass__ stamp: 'HAW 8/30/2020 19:15:09'!
TestChangesTestClass__ subclass: #AClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestChangesTestClass__ stamp: 'HAW 8/30/2020 19:15:10'!
Object subclass: #TestChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #ScanTestChangesTest #test05ScanAMethodThatIsNotOverriden stamp: 'HAW 8/30/2020 19:15:10'!
PASSED!

!classRemoval: #AClass__ stamp: 'HAW 8/30/2020 19:15:10'!
TestChangesTestClass__ subclass: #AClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestChangesTestClass__ stamp: 'HAW 8/30/2020 19:15:11'!
Object subclass: #TestChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #BlockNodeTest #testItDoesNotSendsAGivenMessageToSelfWhenTheBlockIsEmpty stamp: 'HAW 8/30/2020 19:15:11'!
PASSED!

!testRun: #BlockNodeTest #testItSendsAGivenMessageToSelfWhenItContainsAnStatementWithAMessageSendToSelf stamp: 'HAW 8/30/2020 19:15:11'!
PASSED!

!testRun: #MessageNodeTest #testItDoesNotSendTheMessageToSelfWhenTheReceiverIsNotSelf stamp: 'HAW 8/30/2020 19:15:11'!
PASSED!

!testRun: #MessageNodeTest #testItDoesNotSendTheMessageToSelfWhenTheReceiverIsSelfButTheSelectorIsDifferent stamp: 'HAW 8/30/2020 19:15:11'!
PASSED!

!testRun: #MessageNodeTest #testItSendsTheMessageToSelfWhenTheReceiverIsSelf stamp: 'HAW 8/30/2020 19:15:11'!
PASSED!

!testRun: #VariableNodeTest #testItDoesNotReferencesSelfWhenTheVariableNameIsNotSelf stamp: 'HAW 8/30/2020 19:15:11'!
PASSED!

!testRun: #VariableNodeTest #testItReferencesSelfWhenTheVariableNameIsSelf stamp: 'HAW 8/30/2020 19:15:11'!
PASSED!

!testRun: #AddInstanceVariableTest #test01NewVariableNameCanNotBeEmpty stamp: 'HAW 8/30/2020 19:15:11'!
PASSED!

!testRun: #AddInstanceVariableTest #test02NewVariableNameCanNotContainBlanks stamp: 'HAW 8/30/2020 19:15:11'!
PASSED!

!testRun: #AddInstanceVariableTest #test03NewVariableNameCanNotContainInvalidCharacters stamp: 'HAW 8/30/2020 19:15:12'!
PASSED!

!testRun: #AddInstanceVariableTest #test04ValidNewVariableNameGetBlanksTrimmed stamp: 'HAW 8/30/2020 19:15:12'!
PASSED!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:12'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test05NewVariableNameCanNotBeDefinedInClass stamp: 'HAW 8/30/2020 19:15:12'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 8/30/2020 19:15:13'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:13'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:13'!
SuperclassWithInstVar subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test06NewVariableNameCanNotBeDefinedInSuperclasses stamp: 'HAW 8/30/2020 19:15:13'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 8/30/2020 19:15:14'!
SuperclassWithInstVar subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithInstVar stamp: 'HAW 8/30/2020 19:15:14'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:14'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:14'!
ClassToAddInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test07NewVariableNameCanNotBeDefinedInAnySubclass stamp: 'HAW 8/30/2020 19:15:14'!
PASSED!

!classRemoval: #SubclassWithInstVar stamp: 'HAW 8/30/2020 19:15:15'!
ClassToAddInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 8/30/2020 19:15:15'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:15'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:15'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test08AddCreatesNewInstanceVariable stamp: 'HAW 8/30/2020 19:15:15'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 8/30/2020 19:15:15'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:16'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:16'!
m1 | a | a := 10.! !

!testRun: #AddInstanceVariableTest #test09FailsWhenNewVariableEqualsTemporaryVariableOfAMethodInClass stamp: 'HAW 8/30/2020 19:15:16'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 8/30/2020 19:15:16'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:16'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:16'!
m1:a! !

!testRun: #AddInstanceVariableTest #test10FailsWhenNewVariableEqualsArgumentOfAMethodInClass stamp: 'HAW 8/30/2020 19:15:16'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 8/30/2020 19:15:17'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:17'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:17'!
m1 [ :a | ] value: 1! !

!testRun: #AddInstanceVariableTest #test11FailsWhenNewVariableEqualsArgumentOfABlockInAMethodInClass stamp: 'HAW 8/30/2020 19:15:17'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 8/30/2020 19:15:17'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:17'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:17'!
m1 [ | a | ] value! !

!testRun: #AddInstanceVariableTest #test12FailsWhenNewVariableEqualsTemporaryOfABlockInAMethodInClass stamp: 'HAW 8/30/2020 19:15:17'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 8/30/2020 19:15:18'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:18'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassOfClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:18'!
ClassToAddInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassOfClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:18'!
m1 | a | ! !

!testRun: #AddInstanceVariableTest #test13FailsWhenNewVariableIsHiddenInAnyMethodOfAnySubclass stamp: 'HAW 8/30/2020 19:15:18'!
PASSED!

!classRemoval: #SubclassOfClassToRefactor stamp: 'HAW 8/30/2020 19:15:19'!
ClassToAddInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 8/30/2020 19:15:19'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:19'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test14NewVariableNameCanNotBeAReservedName stamp: 'HAW 8/30/2020 19:15:19'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 8/30/2020 19:15:20'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:20'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:20'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:20'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:20'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:20' prior: 50842751!
sender_m1 self m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:15:20'!
m1!

!testRun: #AddParameterTest #test01AddingParameterToUnaryMessageAddsColonAndParameter stamp: 'HAW 8/30/2020 19:15:20'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:20'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:20'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:20'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:20'!
sender_m1 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:20'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:20' prior: 50842790!
sender_m1 self m1: 1 m2: 2! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 8/30/2020 19:15:20'!
m1: oldParam!

!testRun: #AddParameterTest #test02AddingParameterToKeywordMessageAddsNewKeywordAndParameter stamp: 'HAW 8/30/2020 19:15:20'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:21'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:21'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:21'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:21'!
sender_m1 self m1: 1. self m1: 1.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:21'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:21' prior: 50842830!
sender_m1 self m1: 1 m2: 2. self m1: 1 m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 8/30/2020 19:15:21'!
m1: oldParam!

!testRun: #AddParameterTest #test03AddingParameterToKeywordMessageMultipleSendsInSameMethodSameLiteral stamp: 'HAW 8/30/2020 19:15:21'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:21'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:22'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:22'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:22'!
sender_m1 self m1: self size.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:22'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:22' prior: 50842871!
sender_m1 self m1: self size m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 8/30/2020 19:15:22'!
m1: oldParam!

!testRun: #AddParameterTest #test04AddingParameterToKeywordMessageWithMessageSendAsLastFormalParameter stamp: 'HAW 8/30/2020 19:15:22'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:22'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:22'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:22'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:22'!
sender_m1 self m1: self size + 4.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:22'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:22' prior: 50842912!
sender_m1 self m1: self size + 4 m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 8/30/2020 19:15:22'!
m1: oldParam!

!testRun: #AddParameterTest #test05AddingParameterToKeywordMessageWithBinaryMessageSendAsLastFormalParameter stamp: 'HAW 8/30/2020 19:15:22'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:23'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:23'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:23'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:23'!
sender_m1 self m1: (self at: 1 put: 2).! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:23'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:23' prior: 50842953!
sender_m1 self m1: (self at: 1 put: 2) m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 8/30/2020 19:15:23'!
m1: oldParam!

!testRun: #AddParameterTest #test06AddingParameterToKeywordMessageWithKeywordMessageSendAsLastFormalParameter stamp: 'HAW 8/30/2020 19:15:23'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:23'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:23'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:23'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:23'!
sender_m1 #m1 size! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:23'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:23' prior: 50842994!
sender_m1 #m1: size! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:15:23'!
m1!

!testRun: #AddParameterTest #test07AddingParameterToUnaryMessageChangesReferencesToSelector stamp: 'HAW 8/30/2020 19:15:23'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:24'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:24'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:24'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:24'!
sender_m1 #m1: size.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:24'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:24' prior: 50843033!
sender_m1 #m1:m2: size.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 8/30/2020 19:15:24'!
m1: oldParam!

!testRun: #AddParameterTest #test08AddingParameterToKeywordMessageChangesReferencesToSelector stamp: 'HAW 8/30/2020 19:15:24'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:25'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test09FailsIfNewParameterValueCanNotBeCompiled stamp: 'HAW 8/30/2020 19:15:25'!
PASSED!

!testRun: #AddParameterTest #test10FailsIfNewParameterValueIsEmpty stamp: 'HAW 8/30/2020 19:15:25'!
PASSED!

!testRun: #AddParameterTest #test11NewParameterNameCanNotBeEmpty stamp: 'HAW 8/30/2020 19:15:26'!
PASSED!

!testRun: #AddParameterTest #test12NewParameterNameCanNotStartWithNumber stamp: 'HAW 8/30/2020 19:15:26'!
PASSED!

!testRun: #AddParameterTest #test13NewParameterNameCanNotContainSpaces stamp: 'HAW 8/30/2020 19:15:26'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:27'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: 'newParam'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:27'!
m1! !

!testRun: #AddParameterTest #test14NewParameterCanNotBeDefinedAsInstanceVariableInAnyImplementor stamp: 'HAW 8/30/2020 19:15:27'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:27'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: 'newParam'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:27'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:27'!
m1:newParam! !

!testRun: #AddParameterTest #test15NewParameterCanNotBeDefinedAsParameterInAnyImplementor stamp: 'HAW 8/30/2020 19:15:27'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:28'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test16WhenCreatedForUnarySelectorMustBeUnary stamp: 'HAW 8/30/2020 19:15:28'!
PASSED!

!testRun: #AddParameterTest #test17WhenCreatedForBinarySelectorMustBeBinary stamp: 'HAW 8/30/2020 19:15:28'!
PASSED!

!testRun: #AddParameterTest #test18CanNotAddParameterToBinaryKeyword stamp: 'HAW 8/30/2020 19:15:29'!
PASSED!

!testRun: #AddParameterTest #test19AllImplementorsMustImplementOldSelector stamp: 'HAW 8/30/2020 19:15:29'!
PASSED!

!testRun: #AddParameterTest #test20AllSendersShouldSendOldSelector stamp: 'HAW 8/30/2020 19:15:29'!
PASSED!

!testRun: #AddParameterTest #test21NewKeywordToAddToOldSelectorCanNotBeUnary stamp: 'HAW 8/30/2020 19:15:30'!
PASSED!

!testRun: #AddParameterTest #test22NewKeywordToAddToOldSelectorCanNotBeBinary stamp: 'HAW 8/30/2020 19:15:30'!
PASSED!

!testRun: #AddParameterTest #test23NewKeywordToAddToOldSelectorCanNotBeKeywordWithMoreThanOneParameter stamp: 'HAW 8/30/2020 19:15:31'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:31'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:31'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:31'!
sender_m1 self m1
	! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:31'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:31' prior: 50843168!
sender_m1 self m1: 1
	! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:15:31'!
m1!

!testRun: #AddParameterTest #test24AddingParameterToSendersTakeCaresOfSeparators stamp: 'HAW 8/30/2020 19:15:31'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:32'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:32'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:32'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:32'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:32'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:32' prior: 50843205!
sender_m1 self m1: (self at: 1)! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:15:32'!
m1!

!testRun: #AddParameterTest #test25IfNewParameterValueIsKeywordMessageSendAddParenthesisToItForUnaryMessages stamp: 'HAW 8/30/2020 19:15:32'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:32'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:32'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:32'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:32'!
sender_m1 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:32'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:32' prior: 50843245!
sender_m1 self m1: 1 m2: (self at: 1)! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 8/30/2020 19:15:32'!
m1: oldParam!

!testRun: #AddParameterTest #test26IfNewParameterValueIsKeywordMessageSendAddParenthesisToItForKeywordMessages stamp: 'HAW 8/30/2020 19:15:32'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:33'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test27NewParameterValueCanNotHaveMoreThanOneStatement stamp: 'HAW 8/30/2020 19:15:33'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:33'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:33'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:33'!
sender_m1 self m1:[ 1 factorial ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:33'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:33' prior: 50843290!
sender_m1 self m1:[ 1 factorial ] m2: 1! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 8/30/2020 19:15:33'!
m1: oldParam!

!testRun: #AddParameterTest #test28WhenSenderLastParameterIsABlockAddedParameterIsNotAddedInsideTheBlock stamp: 'HAW 8/30/2020 19:15:33'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:34'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:34'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:34'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:34'!
sender self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:34'!
m2: newParam m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:34' prior: 50843331!
sender self m2: 2 m1: 1! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 8/30/2020 19:15:34'!
m1: p1!

!testRun: #AddParameterTest #test29AddingParameterAsFirstOneWorksAsExpected stamp: 'HAW 8/30/2020 19:15:34'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:35'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:35'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:35'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:35'!
sender self m1: 1 m3: 3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:35'!
m1: p1 m2: newParam m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:35' prior: 50843370!
sender self m1: 1 m2: 2 m3: 3! !

!methodRemoval: ClassToAddParameter #m1:m3: stamp: 'HAW 8/30/2020 19:15:35'!
m1: p1 m3: p3!

!testRun: #AddParameterTest #test30AddingParameterInTheMiddleWorksAsExpected stamp: 'HAW 8/30/2020 19:15:35'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:35'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:35'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:35'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:35'!
sender
	self m1: 1 m3: 3.
	self
		m1: 4
		m3: 6! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:35'!
m1: p1 m2: newParam m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:35' prior: 50843410!
sender
	self m1: 1 m2: 2 m3: 3.
	self
		m1: 4
		m2: 2 m3: 6! !

!methodRemoval: ClassToAddParameter #m1:m3: stamp: 'HAW 8/30/2020 19:15:35'!
m1: p1 m3: p3!

!testRun: #AddParameterTest #test31AddingParameterInTheMiddleWithManySendersWorksAsExpected stamp: 'HAW 8/30/2020 19:15:35'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:36'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test32IndexCanNotBeLessThanOne stamp: 'HAW 8/30/2020 19:15:36'!
PASSED!

!testRun: #AddParameterTest #test33IndexCanNotBeBiggerThanNumberOfParametersPlusOne stamp: 'HAW 8/30/2020 19:15:36'!
PASSED!

!testRun: #AddParameterTest #test34IndexMustBeInteger stamp: 'HAW 8/30/2020 19:15:37'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:37'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:37'!
m1

! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:37'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:37'!
m1: newParam

! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:37' prior: 50843462!
sender_m1 self m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:15:37'!
m1

!

!testRun: #AddParameterTest #test35AddingParameterRetractsInsertionPointWhenAtInsertionPointIsANewLine stamp: 'HAW 8/30/2020 19:15:37'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:38'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:38'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test36ParentesisAreAddedToSendersOfUnaryMessage stamp: 'HAW 8/30/2020 19:15:38'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:15:38'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangeKeywordsSelectorOrderTest #test01CannotChangeSelectorOrderInUnaryMessages stamp: 'HAW 8/30/2020 19:15:38'!
PASSED!

!testRun: #ChangeKeywordsSelectorOrderTest #test02CannotChangeSelectorOrderInBinaryMessages stamp: 'HAW 8/30/2020 19:15:39'!
PASSED!

!testRun: #ChangeKeywordsSelectorOrderTest #test03CannotChangeSelectorOrderInKeywordMessagesWithOneParameterOnly stamp: 'HAW 8/30/2020 19:15:39'!
PASSED!

!classDefinition: #ClassToChangeSelectorOrder category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:39'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:39'!
m1: p1 m2: p2! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:39'!
m2: p2 m1: p1! !

!methodRemoval: ClassToChangeSelectorOrder #m1:m2: stamp: 'HAW 8/30/2020 19:15:39'!
m1: p1 m2: p2!

!testRun: #ChangeKeywordsSelectorOrderTest #test04ChangesKeywordsOrder stamp: 'HAW 8/30/2020 19:15:39'!
PASSED!

!classRemoval: #ClassToChangeSelectorOrder stamp: 'HAW 8/30/2020 19:15:40'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeSelectorOrder category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:40'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:40'!
m1: p1 m2: p2! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:40'!
m2: p2 m1: p1! !

!methodRemoval: ClassToChangeSelectorOrder #m1:m2: stamp: 'HAW 8/30/2020 19:15:40'!
m1: p1 m2: p2!

!testRun: #ChangeKeywordsSelectorOrderTest #test05ChangesParametersOrder stamp: 'HAW 8/30/2020 19:15:40'!
PASSED!

!classRemoval: #ClassToChangeSelectorOrder stamp: 'HAW 8/30/2020 19:15:41'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangeKeywordsSelectorOrderTest #test06NewSelectorMustIncludeOldSelectorKeywords stamp: 'HAW 8/30/2020 19:15:41'!
PASSED!

!classDefinition: #ClassToChangeSelectorOrder category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:41'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:41'!
m1: p1 m2: p2 m3: p3! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:41'!
m2: p2 m3: p3 m1: p1! !

!methodRemoval: ClassToChangeSelectorOrder #m1:m2:m3: stamp: 'HAW 8/30/2020 19:15:41'!
m1: p1 m2: p2 m3: p3!

!testRun: #ChangeKeywordsSelectorOrderTest #test07ChangesKeywordsAndParametersOrderForMoreThanTwoKeywords stamp: 'HAW 8/30/2020 19:15:41'!
PASSED!

!classRemoval: #ClassToChangeSelectorOrder stamp: 'HAW 8/30/2020 19:15:42'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:42'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:42'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:42'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test01NewSelectorShouldNotBeEmpty stamp: 'HAW 8/30/2020 19:15:42'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:42'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:42'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:42'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:42'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test02NewSelectorShouldNotContainSeparators stamp: 'HAW 8/30/2020 19:15:42'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:43'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:43'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:43'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:43'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test03ExtractingToSelectorAlreadyDefinedInTheClassRaisesAWarning stamp: 'HAW 8/30/2020 19:15:43'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:44'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:44'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:44'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:44'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test04NewSelectorShouldNotStartWithANumber stamp: 'HAW 8/30/2020 19:15:44'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:44'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:44'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:44'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:44'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test05NewUnarySelectorShouldNotStartWithASymbol stamp: 'HAW 8/30/2020 19:15:44'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:45'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:45'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:45'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test06IntervalToExtractIsNotBeforeMethodSourceCodeBoundaries stamp: 'HAW 8/30/2020 19:15:45'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:45'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:46'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:46'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test07IntervalToExtractIsNotAfterMethodSourceCodeBoundaries stamp: 'HAW 8/30/2020 19:15:46'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:46'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:46'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:46'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:46'!
m1 ^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test08IntervalToExtractShouldNotContainAReturnExpression stamp: 'HAW 8/30/2020 19:15:46'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:47'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:47'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:47'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:47'!
m1 ^ 4! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:47'!
m2

	^ 4! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:47' prior: 50843917!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test09ExtractingALiteralCreatesANewMethodAndChangesExistingCodeToCallThatNewMethod stamp: 'HAW 8/30/2020 19:15:47'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:47'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:47'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:47'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:47'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test10IntervalToExtractDoesNotContainsPartOfTheOriginalSelector stamp: 'HAW 8/30/2020 19:15:47'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:48'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:48'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:48'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:48'!
m1 | localVar | ^ localVar + 3! !

!testRun: #ExtractMethodTest #test11IntervalToExtractDoesNotContainsPartOfLocalVariablesDefinition stamp: 'HAW 8/30/2020 19:15:48'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:49'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:49'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:49'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:49'!
m1 <annoyingPragma>! !

!testRun: #ExtractMethodTest #test12IntervalToExtractDoesNotContainsPartOfPragmasDefinition stamp: 'HAW 8/30/2020 19:15:49'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:49'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:49'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:49'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:49'!
m1 ^ 3 + ((4))! !

!testRun: #ExtractMethodTest #test13IntervalToExtractShouldBeAValidSmalltalkExpression stamp: 'HAW 8/30/2020 19:15:49'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:50'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:50'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:50'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test14ItIsNotPossibleToExtractTheLeftSideOfAnAssignment stamp: 'HAW 8/30/2020 19:15:50'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:51'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:51'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:51'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:51'!
m1 self m3.
	self m4: 5! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:51'!
m2

	self m3.
	self m4: 5! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:51' prior: 50844133!
m1 self m2! !

!testRun: #ExtractMethodTest #test15ExtractingAListOfStatementsCreatesANewMethodWithoutReturn stamp: 'HAW 8/30/2020 19:15:51'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:51'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:51'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:51'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:51'!
m1 ^ 'hey true'! !

!testRun: #ExtractMethodTest #test16CanNotExtractPartOfALiteral stamp: 'HAW 8/30/2020 19:15:51'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:52'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:52'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:52'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:52'!
m1 ^ '^ 3' size! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:52'!
m2

	^ '^ 3' size! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:52' prior: 50844210!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test17AStringContainingTheReturnCharacterCanBeExtracted stamp: 'HAW 8/30/2020 19:15:52'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:53'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:53'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:53'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:53'!
m1
	
	self m3.
	self m4: 5.! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:53'!
m2

	self m3.
	self m4: 5! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:53' prior: 50844253!
m1
	
	self m2.! !

!testRun: #ExtractMethodTest #test18ExtractingAListOfStatementsIncludingDotsRemovesThemAndContinuesWithMethodExtraction stamp: 'HAW 8/30/2020 19:15:53'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:53'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:53'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:53'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:53'!
m1 ^ ((42))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:53'!
m2

	^ 42! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:53' prior: 50844297!
m1 ^ ((self m2))! !

!testRun: #ExtractMethodTest #test19ASelectionContainingAdditionalParenthesesAtTheBeginningAndOrEndCanBeExtracted stamp: 'HAW 8/30/2020 19:15:53'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:54'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:54'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:54'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:54'!
m1 | local | ^ local + 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:54'!
m2: local

	^ local + 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:54' prior: 50844340!
m1 | local | ^ self m2: local! !

!testRun: #ExtractMethodTest #test20ASelectionContainingALocalVariableIsParameterizedOnTheExtractedMessage stamp: 'HAW 8/30/2020 19:15:54'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:55'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:55'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:55'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:55'!
m1 ^ (9) * 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:55'!
m2

	^ (9) * 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:55' prior: 50844384!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test21ASelectionContainingAdditionalParenthesesOnOneSideCanBeExtractedAndItIsNotTrimmed stamp: 'HAW 8/30/2020 19:15:55'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:55'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:55'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:55'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:55'!
m1 | localVar | ^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:55'!
m2: localVar

	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:55' prior: 50844427!
m1 | localVar | ^ self m2: localVar! !

!testRun: #ExtractMethodTest #test22ItIsPossibleToExtractTheLastExpressionOfAMethod stamp: 'HAW 8/30/2020 19:15:55'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:56'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:56'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:56'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test23CanNotExtractWithAnInvalidInterval stamp: 'HAW 8/30/2020 19:15:56'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:56'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:56'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:56'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:56'!
m1 | localVar | localVar _ 8! !

!testRun: #ExtractMethodTest #test24ItIsNotPossibleToExtractAnIntervalIncludingATemporaryAssignmentExpression stamp: 'HAW 8/30/2020 19:15:56'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:57'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:57'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:57'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:57'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test25NewUnarySelectorShouldNotContainInvalidCharacters stamp: 'HAW 8/30/2020 19:15:57'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:58'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:58'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:58'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:58'!
m1 ^ [ |something| something _ 3 ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:58'!
m2

	^ [ |something| something _ 3 ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:58' prior: 50844574!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test26ItIsPossibleToExtractAnEntireBlockIncludingALocalAssignment stamp: 'HAW 8/30/2020 19:15:58'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:58'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:58'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:58'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:58'!
m1 ^ 2 ifNil: [ #boo ] ifNotNil: [ #yay ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:58'!
m2

	^ 2 ifNil: [ #boo ] ifNotNil: [ #yay ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:15:58' prior: 50844618!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test27ItIsPossibleToExtractExpressionsWithOptimizedSelectors stamp: 'HAW 8/30/2020 19:15:58'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:15:59'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:15:59'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:59'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:15:59'!
m1 | localVar | ^ #foo! !

!testRun: #ExtractMethodTest #test28ItIsNotPossibleToExtractALocalVariableInsideOfItsDeclaration stamp: 'HAW 8/30/2020 19:15:59'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:00'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:00'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:00'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:00'!
m1: arg ^ 2 + arg * 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:00'!
m2: arg

	^ 2 + arg! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:00' prior: 50844698!
m1: arg ^ (self m2: arg) * 3! !

!testRun: #ExtractMethodTest #test29ExtractingABinaryExpressionToAKeywordMessageIntroducesParenthesesToNotBreakOriginalPrecedence stamp: 'HAW 8/30/2020 19:16:00'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:00'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:00'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:00'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:00'!
m1 ^ `3 + 4`! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:00'!
m2

	^ `3 + 4`! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:00' prior: 50844743!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test30ItIsPossibleToExtractAQuotedExpression stamp: 'HAW 8/30/2020 19:16:00'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:01'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:01'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:01'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:01'!
m1 ^ 2 factorial ifNotNil: [ #boo ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:01'!
m2

	^ 2 factorial ifNotNil: [ #boo ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:01' prior: 50844785!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test31ItIsPossibleToExtractExpressionsWithOptimizedSelectorsWhereTheReceiverIsNotASimpleLiteral stamp: 'HAW 8/30/2020 19:16:01'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:02'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:02'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:02'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:02'!
m1 ^ [ | a | a _ 3 factorial ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:02'!
m2

	| a | a _ 3 factorial! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:02' prior: 50844830!
m1 ^ [ self m2 ]! !

!testRun: #ExtractMethodTest #test32ItIsPossibleToExtractATemporaryDeclarationOfABlockIfItIsNotUsedOutsideOfSelectionInterval stamp: 'HAW 8/30/2020 19:16:02'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:02'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:02'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:02'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:02'!
m1 | a | a _ 3 factorial! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:02'!
m2

	| a | a _ 3 factorial! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:02' prior: 50844874!
m1 self m2! !

!testRun: #ExtractMethodTest #test33ItIsPossibleToExtractATemporaryDeclarationIfItIsNotUsedOutsideOfSelectionInterval stamp: 'HAW 8/30/2020 19:16:02'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:03'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:03'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:03'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:03'!
m1 | localVar1 localVar2 | ^ localVar1 + localVar2 + 2! !

!testRun: #ExtractMethodTest #test34TryingToExtractAMethodWithLessArgumentsThanNeededFails stamp: 'HAW 8/30/2020 19:16:03'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:04'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:04'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:04'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:04'!
m1 | localVar1 localVar2 | ^ localVar1 + localVar2 + 2! !

!testRun: #ExtractMethodTest #test35TryingToExtractAMethodWithMoreArgumentsThanNeededFails stamp: 'HAW 8/30/2020 19:16:04'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:04'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:04'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:04'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:04'!
m1 ^ (3 + 2) factorial; yourself! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:04'!
m2

	^ (3 + 2) factorial; yourself! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:04' prior: 50844992!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test36ItIsPossibleToExtractACascadeExpression stamp: 'HAW 8/30/2020 19:16:04'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:05'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:05'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:05'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:05'!
m1 | temp | []! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:05'!
m2

	| temp | []! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:05' prior: 50845036!
m1 self m2! !

!testRun: #ExtractMethodTest #test37ItIsPossibleATempDeclarationAlongWithABlock stamp: 'HAW 8/30/2020 19:16:05'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:06'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:06'!
m1 ^ (  (3 + 4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:06'!
m2

	^ 3 + 4! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 8/30/2020 19:16:06' prior: 50845078!
m1 ^ (  (self m2))! !

!testRun: #ExtractMethodTest #test38ItIsPossibleToExtractCodeThatContainsMultipleParenthesisWithSpacesBetweenThem stamp: 'HAW 8/30/2020 19:16:06'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:06'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:06'!
m1 ^ 42! !

!testRun: #ExtractMethodTest #test39TryingToExtractToAMethodThatExistsInASuperclassRaisesAWarning stamp: 'HAW 8/30/2020 19:16:06'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:07'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:07'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:07'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:07'!
m1 |var| var _ 42. ^ var! !

!testRun: #ExtractMethodTest #test40CanNotExtractTemporaryAssignmentWithDeclarationIfTheVariableIsUsedOutsideOfSelectionInterval stamp: 'HAW 8/30/2020 19:16:07'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:07'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:07'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:08'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:08'!
m1: arg ^ self! !

!testRun: #ExtractMethodTest #test41CannotExtractPartOfMethodSignature stamp: 'HAW 8/30/2020 19:16:08'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 8/30/2020 19:16:08'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:08'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:08'!
m1 ^ 2! !

!testRun: #ExtractToTemporaryTest #test01NewVariableCanNotBeEmpty stamp: 'HAW 8/30/2020 19:16:08'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:09'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:09'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:09'!
m1 ^ 2! !

!testRun: #ExtractToTemporaryTest #test02NewVariableHasToBeValid stamp: 'HAW 8/30/2020 19:16:09'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:09'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:09'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:09'!
m1 | new | ^ 2! !

!testRun: #ExtractToTemporaryTest #test03NewVariableNameCanNotBeDefinedInMethod stamp: 'HAW 8/30/2020 19:16:09'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:10'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:10'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:10'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:10'!
m1 ^ 78! !

!testRun: #ExtractToTemporaryTest #test04FailsIfNewTemporaryIsEqualToInstanceVariableInClass stamp: 'HAW 8/30/2020 19:16:10'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:11'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:11'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRefactorSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:11'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:11'!
m1 ^ 78! !

!testRun: #ExtractToTemporaryTest #test05FailsIfNewTemporaryIsEqualToInstanceVariableInAnySuperclass stamp: 'HAW 8/30/2020 19:16:11'!
PASSED!

!classRemoval: #ClassToRefactorSuperclass stamp: 'HAW 8/30/2020 19:16:11'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:12'!
AnObsoleteClassToRefactorSuperclass subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:12'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:12'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test06SourceCodeToExtractCanNotIncludeReturn stamp: 'HAW 8/30/2020 19:16:12'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:12'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:12'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:12'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test07SourceCodeToExtractCanNotBeEmpty stamp: 'HAW 8/30/2020 19:16:12'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:13'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:13'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:13'!
m1 ^ 1 + 3! !

!testRun: #ExtractToTemporaryTest #test08SourceCodeToExtractCanNotHaveSyntaxErrors stamp: 'HAW 8/30/2020 19:16:13'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:13'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:13'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:13'!
m1 1+2. 3+4! !

!testRun: #ExtractToTemporaryTest #test09SourceCodeToExtractHasToBeOneStatement stamp: 'HAW 8/30/2020 19:16:13'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:14'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:14'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:14'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test10FailsIfIntervalToExtractIsBeforeMethodSourceCodeBoundaries stamp: 'HAW 8/30/2020 19:16:14'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:15'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:15'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:15'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test11FailsIfIntervalToExtractIsAfterMethodSourceCodeBoundaries stamp: 'HAW 8/30/2020 19:16:15'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:15'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:15'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:15'!
m1

	^ 42! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:15' prior: 50845515!
m1

	| new |
	new _ 42.
	^ new! !

!testRun: #ExtractToTemporaryTest #test12ItIsPossibleToExtractASingleLiteralFromAMethodWithoutAnyTempsOrArguments stamp: 'HAW 8/30/2020 19:16:15'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:16'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:16'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:16'!
m1

	| four |
	four _ 4.
	^ four + 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:16' prior: 50845545!
m1

	| four two |
	four _ 4.
	two _ 2.
	^ four + two! !

!testRun: #ExtractToTemporaryTest #test13ItIsPossibleToExtractASingleExpressionFromAMethodThatHasAlreadyOtherTemporary stamp: 'HAW 8/30/2020 19:16:16'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:17'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:17'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:17'!
m1

	| |
	^ 3 factorial! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:17' prior: 50845577!
m1

	| f |
	f _ 3 factorial.
	^ f! !

!testRun: #ExtractToTemporaryTest #test14ItIsPossibleToExtractASingleExpressionFromAMethodThatHasAnEmptyTemporariesDeclaration stamp: 'HAW 8/30/2020 19:16:17'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:17'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:17'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:17'!
m1

	^ 42! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:17' prior: 50845609!
m1

	| new |
	new := 42.
	^ new! !

!testRun: #ExtractToTemporaryTest #test15ItIsPossibleToExtractCodeAndGenerateAssignmentUsingAnsiAssignmentStyle stamp: 'HAW 8/30/2020 19:16:17'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:18'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:18'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:18'!
m1

	^ [ self m2 ]! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:18' prior: 50845639!
m1

	^ [ | new |
	new _ self m2 ]! !

!testRun: #ExtractToTemporaryTest #test16ItIsPossibleToExtractASingleLiteralFromABlockWithoutAnyTempsOrArguments stamp: 'HAW 8/30/2020 19:16:18'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:18'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:19'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:19'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test17CannotExtractPartOfMethodName stamp: 'HAW 8/30/2020 19:16:19'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:19'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:19'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:19'!
m1 ^ self m2! !

!testRun: #ExtractToTemporaryTest #test18CannotExtractPartOfMessageSend stamp: 'HAW 8/30/2020 19:16:19'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:20'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:20'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:20'!
m1

	^ 42! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:20' prior: 50845718!
m1

	| new |
	new _ 42.
	^ new! !

!testRun: #ExtractToTemporaryTest #test19ItIsPossibleToExtractAnIntervalWithSomeExtraSpaces stamp: 'HAW 8/30/2020 19:16:20'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:20'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:20'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:20'!
m1

	^ []! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:20' prior: 50845748!
m1

	| new |
	new _ [].
	^ new! !

!testRun: #ExtractToTemporaryTest #test20ItIsPossibleToExtractAnEmptyBlock stamp: 'HAW 8/30/2020 19:16:20'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:21'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:21'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:21'!
m1 | existing | existing := 2! !

!testRun: #ExtractToTemporaryTest #test21CannotExtractLeftSideOfAssignment stamp: 'HAW 8/30/2020 19:16:21'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:22'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:22'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:22'!
m1

	^ 3 factorial; yourself! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:22' prior: 50845802!
m1

	| new |
	new _ 3 factorial; yourself.
	^ new! !

!testRun: #ExtractToTemporaryTest #test22ItIsPossibleToExtractACascadeExpression stamp: 'HAW 8/30/2020 19:16:22'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:22'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:22'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:22'!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:22' prior: 50845833!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:22' prior: 50845837!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:22' prior: 50845841!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:22' prior: 50845845!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:22' prior: 50845849!
m1 ^ 2! !

!testRun: #ExtractToTemporaryTest #test23CannotUseAReservedNameAsTheNewTemporaryVariable stamp: 'HAW 8/30/2020 19:16:22'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:23'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:23'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:23'!
m1

	self run! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:23' prior: 50845878!
m1

	| action |
	action _ self run! !

!testRun: #ExtractToTemporaryTest #test24WhenExtractingAnEntireStatementItOnlyGeneratesTheVariableAssignment stamp: 'HAW 8/30/2020 19:16:23'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:24'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:24'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:24'!
m1: arg ^ self! !

!testRun: #ExtractToTemporaryTest #test25CannotExtractArgumentNamesFromMethodSignature stamp: 'HAW 8/30/2020 19:16:24'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 8/30/2020 19:16:24'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:24'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:24'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:24'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test01ChangesTheSuperclassOfTheClassToRefactor stamp: 'HAW 8/30/2020 19:16:24'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 8/30/2020 19:16:25'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'HAW 8/30/2020 19:16:25'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:25'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'SharedAAA'
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:25'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:25'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'SharedAAA'
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test02ClassToRefactorStructureIsMaintained stamp: 'HAW 8/30/2020 19:16:25'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 8/30/2020 19:16:26'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'private'
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'HAW 8/30/2020 19:16:26'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:26'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:26'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:26'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test03NewSuperclassCategoryIsTheSameAsClassToRefactorCategory stamp: 'HAW 8/30/2020 19:16:26'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 8/30/2020 19:16:27'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'HAW 8/30/2020 19:16:27'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:27'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:27'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:27'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test04NewSuperclassHasNoVariables stamp: 'HAW 8/30/2020 19:16:27'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 8/30/2020 19:16:28'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'HAW 8/30/2020 19:16:28'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:28'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AlreadyExistingClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:28'!
RefactoringClassTestData subclass: #AlreadyExistingClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test05NewSuperclassShouldNotExist stamp: 'HAW 8/30/2020 19:16:28'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 8/30/2020 19:16:28'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AlreadyExistingClass stamp: 'HAW 8/30/2020 19:16:29'!
RefactoringClassTestData subclass: #AlreadyExistingClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test06NewSuperclassNameHasToBeASymbol stamp: 'HAW 8/30/2020 19:16:29'!
PASSED!

!testRun: #InsertSuperclassTest #test07NewSuperclassNameHasToStartWithUppercaseLetter stamp: 'HAW 8/30/2020 19:16:29'!
PASSED!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:30'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:30'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:30'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test08WhenAppliedToMetaclassWorksAsWithClass stamp: 'HAW 8/30/2020 19:16:30'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 8/30/2020 19:16:30'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'HAW 8/30/2020 19:16:30'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test09NewSuperclassNameCanNotBeEmpty stamp: 'HAW 8/30/2020 19:16:30'!
PASSED!

!testRun: #InsertSuperclassTest #test10NewSuperclassNameCanNotHaveSpaces stamp: 'HAW 8/30/2020 19:16:31'!
PASSED!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:31'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:31'!
newMethod ^a! !

!testRun: #MoveToInstanceOrClassMethodTest #test01CannotMoveWhenReferencingInstanceVariables stamp: 'HAW 8/30/2020 19:16:31'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'HAW 8/30/2020 19:16:32'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:32'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: 'ClassToMoveMethod class' category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:32'!
ClassToMoveMethod class
	instanceVariableNames: 'a'!
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:32'!
newMethod|a|! !

!testRun: #MoveToInstanceOrClassMethodTest #test02CannotMoveToClassWhenLocalVariableIsTheSameAsClassInstanceVariable stamp: 'HAW 8/30/2020 19:16:32'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'HAW 8/30/2020 19:16:32'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:32'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:33'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:33'!
newMethod|a|! !

!testRun: #MoveToInstanceOrClassMethodTest #test03CannotMoveToInstanceWhenLocalVariableIsTheSameAsClassInstanceVariable stamp: 'HAW 8/30/2020 19:16:33'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'HAW 8/30/2020 19:16:33'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:33'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:33'!
newMethod! !
!ClassToMoveMethod class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:33'!
newMethod! !

!methodRemoval: ClassToMoveMethod #newMethod stamp: 'HAW 8/30/2020 19:16:33'!
newMethod!

!testRun: #MoveToInstanceOrClassMethodTest #test04InstanceMethodIsMovedToClassMethod stamp: 'HAW 8/30/2020 19:16:33'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'HAW 8/30/2020 19:16:34'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:34'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:34'!
newMethod! !
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:34'!
newMethod! !

!methodRemoval: ClassToMoveMethod class #newMethod stamp: 'HAW 8/30/2020 19:16:34'!
newMethod!

!testRun: #MoveToInstanceOrClassMethodTest #test05ClassMethodIsMovedToInstanceMethod stamp: 'HAW 8/30/2020 19:16:34'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'HAW 8/30/2020 19:16:34'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:34'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushDownInstanceVariableTest #test01AnInstanceVariableDoesNotExistOnClassToFactorCannotBePushedDownToSubclasses stamp: 'HAW 8/30/2020 19:16:34'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableDown stamp: 'HAW 8/30/2020 19:16:35'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:35'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushInstanceVariableDown methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:35'!
newMethod^ a! !

!classDefinition: #SubclassWithoutInstVarOne category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:35'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarTwo category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:35'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushDownInstanceVariableTest #test02AnInstanceVariableThatIsAccessedOnClassToRefactorCannotBePushedDownToAllSubclasses stamp: 'HAW 8/30/2020 19:16:35'!
PASSED!

!classRemoval: #SubclassWithoutInstVarTwo stamp: 'HAW 8/30/2020 19:16:36'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SubclassWithoutInstVarOne stamp: 'HAW 8/30/2020 19:16:36'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushInstanceVariableDown stamp: 'HAW 8/30/2020 19:16:36'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:36'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarOne category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:36'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarTwo category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:36'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:36'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarOne category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:36'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarTwo category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:36'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushDownInstanceVariableTest #test03AnInstanceVariableThatIsNotAccessedOnClassToRefactorShouldBePushedDownToAllSubclasses stamp: 'HAW 8/30/2020 19:16:36'!
PASSED!

!classRemoval: #SubclassWithoutInstVarTwo stamp: 'HAW 8/30/2020 19:16:37'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SubclassWithoutInstVarOne stamp: 'HAW 8/30/2020 19:16:37'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushInstanceVariableDown stamp: 'HAW 8/30/2020 19:16:37'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:37'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:37'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:37'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:37'!
newMethod! !
!Subclass1 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:37' overrides: 50846542!
newMethod! !
!Subclass2 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:37' overrides: 50846542!
newMethod! !

!methodRemoval: ClassToPushMethodDown #newMethod stamp: 'HAW 8/30/2020 19:16:37'!
newMethod!

!testRun: #PushDownMethodTest #test01AnEmptyMethodOnClassToRefactorShouldBePushedDownToSubclasses stamp: 'HAW 8/30/2020 19:16:37'!
PASSED!

!classRemoval: #Subclass2 stamp: 'HAW 8/30/2020 19:16:38'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'HAW 8/30/2020 19:16:38'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 8/30/2020 19:16:39'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:39'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:39'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:39'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:39'!
newMethod|a|! !

!testRun: #PushDownMethodTest #test02AMethodTemporaryVarDeclaredAsInstVarOnASubclassCanNotBePushedDownToSubclasses stamp: 'HAW 8/30/2020 19:16:39'!
PASSED!

!classRemoval: #Subclass2 stamp: 'HAW 8/30/2020 19:16:39'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'HAW 8/30/2020 19:16:40'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 8/30/2020 19:16:40'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:40'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:40'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:40'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:40'!
newMethod:a! !

!testRun: #PushDownMethodTest #test03AMethodArgumentDeclaredAsInstVarOnASubclassCanNotBePushedDownToSubclasses stamp: 'HAW 8/30/2020 19:16:40'!
PASSED!

!classRemoval: #Subclass2 stamp: 'HAW 8/30/2020 19:16:40'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'HAW 8/30/2020 19:16:41'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 8/30/2020 19:16:41'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:41'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:41'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:41'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:41'!
newMethod^ 1 + a! !
!Subclass1 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:41' overrides: 50846716!
newMethod^ 1 + a! !
!Subclass2 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:41' overrides: 50846716!
newMethod^ 1 + a! !

!methodRemoval: ClassToPushMethodDown #newMethod stamp: 'HAW 8/30/2020 19:16:41'!
newMethod^ 1 + a!

!testRun: #PushDownMethodTest #test04AMethodAccessesClassToRefactorInstVarShouldBePushedDownToSubclasses stamp: 'HAW 8/30/2020 19:16:41'!
PASSED!

!classRemoval: #Subclass2 stamp: 'HAW 8/30/2020 19:16:42'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'HAW 8/30/2020 19:16:42'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 8/30/2020 19:16:42'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:42'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:42'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:42'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:42'!
newMethod a = 1! !
!Subclass1 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:42' overrides: 50846782!
newMethod a = 1! !
!Subclass2 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:42' overrides: 50846782!
newMethod a = 1! !

!methodRemoval: ClassToPushMethodDown #newMethod stamp: 'HAW 8/30/2020 19:16:42'!
newMethod a = 1!

!testRun: #PushDownMethodTest #test05AMethodWritesClassToRefactorInstVarShouldBePushedDownToSubclasses stamp: 'HAW 8/30/2020 19:16:42'!
PASSED!

!classRemoval: #Subclass2 stamp: 'HAW 8/30/2020 19:16:43'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'HAW 8/30/2020 19:16:43'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 8/30/2020 19:16:43'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:43'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:43'!
newMethod
	^ 2 + a.! !

!classDefinition: #Subclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:43'!
ClassToPushMethodDown subclass: #Subclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!Subclass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:43' overrides: 50846831!
newMethod^ 1 + a! !

!testRun: #PushDownMethodTest #test06AMethodInClassToRefactorExistsInSubClassesShouldOverrideTheExistingSubClassesMethod stamp: 'HAW 8/30/2020 19:16:43'!
PASSED!

!classRemoval: #Subclass stamp: 'HAW 8/30/2020 19:16:44'!
ClassToPushMethodDown subclass: #Subclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 8/30/2020 19:16:44'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:44'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:44'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:44'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:44'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test01AnInstanceVariableThatIsNotUsedOnClassToRefactorShouldBePushedUpToSuperclass stamp: 'HAW 8/30/2020 19:16:44'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'HAW 8/30/2020 19:16:45'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithoutInstVar stamp: 'HAW 8/30/2020 19:16:45'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:45'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:45'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnoterSubClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:45'!
SuperclassWithoutInstVar subclass: #AnoterSubClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:45'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnoterSubClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:45'!
SuperclassWithoutInstVar subclass: #AnoterSubClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:45'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test02AnInstanceVariableOnMultipleSubclassesShouldBeRemovedFromAllSubclassesAndPushedUpToSuperClass stamp: 'HAW 8/30/2020 19:16:45'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'HAW 8/30/2020 19:16:46'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnoterSubClassWithInstVar stamp: 'HAW 8/30/2020 19:16:46'!
SuperclassWithoutInstVar subclass: #AnoterSubClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithoutInstVar stamp: 'HAW 8/30/2020 19:16:46'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:46'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test03AnInstanceVariableDoesNotExistOnClassToRefactorCannotBePushedUp stamp: 'HAW 8/30/2020 19:16:46'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'HAW 8/30/2020 19:16:47'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithVariableAsTemporaryVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:47'!
RefactoringClassTestData subclass: #SuperclassWithVariableAsTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassWithVariableAsTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:47'!
newMethod| a |! !

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:47'!
SuperclassWithVariableAsTemporaryVariable subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test04AnInstanceVariableThatIsUsedOnSuperClassAsTemporaryVariableCannotBePushedUp stamp: 'HAW 8/30/2020 19:16:47'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'HAW 8/30/2020 19:16:48'!
SuperclassWithVariableAsTemporaryVariable subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithVariableAsTemporaryVariable stamp: 'HAW 8/30/2020 19:16:48'!
RefactoringClassTestData subclass: #SuperclassWithVariableAsTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:48'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:48'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:48'!
newMethod! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:48'!
newMethod! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'HAW 8/30/2020 19:16:48'!
newMethod!

!testRun: #PushUpMethodTest #test01AnEmptyMethodOnClassToRefactorShouldBePushedUpToSuperclass stamp: 'HAW 8/30/2020 19:16:48'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 8/30/2020 19:16:49'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 8/30/2020 19:16:49'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:49'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:49'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:49'!
newMethod^ 1 + a! !

!testRun: #PushUpMethodTest #test02AMethodAccessesClassToRefactorInstVarCanNotBePushedUpToSuperclass stamp: 'HAW 8/30/2020 19:16:49'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 8/30/2020 19:16:50'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 8/30/2020 19:16:50'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:50'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:50'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:50'!
newMethod a = 1! !

!testRun: #PushUpMethodTest #test03AMethodWritesClassToRefactorInstVarCanNotBePushedUpToSuperclass stamp: 'HAW 8/30/2020 19:16:50'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 8/30/2020 19:16:50'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 8/30/2020 19:16:51'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:51'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:51'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:51'!
newMethod a = 1! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:51'!
newMethod a = 1! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'HAW 8/30/2020 19:16:51'!
newMethod a = 1!

!testRun: #PushUpMethodTest #test04AMethodWritesSuperClassInstVarShouldBePushedUpToSuperclass stamp: 'HAW 8/30/2020 19:16:51'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 8/30/2020 19:16:51'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 8/30/2020 19:16:52'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:52'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:52'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:52'!
newMethod^ 1 + a! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:52'!
newMethod^ 1 + a! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'HAW 8/30/2020 19:16:52'!
newMethod^ 1 + a!

!testRun: #PushUpMethodTest #test05AMethodAccessesSuperClassClassToRefactorInstVarShouldBePushedUpToSuperclass stamp: 'HAW 8/30/2020 19:16:52'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 8/30/2020 19:16:52'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 8/30/2020 19:16:53'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:53'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:53'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:53'!
newMethod^ 1 + a! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:53'!
newMethod^ 1 + a! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'HAW 8/30/2020 19:16:53'!
newMethod^ 1 + a!

!testRun: #PushUpMethodTest #test06AMethodAccessesSuperClassClassToRefactorInstVarShouldBePushedUpToSuperclass stamp: 'HAW 8/30/2020 19:16:53'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 8/30/2020 19:16:53'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 8/30/2020 19:16:53'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:53'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!Superclass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:53'!
newMethod^ 1 + a! !

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:53'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:53' overrides: 50847346!
newMethod
	^ 2 + a.! !

!testRun: #PushUpMethodTest #test07AMethodInClassToRefactorExistsInSuperClassShouldOverrideTheExistingSuperClassMethod stamp: 'HAW 8/30/2020 19:16:54'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 8/30/2020 19:16:54'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 8/30/2020 19:16:54'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:54'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test01NoVariableIsRemovedWhenClassHasNoInstanceVariable stamp: 'HAW 8/30/2020 19:16:54'!
PASSED!

!classRemoval: #ClassWithoutInstVar stamp: 'HAW 8/30/2020 19:16:55'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:55'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:55'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test02UnreferencedVariablesAreRemoved stamp: 'HAW 8/30/2020 19:16:55'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'HAW 8/30/2020 19:16:56'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:56'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:56'!
m1 ^a! !

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:56'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test03VariablesWithReferencesAreNotRemoved stamp: 'HAW 8/30/2020 19:16:56'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'HAW 8/30/2020 19:16:57'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:57'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithReferenceInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:57'!
ClassWithInstVar subclass: #ClassWithReferenceInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithReferenceInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:57'!
m1 ^a! !

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:57'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test04VariablesWithReferencesInSubclassesAreNotRemoved stamp: 'HAW 8/30/2020 19:16:57'!
PASSED!

!classRemoval: #ClassWithReferenceInstVar stamp: 'HAW 8/30/2020 19:16:57'!
ClassWithInstVar subclass: #ClassWithReferenceInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassWithInstVar stamp: 'HAW 8/30/2020 19:16:57'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:57'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveInstanceVariableTest #test01CanNotRemoveAnInstanceVariableNotDefinedInClass stamp: 'HAW 8/30/2020 19:16:57'!
PASSED!

!classRemoval: #ClassWithoutInstVar stamp: 'HAW 8/30/2020 19:16:58'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:58'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:16:58'!
m1 ^a! !

!testRun: #RemoveInstanceVariableTest #test02CanNotRemoveInstanceVariableWithReferences stamp: 'HAW 8/30/2020 19:16:58'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'HAW 8/30/2020 19:16:59'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:59'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:16:59'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveInstanceVariableTest #test03WhenAppliedRemovesInstanceVariable stamp: 'HAW 8/30/2020 19:16:59'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'HAW 8/30/2020 19:16:59'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveParameterTest #test01CanNotRemoveParameterFromUnaryMessages stamp: 'HAW 8/30/2020 19:16:59'!
PASSED!

!testRun: #RemoveParameterTest #test02CanNotRemoveParameterFromBinaryMessages stamp: 'HAW 8/30/2020 19:17:00'!
PASSED!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:00'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:00'!
m1: parameter! !

!testRun: #RemoveParameterTest #test03CanNotRemoveParameterNotInMessage stamp: 'HAW 8/30/2020 19:17:00'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:01'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:01'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:01'!
m1: parameter! !

!testRun: #RemoveParameterTest #test04AllImplementorsMustImplementSelector stamp: 'HAW 8/30/2020 19:17:01'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:02'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:02'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:02'!
m1: parameter! !

!testRun: #RemoveParameterTest #test05AllSendersShouldSendSelector stamp: 'HAW 8/30/2020 19:17:02'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:02'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:02'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:02'!
m1: parameter ^parameter! !

!testRun: #RemoveParameterTest #test06NoImplementorReferencesParameterToRemove stamp: 'HAW 8/30/2020 19:17:02'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:03'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:03'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:03'!
m1:parameter1 
	m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:03'!
m2:parameter2! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'HAW 8/30/2020 19:17:03'!
m1:parameter1 
	m2:parameter2!

!testRun: #RemoveParameterTest #test07FirstParameterIsRemovedCorrectly stamp: 'HAW 8/30/2020 19:17:03'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:04'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:04'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:04'!
m1:parameter1 m2:parameter2
	| t1 |! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:04'!
m1:parameter1 
	| t1 |! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'HAW 8/30/2020 19:17:04'!
m1:parameter1 m2:parameter2
	| t1 |!

!testRun: #RemoveParameterTest #test08LastParameterIsRemovedCorrectly stamp: 'HAW 8/30/2020 19:17:04'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:04'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:04'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:04'!
m0: parameter0 
	m1:parameter1 
	m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:04'!
m0: parameter0 
	m2:parameter2! !

!methodRemoval: ClassToRemoveParameter #m0:m1:m2: stamp: 'HAW 8/30/2020 19:17:04'!
m0: parameter0 
	m1:parameter1 
	m2:parameter2!

!testRun: #RemoveParameterTest #test09MiddleParameterIsRemovedCorrectly stamp: 'HAW 8/30/2020 19:17:04'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:05'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:05'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:05'!
m1:parameter1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:05'!
m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 8/30/2020 19:17:05'!
m1:parameter1!

!testRun: #RemoveParameterTest #test10ParameterFromOneKeywordSelectorIsRemovedCorrectly stamp: 'HAW 8/30/2020 19:17:05'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:06'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:06'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:06'!
m1:parameter1 m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:06'!
sender
		self 
			m1: 1 
			m2: 2 ! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:06'!
m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:06' prior: 50847831!
sender
		self 
			m2: 2 ! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'HAW 8/30/2020 19:17:06'!
m1:parameter1 m2:parameter2!

!testRun: #RemoveParameterTest #test11ParameterOfSendersOfMoreThanOneKeywordSelectorsIsRemovedCorrectly stamp: 'HAW 8/30/2020 19:17:06'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:06'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:06'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:06'!
m1:parameter1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:06'!
sender
		self 
			m1:
			 (1+2).! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:06'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:06' prior: 50847873!
sender
		self 
			m1.! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 8/30/2020 19:17:06'!
m1:parameter1!

!testRun: #RemoveParameterTest #test12ParameterOfSendersOfOneKeywordSelectorsIsRemovedCorrectly stamp: 'HAW 8/30/2020 19:17:06'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:07'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:07'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:07'!
m1:parameter1 m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:07'!
sender
		self m1: (1+1) m2: 2.
		self m1: 3 m2: 4.! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:07'!
m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:07' prior: 50847913!
sender
		self m2: 2.
		self m2: 4.! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'HAW 8/30/2020 19:17:07'!
m1:parameter1 m2:parameter2!

!testRun: #RemoveParameterTest #test13ParameterIsRemovedCorrecltyFromSendersWithMoreThanOneSend stamp: 'HAW 8/30/2020 19:17:07'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:17:08'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveParameterTest #test14CanNotRemoveParameterIndexLessThanOne stamp: 'HAW 8/30/2020 19:17:08'!
PASSED!

!testRun: #RemoveParameterTest #test15CanNotRemoveParameterIndexBiggerThanOldSelectorNumberOfKeywords stamp: 'HAW 8/30/2020 19:17:08'!
PASSED!

!testRun: #RemoveParameterTest #test16ParameterIndexMustBeInteger stamp: 'HAW 8/30/2020 19:17:08'!
PASSED!

!testRun: #RenameClassTest #test01NewClassNameHasToBeDifferentToOldOne stamp: 'HAW 8/30/2020 19:17:09'!
PASSED!

!testRun: #RenameClassTest #test02NewClassNameHasToBeASymbol stamp: 'HAW 8/30/2020 19:17:09'!
PASSED!

!testRun: #RenameClassTest #test03NewClassNameHasToStartWithUppercaseLetter stamp: 'HAW 8/30/2020 19:17:10'!
PASSED!

!testRun: #RenameClassTest #test04NewClassShouldNotExist stamp: 'HAW 8/30/2020 19:17:10'!
PASSED!

!testRun: #RenameClassTest #test04_01NewClassNameShouldNotBeAGlobalVariable stamp: 'HAW 8/30/2020 19:17:10'!
PASSED!

!testRun: #RenameClassTest #test05NewClassShouldNotBeUndeclare stamp: 'HAW 8/30/2020 19:17:11'!
PASSED!

!classDefinition: #OldClassTest07 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:11'!
RefactoringClassTestData subclass: #OldClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest07 as: #NewClassTest07 stamp: 'HAW 8/30/2020 19:17:11'!
Smalltalk renameClassNamed: #OldClassTest07 as: #NewClassTest07!

!testRun: #RenameClassTest #test06OldClassIsRenamedToNewClass stamp: 'HAW 8/30/2020 19:17:11'!
PASSED!

!classRemoval: #NewClassTest07 stamp: 'HAW 8/30/2020 19:17:12'!
RefactoringClassTestData subclass: #NewClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest07 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:12'!
RefactoringClassTestData subclass: #OldClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest07 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:12'!
m1 OldClassTest07 new! !

!classRenamed: #OldClassTest07 as: #NewClassTest07 stamp: 'HAW 8/30/2020 19:17:12'!
Smalltalk renameClassNamed: #OldClassTest07 as: #NewClassTest07!
!NewClassTest07 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:12' prior: 50848006!
m1 NewClassTest07 new! !

!testRun: #RenameClassTest #test07OldClassDirectReferencesAreRenamed stamp: 'HAW 8/30/2020 19:17:12'!
PASSED!

!classRemoval: #NewClassTest07 stamp: 'HAW 8/30/2020 19:17:13'!
RefactoringClassTestData subclass: #NewClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest08 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:13'!
RefactoringClassTestData subclass: #OldClassTest08
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest08 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:13'!
m1 #OldClassTest08 size! !

!classRenamed: #OldClassTest08 as: #NewClassTest8 stamp: 'HAW 8/30/2020 19:17:13'!
Smalltalk renameClassNamed: #OldClassTest08 as: #NewClassTest8!
!NewClassTest8 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:13' prior: 50848038!
m1 #NewClassTest8 size! !

!testRun: #RenameClassTest #test08OldClassLiteralReferencesAreRenamed stamp: 'HAW 8/30/2020 19:17:13'!
PASSED!

!classRemoval: #NewClassTest8 stamp: 'HAW 8/30/2020 19:17:13'!
RefactoringClassTestData subclass: #NewClassTest8
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest09 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:13'!
RefactoringClassTestData subclass: #OldClassTest09
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest09 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:13'!
m1 OldClassTest09 new. Object new! !

!classRenamed: #OldClassTest09 as: #NewClassTest09 stamp: 'HAW 8/30/2020 19:17:13'!
Smalltalk renameClassNamed: #OldClassTest09 as: #NewClassTest09!
!NewClassTest09 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:14' prior: 50848070!
m1 NewClassTest09 new. Object new! !

!testRun: #RenameClassTest #test09OtherClassDirectReferencesAreNotRenamed stamp: 'HAW 8/30/2020 19:17:14'!
PASSED!

!classRemoval: #NewClassTest09 stamp: 'HAW 8/30/2020 19:17:14'!
RefactoringClassTestData subclass: #NewClassTest09
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest10 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:14'!
RefactoringClassTestData subclass: #OldClassTest10
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest10 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:14'!
m1 #OldClassTest10 size. #Object size! !

!classRenamed: #OldClassTest10 as: #NewClassTest10 stamp: 'HAW 8/30/2020 19:17:14'!
Smalltalk renameClassNamed: #OldClassTest10 as: #NewClassTest10!
!NewClassTest10 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:14' prior: 50848102!
m1 #NewClassTest10 size. #Object size! !

!testRun: #RenameClassTest #test10OtherLiteralReferencesAreNotRenamed stamp: 'HAW 8/30/2020 19:17:14'!
PASSED!

!classRemoval: #NewClassTest10 stamp: 'HAW 8/30/2020 19:17:15'!
RefactoringClassTestData subclass: #NewClassTest10
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest11 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:15'!
RefactoringClassTestData subclass: #OldClassTest11
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest11 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:15'!
m1 OldClassTest11 new. #OldClassTest11 size! !

!classRenamed: #OldClassTest11 as: #NewClassTest11 stamp: 'HAW 8/30/2020 19:17:15'!
Smalltalk renameClassNamed: #OldClassTest11 as: #NewClassTest11!
!NewClassTest11 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:15' prior: 50848135!
m1 NewClassTest11 new. #NewClassTest11 size! !

!testRun: #RenameClassTest #test11OldClassDirectAndLiteralReferencesAreRenameAtOnce stamp: 'HAW 8/30/2020 19:17:15'!
PASSED!

!classRemoval: #NewClassTest11 stamp: 'HAW 8/30/2020 19:17:16'!
RefactoringClassTestData subclass: #NewClassTest11
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameClassTest #test12CanNotRenameAMetaclass stamp: 'HAW 8/30/2020 19:17:16'!
PASSED!

!testRun: #RenameClassTest #test13NewClassNameHasToBeASymbol stamp: 'HAW 8/30/2020 19:17:16'!
PASSED!

!classDefinition: #OldClassTest14 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:17'!
RefactoringClassTestData subclass: #OldClassTest14
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameClassTest #test14NewClassNameCanNotHaveSpaces stamp: 'HAW 8/30/2020 19:17:17'!
PASSED!

!classRemoval: #OldClassTest14 stamp: 'HAW 8/30/2020 19:17:17'!
RefactoringClassTestData subclass: #OldClassTest14
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:17'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:17'!
m1 ^OldClassTest15! !

!classDefinition: #OldClassTest15 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:17'!
RefactoringClassTestData subclass: #OldClassTest15
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest15 as: #NewClassTest15 stamp: 'HAW 8/30/2020 19:17:17'!
Smalltalk renameClassNamed: #OldClassTest15 as: #NewClassTest15!

!testRun: #RenameClassTest #test15ItDoesNotRenameReferencesToClassVariableWithSameName stamp: 'HAW 8/30/2020 19:17:17'!
PASSED!

!classRemoval: #NewClassTest15 stamp: 'HAW 8/30/2020 19:17:18'!
RefactoringClassTestData subclass: #NewClassTest15
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 8/30/2020 19:17:18'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: 'OldClassTest15'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVarSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:18'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:18'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:18'!
m1 ^OldClassTest16! !

!classDefinition: #OldClassTest16 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:18'!
RefactoringClassTestData subclass: #OldClassTest16
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest16 as: #NewClassTest16 stamp: 'HAW 8/30/2020 19:17:18'!
Smalltalk renameClassNamed: #OldClassTest16 as: #NewClassTest16!

!testRun: #RenameClassTest #test16ItDoesNotRenameReferencesToClassVariableWithSameNameDefinedInAnySuperclass stamp: 'HAW 8/30/2020 19:17:18'!
PASSED!

!classRemoval: #NewClassTest16 stamp: 'HAW 8/30/2020 19:17:19'!
RefactoringClassTestData subclass: #NewClassTest16
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 8/30/2020 19:17:19'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVarSuperclass stamp: 'HAW 8/30/2020 19:17:20'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: 'OldClassTest16'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVarSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:20'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:20'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:20'!
m1 ^NewClassTest17! !

!classDefinition: #OldClassTest17 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:20'!
RefactoringClassTestData subclass: #OldClassTest17
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest17 as: #NewClassTest17 stamp: 'HAW 8/30/2020 19:17:20'!
Smalltalk renameClassNamed: #OldClassTest17 as: #NewClassTest17!

!testRun: #RenameClassTest #test17ItDoesNotRenameReferencesToClassVariableWithSameNameAsNewClassDefinedInAnySuperclass stamp: 'HAW 8/30/2020 19:17:20'!
PASSED!

!classRemoval: #NewClassTest17 stamp: 'HAW 8/30/2020 19:17:20'!
RefactoringClassTestData subclass: #NewClassTest17
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 8/30/2020 19:17:21'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVarSuperclass stamp: 'HAW 8/30/2020 19:17:21'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: 'NewClassTest17'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest18 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:21'!
RefactoringClassTestData subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest18 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:21'!
m1 ^OldClassTest18! !

!classRenamed: #OldClassTest18 as: #NewClassTest18 stamp: 'HAW 8/30/2020 19:17:21'!
Smalltalk renameClassNamed: #OldClassTest18 as: #NewClassTest18!
!NewClassTest18 methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:21' prior: 50848370!
m1 ^NewClassTest18! !

!testRun: #RenameClassTest #test18WorksCorrectlyWhenSourceCodeEndsWithClassToRename stamp: 'HAW 8/30/2020 19:17:21'!
PASSED!

!classRemoval: #NewClassTest18 stamp: 'HAW 8/30/2020 19:17:22'!
RefactoringClassTestData subclass: #NewClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest18 category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:22'!
RefactoringClassTestData subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameClassTest #test19RenamesClassWhenMethodReferencesClassAndDoesNothing stamp: 'HAW 8/30/2020 19:17:22'!
PASSED!

!classRemoval: #OldClassTest18 stamp: 'HAW 8/30/2020 19:17:22'!
RefactoringClassTestData subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test00GlobalCanNotBeClass stamp: 'HAW 8/30/2020 19:17:22'!
PASSED!

!testRun: #RenameGlobalTest #test01NewNameHasToBeDifferentToOldOne stamp: 'HAW 8/30/2020 19:17:23'!
PASSED!

!testRun: #RenameGlobalTest #test02NewNameHasToBeASymbol stamp: 'HAW 8/30/2020 19:17:23'!
PASSED!

!testRun: #RenameGlobalTest #test03NewNameShouldNotBeAClass stamp: 'HAW 8/30/2020 19:17:23'!
PASSED!

!testRun: #RenameGlobalTest #test04NewNameShouldNotBeAGlobalVariable stamp: 'HAW 8/30/2020 19:17:24'!
PASSED!

!testRun: #RenameGlobalTest #test06OldNameIsRenamedToNewName stamp: 'HAW 8/30/2020 19:17:24'!
PASSED!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:25'!
m1 ^OldNameToRename__! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:25' prior: 50848445!
m1 ^NewNameToRename__! !

!testRun: #RenameGlobalTest #test07OldDirectReferencesAreRenamed stamp: 'HAW 8/30/2020 19:17:25'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:17:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:26'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:26'!
m1 ^#OldNameToRename__! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:26' prior: 50848472!
m1 ^#NewNameToRename__! !

!testRun: #RenameGlobalTest #test08OldNameLiteralReferencesAreRenamed stamp: 'HAW 8/30/2020 19:17:26'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:17:26'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test09NewNameHasToBeASymbol stamp: 'HAW 8/30/2020 19:17:26'!
PASSED!

!testRun: #RenameGlobalTest #test10NewNameCanNotHaveSpaces stamp: 'HAW 8/30/2020 19:17:27'!
PASSED!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:27'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:27'!
m1 ^OldNameToRename__! !

!testRun: #RenameGlobalTest #test11ItDoesNotRenameReferencesToClassVariableWithSameName stamp: 'HAW 8/30/2020 19:17:27'!
PASSED!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 8/30/2020 19:17:28'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: 'OldNameToRename__'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVarSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:28'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:28'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:28'!
m1 ^OldNameRenamed__! !

!testRun: #RenameGlobalTest #test12ItDoesNotRenameReferencesToClassVariableWithSameNameDefinedInAnySuperclass stamp: 'HAW 8/30/2020 19:17:28'!
PASSED!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 8/30/2020 19:17:28'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVarSuperclass stamp: 'HAW 8/30/2020 19:17:29'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: 'OldNameRenamed__'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test13OldNameMustBeDefined stamp: 'HAW 8/30/2020 19:17:29'!
PASSED!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:29'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:29'!
m1 ^OldNameToRename__! !

!testRun: #RenameGlobalTest #test14ItDoesNotRenameReferencesToClassVariableFromClassSideWithSameName stamp: 'HAW 8/30/2020 19:17:29'!
PASSED!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 8/30/2020 19:17:30'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: 'OldNameToRename__'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test15OldNameCanNotBeEmpty stamp: 'HAW 8/30/2020 19:17:30'!
PASSED!

!classDefinition: #ClassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:30'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test01CanNotRenameAnInstanceVariableNotDefinedInClass stamp: 'HAW 8/30/2020 19:17:30'!
PASSED!

!classRemoval: #ClassWithoutInstVar stamp: 'HAW 8/30/2020 19:17:31'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:31'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test02NewVariableNameCanNotBeEmpty stamp: 'HAW 8/30/2020 19:17:31'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:31'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:31'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test03NewVariableNameCanNotContainBlanks stamp: 'HAW 8/30/2020 19:17:31'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:32'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:32'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test04NewVariableNameCanNotContainInvalidCharacters stamp: 'HAW 8/30/2020 19:17:32'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:33'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:33'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test05ValidNewVariableNameGetBlanksTrimmed stamp: 'HAW 8/30/2020 19:17:33'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:33'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:33'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test06NewVariableNameCanNotBeDefinedInClass stamp: 'HAW 8/30/2020 19:17:33'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:34'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:34'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:34'!
SuperclassWithInstVar subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test07NewVariableNameCanNotBeDefinedInSuperclasses stamp: 'HAW 8/30/2020 19:17:34'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:34'!
SuperclassWithInstVar subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithInstVar stamp: 'HAW 8/30/2020 19:17:35'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:35'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:35'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test08NewVariableNameCanNotBeDefinedInAnySubclass stamp: 'HAW 8/30/2020 19:17:35'!
PASSED!

!classRemoval: #SubclassWithInstVar stamp: 'HAW 8/30/2020 19:17:35'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test09RenameCreatesNewInstanceVariableAndDeletesOldOne stamp: 'HAW 8/30/2020 19:17:36'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:36'!
m1 ^old! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:36' prior: 50848834!
m1 ^new! !

!testRun: #RenameInstanceVariableTest #test10ReadReferencesToOldVariableAreRenamed stamp: 'HAW 8/30/2020 19:17:36'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:37'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:37'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:37'!
m1 old := 10! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:37'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:37' prior: 50848871!
m1 new := 10! !

!testRun: #RenameInstanceVariableTest #test11WriteReferencesToOldVariableAreRenamed stamp: 'HAW 8/30/2020 19:17:37'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:38'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:38'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:38'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:38'!
m1 old := 10. ^old! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:38'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:38' prior: 50848917!
m1 new := 10. ^new! !

!testRun: #RenameInstanceVariableTest #test12ReferencesInSubclassesAreRenamed stamp: 'HAW 8/30/2020 19:17:38'!
PASSED!

!classRemoval: #SubclassWithInstVar stamp: 'HAW 8/30/2020 19:17:38'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old keep'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:39'!
m1 keep := old. ^keep! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new keep'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:39' prior: 50848962!
m1 keep := new. ^keep! !

!testRun: #RenameInstanceVariableTest #test13ReferencesToOtherVariablesAreNotRenamed stamp: 'HAW 8/30/2020 19:17:39'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new keep'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test14NewVariableOfExistingInstancesReferToOldVariableValue stamp: 'HAW 8/30/2020 19:17:39'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:40'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:40'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:40'!
m1 | new | new := 10.! !

!testRun: #RenameInstanceVariableTest #test15FailsWhenNewVariableEqualsTemporaryVariableOfAMethodInClass stamp: 'HAW 8/30/2020 19:17:40'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:40'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:40'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:40'!
m1:new! !

!testRun: #RenameInstanceVariableTest #test16FailsWhenNewVariableEqualsArgumentOfAMethodInClass stamp: 'HAW 8/30/2020 19:17:40'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:41'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:41'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:41'!
m1 [ :new | ] value: 1! !

!testRun: #RenameInstanceVariableTest #test17FailsWhenNewVariableEqualsArgumentOfABlockInAMethodInClass stamp: 'HAW 8/30/2020 19:17:41'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:42'!
m1 [ | new | ] value! !

!testRun: #RenameInstanceVariableTest #test18FailsWhenNewVariableEqualsTemporaryOfABlockInAMethodInClass stamp: 'HAW 8/30/2020 19:17:42'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassOfClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:42'!
ClassToRenameInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassOfClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:42'!
m1 | new | ! !

!testRun: #RenameInstanceVariableTest #test19FailsWhenNewVariableIsHiddenInAnyMethodOfAnySubclass stamp: 'HAW 8/30/2020 19:17:42'!
PASSED!

!classRemoval: #SubclassOfClassToRefactor stamp: 'HAW 8/30/2020 19:17:43'!
ClassToRenameInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:43'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:43'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:43'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:43' overrides: 16806529!
wantsChangeSetLogging ^false! !

!testRun: #RenameInstanceVariableTest #test20ClassChangeIsAddedWhenRenamingAnInstanceVariable stamp: 'HAW 8/30/2020 19:17:43'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 8/30/2020 19:17:44'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:44'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:44'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:44'!
newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:44'!
oldXyz__!

!testRun: #RenameSelectorTest #test01MessageWithNoSendersCreatesNewMethodAndRemovesOldOne stamp: 'HAW 8/30/2020 19:17:44'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:45'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:45'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:45'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:45'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:45'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:45' prior: 50849238!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:45'!
oldXyz__!

!testRun: #RenameSelectorTest #test02SendersOfMessageAreRenamed stamp: 'HAW 8/30/2020 19:17:45'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:45'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:45'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:45'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:45'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:45' prior: 50849277!
m1__ self oldXyz__. self toKeep! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:45'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:45' prior: 50849281!
m1__ self newXyz__. self toKeep! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:45'!
oldXyz__!

!testRun: #RenameSelectorTest #test03OtherMessagesSendsAreNotRenamed stamp: 'HAW 8/30/2020 19:17:45'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:46'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameSelectorTest #test04OldSelectorCanNotBeEmpty stamp: 'HAW 8/30/2020 19:17:46'!
PASSED!

!testRun: #RenameSelectorTest #test05NewSelectorCanNotBeEmpty stamp: 'HAW 8/30/2020 19:17:46'!
PASSED!

!testRun: #RenameSelectorTest #test06CanRenameWithoutImplementors stamp: 'HAW 8/30/2020 19:17:47'!
PASSED!

!testRun: #RenameSelectorTest #test07AllImplementorsMustImplementOldSelector stamp: 'HAW 8/30/2020 19:17:47'!
PASSED!

!testRun: #RenameSelectorTest #test08AllSendersShouldSendOldSelector stamp: 'HAW 8/30/2020 19:17:48'!
PASSED!

!testRun: #RenameSelectorTest #test09NewSelectorMustBeOfSameTypeAsOldSelector stamp: 'HAW 8/30/2020 19:17:48'!
PASSED!

!testRun: #RenameSelectorTest #test10NewSelectorMustHaveSameNumberOfArgumentsAsOldSelector stamp: 'HAW 8/30/2020 19:17:48'!
PASSED!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:49'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:49'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:49'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'oldSelectorCategory' stamp: 'HAW 8/30/2020 19:17:49'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:49' prior: 50849345!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:49'!
oldXyz__!

!testRun: #RenameSelectorTest #test11NewImplementorsKeepMethodCategory stamp: 'HAW 8/30/2020 19:17:49'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:49'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:49'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:49'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:49'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:49' prior: 50849380!
oldXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:49'!
newXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:49' prior: 50849392!
newXyz__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:49'!
oldXyz__ self oldXyz__!

!testRun: #RenameSelectorTest #test12RenamesRecursiveMethodsWhenNotInSenders stamp: 'HAW 8/30/2020 19:17:49'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:50'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:50'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:50'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:50'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:50' prior: 50849425!
oldXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:50'!
newXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:50' prior: 50849433!
oldXyz__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:50' prior: 50849437!
newXyz__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:50'!
oldXyz__ self newXyz__!

!testRun: #RenameSelectorTest #test13RenamesRecursiveMethodsWhenInSenders stamp: 'HAW 8/30/2020 19:17:50'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:51'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:51'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:51'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:51'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:51' prior: 50849474!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:51'!
m1 #oldXyz__ size! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:51'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:51' prior: 50849486!
m1 #newXyz__ size! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:51'!
oldXyz__!

!testRun: #RenameSelectorTest #test14RenamesSymbolsEqualToOldSelector stamp: 'HAW 8/30/2020 19:17:51'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:51'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:52'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:52'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52' prior: 50849525!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52' prior: 50849533!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:52'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:52'!
oldXyz__!

!testRun: #RenameSelectorTest #test15ScopeToRenameCanBeClassOnly stamp: 'HAW 8/30/2020 19:17:52'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:52'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'HAW 8/30/2020 19:17:52'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:52'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:52'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:53'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849601!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849605!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849609!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849613!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:53'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849627!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849631!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849636!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849640!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:53'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849685!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849689!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849693!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' overrides: 50849697!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' prior: 50849605!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' prior: 50849613!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' prior: 50849631 overrides: 50849710!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' prior: 50849640 overrides: 50849715!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' prior: 50849658 overrides: 50849720!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:53' prior: 50849668 overrides: 50849725!
m1__ self newXyz__! !

!methodRemoval: SuperclassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:53'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:53'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:53'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:53'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:53'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:53'!
oldXyz__!

!testRun: #RenameSelectorTest #test16ScopeToRenameCanBeHierarchyOnly stamp: 'HAW 8/30/2020 19:17:53'!
PASSED!

!classRemoval: #SubclassToRenameSelector stamp: 'HAW 8/30/2020 19:17:53'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:53'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassToRenameSelector stamp: 'HAW 8/30/2020 19:17:54'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'HAW 8/30/2020 19:17:54'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:54'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
m1__ self oldXyz__! !

!classDefinition: #AnotherclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:54'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__-toAvoid' stamp: 'HAW 8/30/2020 19:17:54'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54'!
newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54' prior: 50849830!
m1__ self newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54' prior: 50849838!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54' prior: 50849805!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:54' prior: 50849813!
m1__ self newXyz__! !

!methodRemoval: AnotherclassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:54'!
oldXyz__!

!methodRemoval: AnotherclassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:54'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:54'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:54'!
oldXyz__!

!testRun: #RenameSelectorTest #test17ScopeToRenameCanBeCategoryOnly stamp: 'HAW 8/30/2020 19:17:54'!
PASSED!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'HAW 8/30/2020 19:17:55'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:55'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnotherclassToRenameSelector stamp: 'HAW 8/30/2020 19:17:55'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassToRenameSelector category: #'__Refactoring-TestData__-Another' stamp: 'HAW 8/30/2020 19:17:55'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:55'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' overrides: 50849939!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' overrides: 50849943!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' overrides: 50849947!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' overrides: 50849951!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:55'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' overrides: 50849965!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' overrides: 50849969!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' overrides: 50849974!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' overrides: 50849978!
m1__ self oldXyz__! !

!classDefinition: #AnotheclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:55'!
RefactoringClassTestData subclass: #AnotheclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
oldXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
m1__ self oldXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
oldXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
m1__ self oldXyz__! !

!classDefinition: #OtherCatClassToRenameSelector category: #'__Refactoring-TestData__-Another' stamp: 'HAW 8/30/2020 19:17:55'!
RefactoringClassTestData subclass: #OtherCatClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
oldXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
m1__ self oldXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
oldXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__-toAvoid' stamp: 'HAW 8/30/2020 19:17:55'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
newXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
newXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
newXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' overrides: 50850091!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' overrides: 50850075!
newXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55'!
newXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' prior: 50850023!
m1__ self newXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' prior: 50850031!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' prior: 50849969 overrides: 50849943!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' prior: 50849978 overrides: 50849951!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' prior: 50849996 overrides: 50850126!
m1__ self newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' prior: 50849943!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' prior: 50849951!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' prior: 50850006 overrides: 50850131!
m1__ self newXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' prior: 50850057!
m1__ self newXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:55' prior: 50850049!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:55'!
oldXyz__!

!methodRemoval: AnotheclassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:55'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:56'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:56'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:56'!
oldXyz__!

!methodRemoval: OtherCatClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:56'!
oldXyz__!

!methodRemoval: AnotheclassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:56'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:56'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:56'!
oldXyz__!

!methodRemoval: OtherCatClassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:56'!
oldXyz__!

!testRun: #RenameSelectorTest #test18ScopeToRenameCanBeCategoriesAndHierarchyOnly stamp: 'HAW 8/30/2020 19:17:56'!
PASSED!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'HAW 8/30/2020 19:17:56'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!

!classRemoval: #AnotheclassToRenameSelector stamp: 'HAW 8/30/2020 19:17:56'!
RefactoringClassTestData subclass: #AnotheclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SubclassToRenameSelector stamp: 'HAW 8/30/2020 19:17:57'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:57'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassToRenameSelector stamp: 'HAW 8/30/2020 19:17:57'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!

!classRemoval: #OtherCatClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:57'!
RefactoringClassTestData subclass: #OtherCatClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:58'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
m1__ self oldXyz__! !

!classDefinition: #AnotherclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:17:58'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58' prior: 50850261!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58' prior: 50850269!
m1__ self newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58' prior: 50850286!
m1__ self newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:17:58' prior: 50850294!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:58'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:58'!
oldXyz__!

!methodRemoval: AnotherclassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:17:58'!
oldXyz__!

!methodRemoval: AnotherclassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:17:58'!
oldXyz__!

!testRun: #RenameSelectorTest #test19ScopeToRenameCanBeTheCompleteSystem stamp: 'HAW 8/30/2020 19:17:58'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:17:58'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnotherclassToRenameSelector stamp: 'HAW 8/30/2020 19:17:59'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameSelectorTest #test20CanNotRenameToItSelf stamp: 'HAW 8/30/2020 19:17:59'!
PASSED!

!testRun: #RenameSelectorTest #test21NewSelectorCanNotBeImplementedOnAnyClassImplementingOldSelector stamp: 'HAW 8/30/2020 19:17:59'!
PASSED!

!testRun: #RenameSelectorTest #test22WarnsWhenOverridesSuperclassImplementation stamp: 'HAW 8/30/2020 19:17:59'!
PASSED!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:00'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00' prior: 50850385!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00'!
m1 ^#(#oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00' prior: 50850397!
m1 ^#(#newXyz__)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:18:00'!
oldXyz__!

!testRun: #RenameSelectorTest #test23OldSelectorIsRenamedWhenDefinedInLiteralArray stamp: 'HAW 8/30/2020 19:18:00'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:00'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:00'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00' prior: 50850432!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00'!
m1 ^#(#oldXyz__ #oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:00' prior: 50850444!
m1 ^#(#newXyz__ #newXyz__)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:18:00'!
oldXyz__!

!testRun: #RenameSelectorTest #test24OldSelectorIsRenamedWhenDefinedInLiteralArrayMoreThanOnce stamp: 'HAW 8/30/2020 19:18:00'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:01'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:01'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:01'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:01'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:01' prior: 50850480!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:01'!
m1 ^#(#oldXyz__ #oldXyz__), #(#oldXyz__ #oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:01'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:01' prior: 50850492!
m1 ^#(#newXyz__ #newXyz__), #(#newXyz__ #newXyz__)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:18:01'!
oldXyz__!

!testRun: #RenameSelectorTest #test25OldSelectorIsRenamedWhenDefinedInMoreThanOneLiteralArrayMoreThanOnce stamp: 'HAW 8/30/2020 19:18:01'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:02'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:02'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02' prior: 50850530!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02'!
m1 ^#(#oldXyz__ #oldXyz__1)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02' prior: 50850542!
m1 ^#(#newXyz__ #oldXyz__1)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:18:02'!
oldXyz__!

!testRun: #RenameSelectorTest #test26DoesNotRenameLiteralsThatBeginsWithOldSelectorInsideLiteralArray stamp: 'HAW 8/30/2020 19:18:02'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:02'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:02'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02' prior: 50850578!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02'!
m1 ^#(#oldXyz__ #oldXyz__:)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:02' prior: 50850590!
m1 ^#(#newXyz__ #oldXyz__:)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:18:02'!
oldXyz__!

!testRun: #RenameSelectorTest #test27DoesNotRenameLiteralsThatBeginsWithOldSelectorAndEndWithColonInsideLiteralArray stamp: 'HAW 8/30/2020 19:18:02'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:03'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:03'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:03'!
&& aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:03'!
m1 ^self && 1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:03'!
abc: aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:03' prior: 50850631!
m1 ^self abc: 1! !

!methodRemoval: ClassToRenameSelector #&& stamp: 'HAW 8/30/2020 19:18:03'!
&& aParameter!

!testRun: #RenameSelectorTest #test28CanRenameFromBinaryToKeywordOfOneParameter stamp: 'HAW 8/30/2020 19:18:03'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:04'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:04'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:04'!
abc: aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:04'!
m1 ^self abc: 1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:04'!
&& aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:04' prior: 50850670!
m1 ^self && 1! !

!methodRemoval: ClassToRenameSelector #abc: stamp: 'HAW 8/30/2020 19:18:04'!
abc: aParameter!

!testRun: #RenameSelectorTest #test29CanRenameFromKeywordOfOneParameterToBinary stamp: 'HAW 8/30/2020 19:18:04'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:04'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:04'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:04'!
&& aParameter! !

!testRun: #RenameSelectorTest #test30CanNotRenameFromBinaryToKeywordOfMoreThanOneParameter stamp: 'HAW 8/30/2020 19:18:04'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:05'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:05'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:05'!
abc: p1 def: p2! !

!testRun: #RenameSelectorTest #test31CanNotRenameFromKeywordOfOneParameterToBinary stamp: 'HAW 8/30/2020 19:18:05'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:06'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:06'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:06'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850754!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850758!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850762!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850766!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:06'!
SuperclassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850754!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850758!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850762!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850766!
m1__ self oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850825!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850829!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850825!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' overrides: 50850829!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' prior: 50850758!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' prior: 50850766!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' prior: 50850784 overrides: 50850850!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' prior: 50850793 overrides: 50850855!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' prior: 50850811 overrides: 50850850!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:06' prior: 50850821 overrides: 50850855!
m1__ self newXyz__! !

!methodRemoval: SuperclassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:18:06'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:18:06'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:18:06'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:18:06'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:18:06'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:18:06'!
oldXyz__!

!testRun: #RenameSelectorTest #test32HierarchyScopeRenamesSelectorsFromSuperclassDefiningSelector stamp: 'HAW 8/30/2020 19:18:06'!
PASSED!

!classRemoval: #SubclassToRenameSelector stamp: 'HAW 8/30/2020 19:18:06'!
SuperclassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:07'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassToRenameSelector stamp: 'HAW 8/30/2020 19:18:07'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:07'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:07'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
oldXyz__! !
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
m1__ self oldXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
oldXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
m1__ self oldXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07' overrides: 16782761!
compilerClass ^nil! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07'!
newXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07' prior: 50850971!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07' prior: 50850938!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:07' prior: 50850946!
m1__ self newXyz__! !

!methodRemoval: ClassToAvoidRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:18:07'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 8/30/2020 19:18:07'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 8/30/2020 19:18:07'!
oldXyz__!

!testRun: #RenameSelectorTest #test33DoNotRenameSendersAndImplementorsWhoseCompilerClassIsDifferentToCompiler stamp: 'HAW 8/30/2020 19:18:07'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:18:08'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'HAW 8/30/2020 19:18:08'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test01VariableToRenameHasToBeDefined stamp: 'HAW 8/30/2020 19:18:08'!
PASSED!

!testRun: #RenameTemporaryTest #test02NewVariableNameCanNotBeEmpty stamp: 'HAW 8/30/2020 19:18:08'!
PASSED!

!testRun: #RenameTemporaryTest #test03NewVariableHasToBeValid stamp: 'HAW 8/30/2020 19:18:09'!
PASSED!

!testRun: #RenameTemporaryTest #test04NewVariableNameCanNotBeDefinedInMethod stamp: 'HAW 8/30/2020 19:18:09'!
PASSED!

!classDefinition: #ClassToRenameTemp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:10'!
RefactoringClassTestData subclass: #ClassToRenameTemp
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test05FailsIfNewTemporaryIsEqualToInstanceVariableInClass stamp: 'HAW 8/30/2020 19:18:10'!
PASSED!

!classRemoval: #ClassToRenameTemp stamp: 'HAW 8/30/2020 19:18:10'!
RefactoringClassTestData subclass: #ClassToRenameTemp
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRefactorSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:10'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameTemp category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:10'!
ClassToRefactorSuperclass subclass: #ClassToRenameTemp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test06FailsIfNewTemporaryIsEqualToInstanceVariableInAnySuperclass stamp: 'HAW 8/30/2020 19:18:10'!
PASSED!

!classRemoval: #ClassToRenameTemp stamp: 'HAW 8/30/2020 19:18:11'!
ClassToRefactorSuperclass subclass: #ClassToRenameTemp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRefactorSuperclass stamp: 'HAW 8/30/2020 19:18:11'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test07RenameCreatesNewTemporaryVariableAndDeletesOldOne stamp: 'HAW 8/30/2020 19:18:11'!
PASSED!

!testRun: #RenameTemporaryTest #test08RenameChangesReferencesFromOldVariableToNewVariable stamp: 'HAW 8/30/2020 19:18:12'!
PASSED!

!testRun: #RenameTemporaryTest #test09RenamesArguments stamp: 'HAW 8/30/2020 19:18:12'!
PASSED!

!testRun: #RenameTemporaryTest #test10NewVariableNameCanNotBeDefinedAsBlockArgument stamp: 'HAW 8/30/2020 19:18:12'!
PASSED!

!testRun: #RenameTemporaryTest #test11RenamesBlockArguments stamp: 'HAW 8/30/2020 19:18:13'!
PASSED!

!testRun: #RenameTemporaryTest #test12RenamesBlockTemporaries stamp: 'HAW 8/30/2020 19:18:13'!
PASSED!

!testRun: #RenameTemporaryTest #test13OldNodeMustBePartOfMethodNode stamp: 'HAW 8/30/2020 19:18:14'!
PASSED!

!testRun: #RenameTemporaryTest #test14OldVariableNodeMustBeArgOrTempNode stamp: 'HAW 8/30/2020 19:18:14'!
PASSED!

!testRun: #RenameTemporaryTest #test15RenameVariablesWithSameNameInDifferentBlocksCorrectly stamp: 'HAW 8/30/2020 19:18:15'!
PASSED!

!testRun: #RenameTemporaryTest #test16CantRenameVariableToANameAlreadyUsedInAnUpperBlock stamp: 'HAW 8/30/2020 19:18:15'!
PASSED!

!testRun: #RenameTemporaryTest #test17RenamesOneCharVariableAfterAReturnWithoutCharsAfterThatCorrectly stamp: 'HAW 8/30/2020 19:18:15'!
PASSED!

!testRun: #RenameTemporaryTest #test18CantRenameVariableToAReservedName stamp: 'HAW 8/30/2020 19:18:16'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:16'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 8/30/2020 19:18:17'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test02ClassesWithNoReferencesAndNoSubclassesAreSafetelyRemoved stamp: 'HAW 8/30/2020 19:18:17'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:17'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 8/30/2020 19:18:17'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test03RemovingTheMetaclassRemovesTheClass stamp: 'HAW 8/30/2020 19:18:17'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:18'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:18'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:18'!
m1 ^ClassToRemove! !

!testRun: #SafelyRemoveClassTest #test04CanNotRemoveClassWithReferencesOutsideHierarchy stamp: 'HAW 8/30/2020 19:18:18'!
PASSED!

!classRemoval: #ClassToRemove stamp: 'HAW 8/30/2020 19:18:19'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassToRemove stamp: 'HAW 8/30/2020 19:18:19'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:19'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:19'!
m1 ^ClassToRemove! !

!classRemoval: #ClassToRemove stamp: 'HAW 8/30/2020 19:18:19'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test05CanRemoveClassWithReferencesFromItself stamp: 'HAW 8/30/2020 19:18:19'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:20'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:20'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test06WarnIfClassToRemoveHasSubclasses stamp: 'HAW 8/30/2020 19:18:20'!
PASSED!

!classRemoval: #ClassToRemoveSubclass stamp: 'HAW 8/30/2020 19:18:20'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 8/30/2020 19:18:21'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:21'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:21'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemoveSubclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:21'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemoveSubclass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:21'!
m1 ^ClassToRemoveSubclass! !

!testRun: #SafelyRemoveClassTest #test07CanNotRemoveClassWhenSubclassesHaveReferencesOutsideTheHierarchy stamp: 'HAW 8/30/2020 19:18:21'!
PASSED!

!classRemoval: #ClassToRemoveSubclass stamp: 'HAW 8/30/2020 19:18:21'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 8/30/2020 19:18:22'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassToRemoveSubclass stamp: 'HAW 8/30/2020 19:18:22'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:22'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:22'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemoveSubclass stamp: 'HAW 8/30/2020 19:18:22'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 8/30/2020 19:18:23'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test08HierarchyIsRemovedIfSubclassesWarningIsResumed stamp: 'HAW 8/30/2020 19:18:23'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:23'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:23'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:23'!
m1 ^ClassToRemoveSubclass! !
!ClassToRemoveSubclass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:23'!
m2 ^ClassToRemove! !

!classRemoval: #ClassToRemoveSubclass stamp: 'HAW 8/30/2020 19:18:24'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 8/30/2020 19:18:24'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test09CanRemoveIfReferencesToSubclassesAreInTheHierarchy stamp: 'HAW 8/30/2020 19:18:24'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:24'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:24'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:24'!
m1 ^#ClassToRemove! !

!testRun: #SafelyRemoveClassTest #test10WarnWhenHasReferencesToName stamp: 'HAW 8/30/2020 19:18:24'!
PASSED!

!classRemoval: #ClassToRemove stamp: 'HAW 8/30/2020 19:18:25'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassToRemove stamp: 'HAW 8/30/2020 19:18:25'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:25'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:25'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:25' prior: 50851475!
m1 ! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:25'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test01ApplyChangesTemporaryVariableToInstanceVariable stamp: 'HAW 8/30/2020 19:18:25'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:26'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:26'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:26'!
m1| a |a := 2.
	^a! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:26' prior: 50851512!
m1 a := 2.
	^a! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:26'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test02ApplyDoesntChangeRestOfSourceCode stamp: 'HAW 8/30/2020 19:18:26'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:27'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:27'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:27'!
m1! !

!testRun: #TemporaryToInstanceVariableTest #test03TemporaryToChangeShouldExist stamp: 'HAW 8/30/2020 19:18:27'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:27'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:27'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:27'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:27'!
m2| a |! !

!testRun: #TemporaryToInstanceVariableTest #test04TemporaryShouldNotExistInOtherClassMethod stamp: 'HAW 8/30/2020 19:18:27'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:28'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:28'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:28'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:28'!
m1| a |! !

!testRun: #TemporaryToInstanceVariableTest #test05InstanceVariableShouldNotExistInSubclass stamp: 'HAW 8/30/2020 19:18:28'!
PASSED!

!classRemoval: #SubclassToRefactor stamp: 'HAW 8/30/2020 19:18:28'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:29'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:29'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:29'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:29'!
m1| a |! !
!SubclassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:29'!
m2| a |! !

!testRun: #TemporaryToInstanceVariableTest #test06TemporaryShouldNotExistInSubclassMethod stamp: 'HAW 8/30/2020 19:18:29'!
PASSED!

!classRemoval: #SubclassToRefactor stamp: 'HAW 8/30/2020 19:18:29'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:30'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:30'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:30'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:30' prior: 50851685!
m1 ! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:30'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test07RemovesPipesWhenRemovingLastTemporaryInMethod stamp: 'HAW 8/30/2020 19:18:30'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:30'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:30'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:30'!
m1| a b |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:30' prior: 50851722!
m1|  b |! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:30'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test08DoesntRemoveOtherVariables stamp: 'HAW 8/30/2020 19:18:30'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:31'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:31'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:31'!
m1
	[ | a | ].
	[ | a | ].! !

!testRun: #TemporaryToInstanceVariableTest #test09TemporaryShouldNotExistInOtherBlockInSameMethod stamp: 'HAW 8/30/2020 19:18:31'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:32'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:32'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:32'!
m1
	[ | a | ].! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:32' prior: 50851784!
m1
	[   ].! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:32'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test10RemovesPipesWhenRemovingLastTemporaryInBlock stamp: 'HAW 8/30/2020 19:18:32'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:32'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:32'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:32'!
m1 [ | a | ]. [ :a | ].! !

!testRun: #TemporaryToInstanceVariableTest #test11TemporaryShouldNotExistAsArgumentInOtherBlocksInSameMethod stamp: 'HAW 8/30/2020 19:18:32'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:33'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:33'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:33'!
m1: a! !

!testRun: #TemporaryToInstanceVariableTest #test12CantExtractArgument stamp: 'HAW 8/30/2020 19:18:33'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 8/30/2020 19:18:34'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:34'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:34'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:34'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test01MethodObjectClassNameMustNotBeEmpty stamp: 'HAW 8/30/2020 19:18:34'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:34'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:35'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:35'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:35'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:35'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test02MethodObjectClassNameMustBeASymbol stamp: 'HAW 8/30/2020 19:18:35'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:35'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:36'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:36'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:36'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:36'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test03MethodObjectClassNameMustStartWithUppercaseLetter stamp: 'HAW 8/30/2020 19:18:36'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:36'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:36'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:36'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:36'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:36'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test04MethodObjectClassNameMustNotHaveSeparators stamp: 'HAW 8/30/2020 19:18:36'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:37'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:37'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:37'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:37'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:37'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test05MethodObjectClassNameMustNotExist stamp: 'HAW 8/30/2020 19:18:37'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:38'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:38'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:38'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:38'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:38'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test06AllVariablesToParametrizeMustHaveACorrespondingMethodObjectInstanceVariableName stamp: 'HAW 8/30/2020 19:18:38'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:39'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:39'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:39'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:39'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:39'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test07AllInstanceVariableNamesMustCorrespondToVariableToParametrize stamp: 'HAW 8/30/2020 19:18:39'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:40'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:40'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:40'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:40'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:40'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test08MethodObjectInstanceVariableNamesMustNotBeEmpty stamp: 'HAW 8/30/2020 19:18:40'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:41'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:41'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:41'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test09MethodObjectInstanceVariableNamesCanNotContainBlanks stamp: 'HAW 8/30/2020 19:18:41'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:42'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:42'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:42'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test10MethodObjectInstanceVariableNamesCanNotContainInvalidCharacters stamp: 'HAW 8/30/2020 19:18:42'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:43'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:43'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: 'anInstVarName'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:43'!
m1
		self isNil.! !

!testRun: #ExtractToMethodObjectTest #test11MethodObjectInstanceVariableNamesCanNotBeDefinedInSuperclasses stamp: 'HAW 8/30/2020 19:18:43'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:44'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: 'anInstVarName'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:44'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:44'!
m1
		self isNil.
		anInstVar isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:44'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test12MethodObjectInstanceVariableNamesCanNotBeDuplicated stamp: 'HAW 8/30/2020 19:18:44'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:45'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:18:45'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:45'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:45'!
m1
		| aTemporal |

		aTemporal := 1.
		self isNil.

		^aTemporal + 2! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:45'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test13MethodObjectInstanceVariableNamesCanNotBeNamedAsMethodTemporal stamp: 'HAW 8/30/2020 19:18:45'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:46'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:18:46'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:46'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:46'!
m1
		^[
			| aBlockTemporal |

			self isNil.
			aBlockTemporal.]! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:46'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test14MethodObjectInstanceVariableNamesCanNotBeNamedAsBlockTemporal stamp: 'HAW 8/30/2020 19:18:46'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:46'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:18:47'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:47'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:47'!
m1
		^[:aBlockArgument |
			self isNil.
			aBlockArgument.]! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:47'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test15MethodObjectInstanceVariableNamesCanNotBeNamedAsBlockArgument stamp: 'HAW 8/30/2020 19:18:47'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:47'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:18:48'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:48'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:48'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test16MethodObjectInstanceCreationMessageMustHaveAKeywordForEveryVariableToParametrize stamp: 'HAW 8/30/2020 19:18:48'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:48'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:48'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:49'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test17MethodObjectInstanceCreationMessageMustHaveOnlyOneKeywordForEveryVariableToParametrize stamp: 'HAW 8/30/2020 19:18:49'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:49'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:49'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:49'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test18MethodObjectInstanceCreationMessageMustNotHaveKeywordForAnUnknownVariableToParametrize stamp: 'HAW 8/30/2020 19:18:49'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:50'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:50'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:50'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:50'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:50'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test19MethodObjectInstanceCreationMessageKeywordsCanNotHaveInvalidCharacters stamp: 'HAW 8/30/2020 19:18:50'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:51'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:51'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:51'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:51'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:51'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test20MethodObjectInstanceCreationMessageSelectorStartsWithAnInvalidStartOfSelector stamp: 'HAW 8/30/2020 19:18:51'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:52'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:52'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:52'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:52'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:52'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test21MethodObjectInstanceCreationMessageKeywordsCannotBeEmpty stamp: 'HAW 8/30/2020 19:18:52'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:53'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:53'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:53'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:53'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:53'!
m1! !

!testRun: #ExtractToMethodObjectTest #test22MethodObjectSuperclassCannotBeMeta stamp: 'HAW 8/30/2020 19:18:53'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:54'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:54'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:54'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:54'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:54'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:54'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:54'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:54' prior: 50852738!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test23CreatesMethodObjectClass stamp: 'HAW 8/30/2020 19:18:54'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:18:55'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:55'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:55'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:55'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:55'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:55'!
m1! !

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:55'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:55'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:55' prior: 50852808!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test24CreatesMethodObjectClassAsSubclassOfTheChosenSuperclass stamp: 'HAW 8/30/2020 19:18:55'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:18:56'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:56'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:56'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:57'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:57'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:57'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:57'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:57'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:57' prior: 50852861!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test25CreatesMethodObjectClassInTheChosenCategory stamp: 'HAW 8/30/2020 19:18:57'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:18:57'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:57'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:58'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:58'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:58'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:58'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:58'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:58'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:58'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:58'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:58' prior: 50852923!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test26MethodObjectClassInstanceCreationMessageReceivesTheSameNumberOfArgumentsAsVariablesToParametrizeInMethodToExtract stamp: 'HAW 8/30/2020 19:18:58'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:18:58'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:18:59'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:18:59'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:59'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:59'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:59'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:18:59'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:59'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:59'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:59'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:18:59' prior: 50852999!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test27MethodObjectClassInstanceCreationMessageSelectorConsistsOfTheChosenKeywords stamp: 'HAW 8/30/2020 19:18:59'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:00'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:00'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:00'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:00'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:00'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:00'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:00'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:00'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:00'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:00'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:00' prior: 50853074!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test28MethodObjectClassInstanceCreationMessageCreatesARefactoringInstance stamp: 'HAW 8/30/2020 19:19:00'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:01'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:01'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:02'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:02'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:02'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:02'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:02'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:02'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:02'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:02'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:02' prior: 50853149!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test29MethodObjectInitializationMessageReceivesTheSameNumberOfArgumentsAsVariablesToParametrizeInMethodToExtract stamp: 'HAW 8/30/2020 19:19:02'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:02'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:02'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:03'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:03'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:03'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:03'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:03'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:03'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:03'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:03'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:03' prior: 50853225!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test30MethodObjectInitializationMessageSelectorConsistsOfTheChosenKeywordsPrefixedWithInitializationPrefix stamp: 'HAW 8/30/2020 19:19:03'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:04'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:04'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:04'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:04'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:04'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:04'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:04'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:04'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:04'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:04'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:04' prior: 50853301!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test31MethodObjectInitializationMessageAssignsTheInstanceVariables stamp: 'HAW 8/30/2020 19:19:04'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:05'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:05'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:05'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:05'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:05'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:05'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:05'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:05'!
aCustomEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:05' prior: 50853376!
m1
	(MethodObject new) aCustomEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test32MethodObjectEvaluationMessageHasTheChosenSelector stamp: 'HAW 8/30/2020 19:19:05'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:06'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:06'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:07'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:07'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:07'!
m1
	self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:07'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:07'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:07'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:07'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:07'!
defaultEvaluationSelector
	thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:07' prior: 50853438!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test33MethodObjectEvaluationMethodSourceCodeHasTheSameFormatAsTheExtractedMethod stamp: 'HAW 8/30/2020 19:19:07'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:07'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:07'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:08'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:08'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:08'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:08'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:08'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:08'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:08'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:08'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:08' prior: 50853513!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test34MethodObjectEvaluationMethodSourceCodeReferencesCorrespondingInstanceVariableInsteadOfSelf stamp: 'HAW 8/30/2020 19:19:08'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:08'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:09'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:09'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:09'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:09'!
m1
		anInstVar isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:09'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:09'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:09'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:09'!
initializeWith: aParamName
	aCorrespondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:09'!
defaultEvaluationSelector
		aCorrespondingInstVar isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:09' prior: 50853589!
m1
	(MethodObject with: anInstVar) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test35MethodObjectEvaluationMethodSourceCodeReferencesCorrespondingInstanceVariableInsteadOfClassToRefactorInstanceVariable stamp: 'HAW 8/30/2020 19:19:09'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:10'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:10'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:10'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:10'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:10'!
m1: anArg
		anArg isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:10'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:10'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'anArgReplacement'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:10'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:10'!
initializeWith: aParamName
	anArgReplacement := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:10'!
defaultEvaluationSelector
		anArgReplacement isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:10' prior: 50853667!
m1: anArg
	(MethodObject with: anArg) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test36MethodObjectEvaluationMethodSourceCodeReferencesCorrespondingInstanceVariableInsteadOfExtractedMethodArgument stamp: 'HAW 8/30/2020 19:19:10'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:11'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'anArgReplacement'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:11'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:11'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #APool category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:11'!
SharedPool subclass: #APool
	instanceVariableNames: ''
	classVariableNames: 'APoolVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:11'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'APool'
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:11'!
m1
		APoolVar isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:11'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:11'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:11'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:11'!
initializeWith: aParamName
	aCorrespondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:11'!
defaultEvaluationSelector
		aCorrespondingInstVar isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:11' prior: 50853752!
m1
	(MethodObject with: APoolVar) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test37MethodObjectEvaluationMethodSourceCodeReferencesCorrespondingInstanceVariableInsteadOfClassToRefactorPoolVariable stamp: 'HAW 8/30/2020 19:19:11'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:12'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'APool'
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:12'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:13'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #APool stamp: 'HAW 8/30/2020 19:19:13'!
SharedPool subclass: #APool
	instanceVariableNames: ''
	classVariableNames: 'APoolVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:13'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:13'!
m1
		"A comment talking about self"
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:13'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:13'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:13'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:13'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:13'!
defaultEvaluationSelector
		"A comment talking about self"
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:13' prior: 50853836!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test38MethodObjectEvaluationMethodSourceCodeCommentsReferencingParametrizedVariableAreNotReplaced stamp: 'HAW 8/30/2020 19:19:13'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:14'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:14'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:14'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:14'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test39MethodObjectEvaluationMethodSourceCodePreservesBlockArgumentsShadowing stamp: 'HAW 8/30/2020 19:19:14'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:15'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:15'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test40MethodObjectEvaluationMethodSourceCodePreservesBlockTemporalsShadowing stamp: 'HAW 8/30/2020 19:19:15'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:15'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:16'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:16'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:16'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:16'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:16'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:16' prior: 50853954!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test41RefactoredMethodUnarySelectorIsPreserved stamp: 'HAW 8/30/2020 19:19:16'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:16'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:16'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:17'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:17'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:17'!
!!@ anArg ^anArg.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:17'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:17'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:17'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:17'!
initializeWith: aParamName
	correspondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:17'!
defaultEvaluationSelector ^correspondingInstVar.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:17' prior: 50854016!
!!@ anArg
	^(MethodObject with: anArg) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test42RefactoredMethodBinarySelectorIsPreserved stamp: 'HAW 8/30/2020 19:19:17'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:17'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:18'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:18'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:18'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:18'!
m1: anArg ^anArg.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:18'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:18'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:18'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:18'!
initializeWith: aParamName
	correspondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:18'!
defaultEvaluationSelector ^correspondingInstVar.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:18' prior: 50854092!
m1: anArg
	^(MethodObject with: anArg) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test43RefactoredMethodKeywordSelectorIsPreserved stamp: 'HAW 8/30/2020 19:19:18'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:19'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:19'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:19'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:19'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:19'!
!!@ anArg ^anArg.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:19'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:19'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:19'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:19'!
initializeWith: aParamName
	correspondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:19'!
defaultEvaluationSelector ^correspondingInstVar.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:19' prior: 50854168!
!!@ anArg
	^(MethodObject with: anArg) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test44WhenBinaryMethodIsRefactoredArgumentNameIsPreserved stamp: 'HAW 8/30/2020 19:19:19'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:20'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:20'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:21'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:21'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:21'!
m1: anArg ^anArg.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:21'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:21'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:21'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:21'!
initializeWith: aParamName
	correspondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:21'!
defaultEvaluationSelector ^correspondingInstVar.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:21' prior: 50854244!
m1: anArg
	^(MethodObject with: anArg) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test45WhenKeywordsMethodIsRefactoredArgumentNamesArePreserved stamp: 'HAW 8/30/2020 19:19:21'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:21'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:22'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:22'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:22'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:22'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:22'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:22'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:22'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:22' prior: 50854320!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test46WhenThereAreNoVariablesToParametrizeTheRefactoredMethodUsesTheNewMessageToCreateTheMethodObjectInstance stamp: 'HAW 8/30/2020 19:19:22'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:22'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:23'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:23'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:23'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:23'!
m1 ^self isNil! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:23'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:23'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:23'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:23'!
initializeWith: aParamName
	correspondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:23'!
defaultEvaluationSelector ^correspondingInstVar isNil! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:23' prior: 50854383!
m1
	^(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test47WhenThereAreVariablesToParametrizeTheRefactoredMethodUsesTheChosenMessageToCreateTheMethodObjectInstance stamp: 'HAW 8/30/2020 19:19:23'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:24'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:24'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:24'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:24'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:24'!
m1: anArg ^(self isNil) or: (anArg isNil)! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:24'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:24'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'anArgCorrespondingInstVar selfCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:24'!
with: anArgParamName andWith: aSelfParamName
	^self new initializeWith: anArgParamName andWith: aSelfParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:24'!
initializeWith: anArgParamName andWith: aSelfParamName
	anArgCorrespondingInstVar := anArgParamName.
	selfCorrespondingInstVar := aSelfParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:24'!
defaultEvaluationSelector ^(selfCorrespondingInstVar isNil) or: (anArgCorrespondingInstVar isNil)! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:24' prior: 50854460!
m1: anArg
	^(MethodObject with: anArg andWith: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test48WhenThereAreMultipleVariablesToParametrizeTheRefactoredMethodPassesTheVariablesInTheChosenOrderToTheMessageToCreateTheMethodObjectInstance stamp: 'HAW 8/30/2020 19:19:24'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:25'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'anArgCorrespondingInstVar selfCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:25'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:25'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:26'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:26'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:26'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:26'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:26'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:26' prior: 50854547!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test49TheRefactoredMethodUsesTheChosenEvaluationSelectorToEvaluateTheMethodObjectInstance stamp: 'HAW 8/30/2020 19:19:26'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:26'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:26'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:27'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:27'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:27'!
m1
		| a |

		a := 1 + 1.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:27'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:27'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:27'!
defaultEvaluationSelector
		| a |

		a := 1 + 1.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:27' prior: 50854610!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test50TheRefactoredMethodPreservesTheImplicitReturn stamp: 'HAW 8/30/2020 19:19:27'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:27'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:28'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:28'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:28'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:28'!
m1 ^super isNil! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:28'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test51TheMethodToExtractMustNotReferenceSuper stamp: 'HAW 8/30/2020 19:19:28'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:29'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:29'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:29'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:29'!
m1
		anInstVar := 2.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:29'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test52TheMethodToExtractMustNotContainInstVarAssignments stamp: 'HAW 8/30/2020 19:19:29'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:30'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:30'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:30'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:30'!
m1
		AClassVar := 2.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:30'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test53TheMethodToExtractMustNotContainClassVarAssignments stamp: 'HAW 8/30/2020 19:19:30'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:30'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:31'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #APool category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:31'!
SharedPool subclass: #APool
	instanceVariableNames: ''
	classVariableNames: 'APoolVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:31'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'APool'
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:31'!
m1
		APoolVar := 2.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:31'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test54TheMethodToExtractMustNotContainPoolVarAssignments stamp: 'HAW 8/30/2020 19:19:31'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:31'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'APool'
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:32'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #APool stamp: 'HAW 8/30/2020 19:19:32'!
SharedPool subclass: #APool
	instanceVariableNames: ''
	classVariableNames: 'APoolVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:32'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:32'!
m1
		AClassVar isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:32'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:32'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:32'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:32'!
initializeWith: aParamName
	aCorrespondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:32'!
defaultEvaluationSelector
		aCorrespondingInstVar isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:32' prior: 50854843!
m1
	(MethodObject with: AClassVar) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test55MethodObjectEvaluationMethodSourceCodeReferencesCorrespondingInstanceVariableInsteadOfClassToRefactorClassVariable stamp: 'HAW 8/30/2020 19:19:32'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:33'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:33'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:33'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:33'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:33'!
m1 self = anInstVar ifTrue: [^1] ifFalse: [^2]! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:33'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test56MethodObjectInstanceCreationMessageParameterNamesMustNotRepeat stamp: 'HAW 8/30/2020 19:19:33'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:34'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:34'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:34'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:34'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:34'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test57MethodObjectInstanceCreationMessageParameterNamesMustNotBeEmpty stamp: 'HAW 8/30/2020 19:19:34'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:35'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:35'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:35'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:35'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:35'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test58MethodObjectInstanceCreationMessageParameterNamesMustNotContainSeparators stamp: 'HAW 8/30/2020 19:19:35'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:35'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:36'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:36'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:36'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:36'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test59MethodObjectInstanceCreationMessageParameterNamesMustNotContainInvalidCharacters stamp: 'HAW 8/30/2020 19:19:36'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:36'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:37'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:37'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:37'!
m1 self = anInstVar ifTrue: [^1] ifFalse: [^2]! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:37'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test60MethodObjectInstanceCreationMessageParameterNamesMustNotBeEqualToAMethodObjectInstanceVariable stamp: 'HAW 8/30/2020 19:19:37'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:37'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:38'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:38'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:38'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:38'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:38'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:38'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:38'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:38'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:38' prior: 50855121!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test61MethodObjectClassInstanceCreationMessageParameterNamesAreTheChosenOnes stamp: 'HAW 8/30/2020 19:19:38'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:38'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:39'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:39'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:39'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:39'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:39'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:39'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:39'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:39'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:39'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:39' prior: 50855196!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test62MethodObjectInstanceCreationMessageParameterNamesAreTheChosenOnes stamp: 'HAW 8/30/2020 19:19:39'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:40'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:40'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:40'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:40'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:40'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:40'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:40'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:40'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:40'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:40'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:40' prior: 50855271!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test63MethodObjectInstanceInitializationMessageIsCategorizedAsInitialization stamp: 'HAW 8/30/2020 19:19:40'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:41'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:41'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:41'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:41'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:41'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:41'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:41'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:41'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:41' prior: 50855346!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test64MethodObjectInstanceCreationMessageIsCategorizedAsInstanceCreation stamp: 'HAW 8/30/2020 19:19:41'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:42'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:42'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:43'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:43'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:43'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:43'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:43'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:43'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:43' prior: 50855421!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test65MethodObjectEvaluationMessageIsCategorizedAsEvaluating stamp: 'HAW 8/30/2020 19:19:43'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 8/30/2020 19:19:43'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:43'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:44'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:44'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test66MethodObjectEvaluationSelectorMustNotBeEmpty stamp: 'HAW 8/30/2020 19:19:44'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:44'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:45'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:45'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:45'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:45'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test67MethodObjectEvaluationSelectorMustNotContainInvalidCharacters stamp: 'HAW 8/30/2020 19:19:45'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:45'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:46'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:46'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:46'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:46'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test68MethodObjectEvaluationSelectorMustNotStartWithAnInvalidStartOfSelector stamp: 'HAW 8/30/2020 19:19:46'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 8/30/2020 19:19:46'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:19:47'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:47'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IfNilChecksFinderTest #test01InstanceVariableMustBelongToTheClass stamp: 'HAW 8/30/2020 19:19:47'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:47'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:47'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IfNilChecksFinderTest #test02WhenThereAreNoIfNilChecksTheResultIsEmpty stamp: 'HAW 8/30/2020 19:19:47'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:48'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:48'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:48'!
m1 randomInstVar ifNil: [ 1 + 1 ]! !

!testRun: #IfNilChecksFinderTest #test03ResultIncludesIfNilMessageSending stamp: 'HAW 8/30/2020 19:19:48'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:48'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:48'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:48'!
m1 randomInstVar ifNotNil: [ 1 + 1 ]! !

!testRun: #IfNilChecksFinderTest #test04ResultIncludesIfNotNilMessageSending stamp: 'HAW 8/30/2020 19:19:48'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:49'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:49'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:49'!
m1 randomInstVar ifNil: [ 2 + 2 ] ifNotNil: [ 1 + 1 ]! !

!testRun: #IfNilChecksFinderTest #test05ResultIncludesIfNilIfNotNilMessageSending stamp: 'HAW 8/30/2020 19:19:49'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:50'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:50'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:50'!
m1 randomInstVar ifNotNil: [ 2 + 2 ] ifNil: [ 1 + 1 ]! !

!testRun: #IfNilChecksFinderTest #test06ResultIncludesIfNotNilIfNilMessageSending stamp: 'HAW 8/30/2020 19:19:50'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:50'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:50'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:50'!
m1 randomInstVar isNil ifTrue: [ 2 + 2 ]! !

!testRun: #IfNilChecksFinderTest #test07ResultIncludesIsNilIfTrueMessageSending stamp: 'HAW 8/30/2020 19:19:50'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:51'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:51'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:51'!
m1 randomInstVar isNil ifFalse: [ 2 + 2 ]! !

!testRun: #IfNilChecksFinderTest #test08ResultIncludesIsNilIfFalseMessageSending stamp: 'HAW 8/30/2020 19:19:51'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:52'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:52'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:52'!
m1 randomInstVar isNil ifTrue: [1 + 1] ifFalse: [ 2 + 2 ]! !

!testRun: #IfNilChecksFinderTest #test09ResultIncludesIsNilIfTrueIfFalseMessageSending stamp: 'HAW 8/30/2020 19:19:52'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:52'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:52'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:52'!
m1 randomInstVar isNil ifFalse: [1 + 1] ifTrue: [ 2 + 2 ]! !

!testRun: #IfNilChecksFinderTest #test10ResultIncludesIsNilIfFalseIfTrueMessageSending stamp: 'HAW 8/30/2020 19:19:52'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:53'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:53'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:53'!
m1 randomInstVar ifNil: [1 + 1].randomInstVar ifNotNil: [1 + 1].! !

!testRun: #IfNilChecksFinderTest #test11WhenThereAreMultipleIfNilChecksInTheSameMethodTheResultIncludesAllOfThem stamp: 'HAW 8/30/2020 19:19:53'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:54'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:54'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:54'!
m1 randomInstVar ifNil: [1 + 1]! !
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:54'!
m2 randomInstVar ifNil: [2 + 2]! !

!testRun: #IfNilChecksFinderTest #test12WhenThereAreIfNilChecksInMultipleMethodsTheResultIncludesAllOfThem stamp: 'HAW 8/30/2020 19:19:54'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:54'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:54'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:54'!
m1 randomInstVar ifNil: [1 + 1].randomInstVar ifNil: [1 + 1].! !

!testRun: #IfNilChecksFinderTest #test13WhenThereAreMultipleIfNilChecksInTheSameMethodWithTheSameCodeTheResultIncludesAllOfThem stamp: 'HAW 8/30/2020 19:19:54'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 8/30/2020 19:19:55'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:55'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:55'!
m1 anInstVar ifNil: [ super isNil ]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:55'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:55'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test01BlocksToExtractMustNotContainReferencesToSuper stamp: 'HAW 8/30/2020 19:19:55'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 8/30/2020 19:19:56'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 8/30/2020 19:19:56'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:19:56'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:56'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:56'!
m1 anInstVar ifNil: [ anInstVar := 1 ]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:56'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:56'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test02BlocksToExtractMustNotContainAssignmentsToVariablesThatAreNotTemporals stamp: 'HAW 8/30/2020 19:19:56'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 8/30/2020 19:19:57'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 8/30/2020 19:19:57'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:19:57'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:57'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:57'!
m1 anInstVar ifNil: [
			1 = 2 ifFalse: [ |aTemp| aTemp := 3]]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:57'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:57'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test03BlocksToExtractCanAssignToTemporalsOfNestedBlocks stamp: 'HAW 8/30/2020 19:19:57'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 8/30/2020 19:19:58'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 8/30/2020 19:19:58'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:19:59'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:59'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:19:59'!
m1 anInstVar ifNil: [ |aTemp| aTemp := 2]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:59'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:19:59'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test04BlocksToExtractCanAssignToTemporalsOfBlocks stamp: 'HAW 8/30/2020 19:19:59'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 8/30/2020 19:19:59'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 8/30/2020 19:20:00'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:00'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:00'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:00'!
m1 anInstVar ifNil: [^anInstVar is Nil]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:00'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:00'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test07BlocksToExtractMustNotContainReturnStatements stamp: 'HAW 8/30/2020 19:20:00'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 8/30/2020 19:20:01'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 8/30/2020 19:20:01'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:01'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactorSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:01'!
RefactoringClassTestData subclass: #AClassToRefactorSuperclass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:01'!
AClassToRefactorSuperclass subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:01'!
m1 anInstVar ifNil: [anInstVar isNil ]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:01'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:01'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test08InstanceVariableMustBelongToTheClassToRefactor stamp: 'HAW 8/30/2020 19:20:01'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 8/30/2020 19:20:02'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 8/30/2020 19:20:02'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:02'!
AClassToRefactorSuperclass subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactorSuperclass stamp: 'HAW 8/30/2020 19:20:03'!
RefactoringClassTestData subclass: #AClassToRefactorSuperclass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:03'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:03'!
m1 anInstVar ifNil: [anInstVar isNil ]! !

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:03'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test09ConcreteClassMustBeDifferentToNullClass stamp: 'HAW 8/30/2020 19:20:03'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:03'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:20:03'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:03'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClasOutsideTheHierarchy category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:04'!
RefactoringClassTestData subclass: #AClasOutsideTheHierarchy
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClasOutsideTheHierarchy methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:04'!
m1 anInstVar ifNil: [anInstVar isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:04'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:04'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test10MethodsMustBelongToTheHierarchyToRefactor stamp: 'HAW 8/30/2020 19:20:04'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:04'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:04'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:05'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClasOutsideTheHierarchy stamp: 'HAW 8/30/2020 19:20:05'!
RefactoringClassTestData subclass: #AClasOutsideTheHierarchy
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:05'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:05'!
m1 anInstVar ifNil: [anInstVar isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:05'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:05'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test13MessageNodesMustNotBeDuplicated stamp: 'HAW 8/30/2020 19:20:05'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:06'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:06'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:06'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:06'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:06'!
m1 self ifNil: [anInstVar isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:06'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:06'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test14MessageNodesReceiverMustBeTheInstVar stamp: 'HAW 8/30/2020 19:20:06'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:07'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:07'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:07'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:07'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:07'!
m1 anInstVar ifNil: [ 1 + 1 ]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:07'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:07'!
unaryPolymorphicSelector! !

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:07'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test15ConcreteClassMustNotContainAnyPolymorphicSelector stamp: 'HAW 8/30/2020 19:20:07'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 8/30/2020 19:20:08'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 8/30/2020 19:20:08'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:09'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:09'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:09'!
m1 anInstVar ifNil: [ 1 + 1 ]! !

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:09'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!NullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:09'!
unaryPolymorphicSelector! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:09'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test16NullClassMustNotContainAnyPolymorphicSelector stamp: 'HAW 8/30/2020 19:20:09'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 8/30/2020 19:20:09'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 8/30/2020 19:20:10'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:10'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:10'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:10'!
m1 anInstVar ifNil: [ 1 + 1 ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:10'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:10'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:10'!
replaceIfNilSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:10'!
replaceIfNilSelector
	1 + 1! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:10' prior: 50856619!
m1 anInstVar replaceIfNilSelector! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:10' prior: 50856649!
m1 anInstVar replaceIfNilSelector! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:10'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:10' prior: 50856654!
m1 anInstVar replaceIfNilSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:10'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:10'!
getReference! !

!testRun: #IntroduceNullObjectTest #test17WhenThereAreNoVariablesToParametrizeReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:10'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:10'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:11'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:11'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:11'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:11'!
m1 anInstVar ifNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:11'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:11'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:11'!
with: p1! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:11'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:11' prior: 50856711!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:11' prior: 50856739!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:11'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:11' prior: 50856743!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:11'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:11'!
getReference! !

!testRun: #IntroduceNullObjectTest #test18WhenThereAreVariablesToParametrizeReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:11'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:12'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:12'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:12'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:12'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:12'!
m1 anInstVar ifNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:12'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:12'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:12'!
with: p1! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:12'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:12' prior: 50856800!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:12' prior: 50856828!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:12'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:12' prior: 50856832!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:12'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:12'!
getReference! !

!testRun: #IntroduceNullObjectTest #test19WhenIfNilCheckHasOneKeywordReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:12'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:13'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:13'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:13'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:13'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:13'!
m1 anInstVar ifNil: [ self isNil ] ifNotNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:13'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:14'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:14'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:14'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:14' prior: 50856889!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:14' prior: 50856919!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:14'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:14' prior: 50856923!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:14'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:14'!
getReference! !

!testRun: #IntroduceNullObjectTest #test20WhenIfNilCheckHasTwoKeywordsReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:14'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:14'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:14'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:15'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:15'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:15'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:15'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:15'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:15'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:15'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:15' prior: 50856980!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:15' prior: 50857010!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:15'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:15' prior: 50857014!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:15'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:15'!
getReference! !

!testRun: #IntroduceNullObjectTest #test21WhenIfNilCheckHasIsNilReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:15'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:15'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:16'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:16'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:16'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:16'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:16'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:16'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:16'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:16'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:16' prior: 50857071!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:16' prior: 50857101!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:16'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:16' prior: 50857105!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:16'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:16'!
getReference! !

!testRun: #IntroduceNullObjectTest #test22PolymorphicMessageIsAddedToTheConcreteClass stamp: 'HAW 8/30/2020 19:20:16'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:17'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:17'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:17'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:17'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:17'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:17'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:17'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:17'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:17'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:17' prior: 50857161!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:17' prior: 50857191!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:17'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:17' prior: 50857195!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:17'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:17'!
getReference! !

!testRun: #IntroduceNullObjectTest #test23PolymorphicMessageIsAddedToTheConcreteClassWithChosenParameterNames stamp: 'HAW 8/30/2020 19:20:17'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:18'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:18'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:18'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:19'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:19'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:19'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:19'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:19' prior: 50857252!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:19' prior: 50857282!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:19'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:19' prior: 50857286!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:19'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:19'!
getReference! !

!testRun: #IntroduceNullObjectTest #test24PolymorphicMessageIsAddedToTheConcreteClassReplacingParametrizedVariables stamp: 'HAW 8/30/2020 19:20:19'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:19'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:19'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:20'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:20'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:20'!
m1 anInstVar ifNil: [ self isNil ] ifNotNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:20'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:20'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:20'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:20'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:20' prior: 50857343!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:20' prior: 50857373!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:20'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:20' prior: 50857377!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:20'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:20'!
getReference! !

!testRun: #IntroduceNullObjectTest #test25ReplacesIfNilIfNotNilWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:20'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:20'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:21'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:21'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:21'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:21'!
m1 anInstVar ifNotNil: [ self isNil ] ifNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:21'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:21'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:21'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:21'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:21' prior: 50857433!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:21' prior: 50857463!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:21'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:21' prior: 50857467!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:21'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:21'!
getReference! !

!testRun: #IntroduceNullObjectTest #test26ReplacesIfNotNilIfNilWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:21'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:22'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:22'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:22'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:22'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:22'!
m1 anInstVar ifNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:22'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:22'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:22'!
with: p1! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:22'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:22' prior: 50857523!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:22' prior: 50857551!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:22'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:22' prior: 50857555!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:22'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:22'!
getReference! !

!testRun: #IntroduceNullObjectTest #test27ReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:22'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:23'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:23'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:24'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:24'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:24'!
m1 anInstVar ifNotNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:24'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:24'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:24'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:24'!
with: p1! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:24' prior: 50857611!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:24' prior: 50857640!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:24'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:24' prior: 50857644!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:24'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:24'!
getReference! !

!testRun: #IntroduceNullObjectTest #test28ReplacesIfNotNilWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:24'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:24'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:25'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:25'!
m1 anInstVar isNil ifTrue: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:25'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:25'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:25'!
with: p1! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:25'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:25' prior: 50857700!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:25' prior: 50857728!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:25'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:25' prior: 50857732!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:25'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:25'!
getReference! !

!testRun: #IntroduceNullObjectTest #test29ReplacesIsNilIfTrueWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:25'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:26'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:26'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:26'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:26'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:26'!
m1 anInstVar isNil ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:26'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:26'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:26'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:26'!
with: p1! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:26' prior: 50857788!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:26' prior: 50857817!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:26'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:26' prior: 50857821!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:26'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:26'!
getReference! !

!testRun: #IntroduceNullObjectTest #test30ReplacesIsNilIfFalseWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:26'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:27'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:27'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:28'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:28'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:28'!
m1 anInstVar isNil ifTrue: [self isNil] ifFalse: [self isNil]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:28'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:28'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:28'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:28'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:28' prior: 50857877!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:28' prior: 50857907!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:28'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:28' prior: 50857911!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:28'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:28'!
getReference! !

!testRun: #IntroduceNullObjectTest #test31ReplacesIsNilIfTrueIfFalseWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:28'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:28'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:29'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:29'!
m1 anInstVar isNil ifFalse: [self isNil] ifTrue: [self isNil]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:29'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:29'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:29'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:29'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:29' prior: 50857967!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:29' prior: 50857997!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:29'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:29' prior: 50858001!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:29'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:29'!
getReference! !

!testRun: #IntroduceNullObjectTest #test32ReplacesIsNilIfFalseIfTrueWithPolymorphicMessageSend stamp: 'HAW 8/30/2020 19:20:29'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:30'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:30'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:30'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:30'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:30'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:30'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:30'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:30'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:30'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:30' prior: 50858057!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:30' prior: 50858087!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:30'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:30' prior: 50858091!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:30'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:30'!
getReference! !

!testRun: #IntroduceNullObjectTest #test33PolymorphicMessageIsAddedToTheNullClass stamp: 'HAW 8/30/2020 19:20:30'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:31'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:31'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:31'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:31'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:31'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:31'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:31'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:31'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:31'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:31' prior: 50858147!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:31' prior: 50858177!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:31'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:31' prior: 50858181!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:31'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:31'!
getReference! !

!testRun: #IntroduceNullObjectTest #test34PolymorphicMessageIsAddedToTheNullClassWithChosenParameterNames stamp: 'HAW 8/30/2020 19:20:31'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:32'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:32'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:33'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:33'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:33'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:33'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:33'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:33'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:33'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:33' prior: 50858238!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:33' prior: 50858268!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:33'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:33' prior: 50858272!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:33'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:33'!
getReference! !

!testRun: #IntroduceNullObjectTest #test35PolymorphicMessageIsAddedToTheNullClassReplacingParametrizedVariables stamp: 'HAW 8/30/2020 19:20:33'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:33'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:34'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:34'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:34'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:34'!
m1 anInstVar isNil ifFalse: [self isNil]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:34'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:34'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:34'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:34'!
with: p1! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:34' prior: 50858329!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:34' prior: 50858358!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:34'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:34' prior: 50858362!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:34'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:34'!
getReference! !

!testRun: #IntroduceNullObjectTest #test36WhenNoNullBlockIsPresentEmptyPolymorphicMessageIsAddedToTheNullClass stamp: 'HAW 8/30/2020 19:20:34'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:35'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:35'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:35'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:35'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:35'!
m1 anInstVar isNil ifTrue: [self isNil]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:35'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:35'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:35'!
with: p1! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:35'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:35' prior: 50858419!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:35' prior: 50858447!
m1 anInstVar with: self! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:35'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:35' prior: 50858451!
m1 anInstVar with: self! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:35'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:35'!
getReference! !

!testRun: #IntroduceNullObjectTest #test37WhenNoConcreteBlockIsPresentEmptyPolymorphicMessageIsAddedToTheConcreteClass stamp: 'HAW 8/30/2020 19:20:35'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:36'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:36'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:36'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:36'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:36'!
m1 anInstVar ifNil: [1+1. 2+2]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:36'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:36'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:36'!
unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:36'!
unaryPolymorphicSelector
	1+1. 2+2! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:36' prior: 50858508!
m1 anInstVar unaryPolymorphicSelector! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:36' prior: 50858538!
m1 anInstVar unaryPolymorphicSelector! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:36'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:36' prior: 50858543!
m1 anInstVar unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:36'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:36'!
getReference! !

!testRun: #IntroduceNullObjectTest #test38WhenThereAreMultipleStatementsPolymorphicMessageIsAddedToTheNullClass stamp: 'HAW 8/30/2020 19:20:36'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:37'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:37'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:38'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:38'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:38'!
m1
	anInstVar ifNil: [1+1. 2+2].
	anInstVar := nil.! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:38'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:38'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:38'!
unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:38'!
unaryPolymorphicSelector
	1+1. 2+2! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:38' prior: 50858600!
m1
	anInstVar unaryPolymorphicSelector.
	anInstVar := nil.! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:38' prior: 50858630!
m1
	anInstVar unaryPolymorphicSelector.
	anInstVar := ANullClass new.! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:38'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:38' prior: 50858636!
m1
	anInstVar unaryPolymorphicSelector.
	anInstVar := ANullClass new.! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:38'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:38'!
getReference! !

!testRun: #IntroduceNullObjectTest #test39ReplacesNilAssignmentsWithNullObject stamp: 'HAW 8/30/2020 19:20:38'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:38'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:39'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:39'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:39'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:39'!
m1
	anInstVar ifNil: [1+1. 2+2].
	anInstVar := nil.
	anInstVar := nil.! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:39'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:39'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:39'!
unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:39'!
unaryPolymorphicSelector
	1+1. 2+2! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:39' prior: 50858694!
m1
	anInstVar unaryPolymorphicSelector.
	anInstVar := nil.
	anInstVar := nil.! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:39' prior: 50858725!
m1
	anInstVar unaryPolymorphicSelector.
	anInstVar := ANullClass new.
	anInstVar := ANullClass new.! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:39'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:39' prior: 50858731!
m1
	anInstVar unaryPolymorphicSelector.
	anInstVar := ANullClass new.
	anInstVar := ANullClass new.! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:39'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:39'!
getReference! !

!testRun: #IntroduceNullObjectTest #test40ReplacesMultipleNilAssignmentsWithNullObject stamp: 'HAW 8/30/2020 19:20:39'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:40'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:40'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:40'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:40'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:40'!
m1
	anInstVar ifNil: [1+1. 2+2].
	anInstVar := self doSomething.! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:40'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:40'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:40'!
unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:40'!
unaryPolymorphicSelector
	1+1. 2+2! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:40' prior: 50858791!
m1
	anInstVar unaryPolymorphicSelector.
	anInstVar := self doSomething.! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:40' prior: 50858822!
m1
	anInstVar unaryPolymorphicSelector.
	self assignOptionalField: (self doSomething).! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:40'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:40' prior: 50858828!
m1
	anInstVar unaryPolymorphicSelector.
	self assignOptionalField: (self doSomething).! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:40'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:40'!
getReference! !

!testRun: #IntroduceNullObjectTest #test41ReplacesAssignmentWithNullObject stamp: 'HAW 8/30/2020 19:20:40'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:41'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:41'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:41'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:41'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:41'!
m1
	anInstVar ifNil: [1+1. 2+2].
	anInstVar := self doSomething.
	anInstVar := self doSomething +  ivar different.! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:41'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:41'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:41'!
unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:41'!
unaryPolymorphicSelector
	1+1. 2+2! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:41' prior: 50858888!
m1
	anInstVar unaryPolymorphicSelector.
	anInstVar := self doSomething.
	anInstVar := self doSomething +  ivar different.! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:41' prior: 50858920!
m1
	anInstVar unaryPolymorphicSelector.
	self assignOptionalField: (self doSomething).
	self assignOptionalField: (self doSomething + ivar different).! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:42'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:42' prior: 50858928!
m1
	anInstVar unaryPolymorphicSelector.
	self assignOptionalField: (self doSomething).
	self assignOptionalField: (self doSomething + ivar different).! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:42'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:42'!
getReference! !

!testRun: #IntroduceNullObjectTest #test42ReplacesMultipleAssignmentsInTheSameMethodWithNullObject stamp: 'HAW 8/30/2020 19:20:42'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:42'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:42'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:43'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:43'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43'!
m11
	anInstVar ifNil: [1+1. 2+2].
	anInstVar := self doSomething.
	anInstVar := self doSomething +  ivar different.! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43'!
m12
	anInstVar ifNil: [1+1. 2+2].
	anInstVar := self doSomething.
	anInstVar := self doSomething +  ivar different.! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:43'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:43'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43'!
unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43'!
unaryPolymorphicSelector
	1+1. 2+2! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43' prior: 50858992!
m11
	anInstVar unaryPolymorphicSelector.
	anInstVar := self doSomething.
	anInstVar := self doSomething +  ivar different.! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43' prior: 50859022!
unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43' prior: 50859026!
unaryPolymorphicSelector
	1+1. 2+2! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43' prior: 50858999!
m12
	anInstVar unaryPolymorphicSelector.
	anInstVar := self doSomething.
	anInstVar := self doSomething +  ivar different.! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43' prior: 50859031!
m11
	anInstVar unaryPolymorphicSelector.
	self assignOptionalField: (self doSomething).
	self assignOptionalField: (self doSomething + ivar different).! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43' prior: 50859048!
m12
	anInstVar unaryPolymorphicSelector.
	self assignOptionalField: (self doSomething).
	self assignOptionalField: (self doSomething + ivar different).! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43' prior: 50859056!
m11
	anInstVar unaryPolymorphicSelector.
	self assignOptionalField: (self doSomething).
	self assignOptionalField: (self doSomething + ivar different).! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43' prior: 50859064!
m12
	anInstVar unaryPolymorphicSelector.
	self assignOptionalField: (self doSomething).
	self assignOptionalField: (self doSomething + ivar different).! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:43'!
getReference! !

!testRun: #IntroduceNullObjectTest #test43ReplacesMultipleAssignmentsInMultipleMethodsWithNullObject stamp: 'HAW 8/30/2020 19:20:43'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:44'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:44'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:44'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:44'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:44'!
m1
	anInstVar ifNil: [1+1. 2+2].
	^anInstVar! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:44'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:44'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:44'!
unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:44'!
unaryPolymorphicSelector
	1+1. 2+2! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:44' prior: 50859136!
m1
	anInstVar unaryPolymorphicSelector.
	^anInstVar! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:44' prior: 50859166!
m1
	anInstVar unaryPolymorphicSelector.
	^anInstVar! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:44'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:44' prior: 50859171!
m1
	anInstVar unaryPolymorphicSelector.
	^anInstVar getReference! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:44'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:44'!
getReference! !

!testRun: #IntroduceNullObjectTest #test44ReplacesReturnOfIvarWithGetReference stamp: 'HAW 8/30/2020 19:20:44'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:45'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:45'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:45'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:45'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:45'!
m1
	anInstVar ifNil: [1+1. 2+2].
	self do: anInstVar.! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:45'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:45'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:45'!
unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:45'!
unaryPolymorphicSelector
	1+1. 2+2! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:45' prior: 50859229!
m1
	anInstVar unaryPolymorphicSelector.
	self do: anInstVar.! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:45' prior: 50859259!
m1
	anInstVar unaryPolymorphicSelector.
	self do: anInstVar.! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:45'!
assignOptionalField: maybeNil

	anInstVar := maybeNil ifNil: [ ANullClass new ].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:45' prior: 50859265!
m1
	anInstVar unaryPolymorphicSelector.
	self do: anInstVar getReference.! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:45'!
getReference
	^nil! !
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:45'!
getReference! !

!testRun: #IntroduceNullObjectTest #test45ReplacesIvarAsParamWithGetReference stamp: 'HAW 8/30/2020 19:20:45'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 8/30/2020 19:20:46'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:46'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:20:47'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:47'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:47'!
m1 self ifNil: [1 + 1]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test01WhenThereAreNoVariablesToExtractFindsNothing stamp: 'HAW 8/30/2020 19:20:47'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:20:47'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:47'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:47'!
m1 self ifNil: [| a | a := 2. a + 1]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test02WhenThereAreOnlyTemporariesFindsNothing stamp: 'HAW 8/30/2020 19:20:47'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:20:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:48'!
m1 self ifNil: [| a | a := 2. a + self]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test03WhenABlockReferencesNonTemporariesTheyAreFound stamp: 'HAW 8/30/2020 19:20:48'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:20:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:49'!
m1 self ifNil: [| a | a := 2. a ifNil: [ self + 2]]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test04WhenANestedBlockReferencesNonTemporariesTheyAreFound stamp: 'HAW 8/30/2020 19:20:49'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:20:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:49'!
m1 self ifNil: [| a | a := nil]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test05NilIsNotFound stamp: 'HAW 8/30/2020 19:20:49'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:20:50'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:50'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:50'!
m1 self ifNil: [false or: [true]]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test06TrueAndFalseAreNotFound stamp: 'HAW 8/30/2020 19:20:50'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:20:50'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:51'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:20:51'!
m1 self ifNil: [| a | a := 2. a + anInstVar]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test07WhenABlockReferencesInstanceVariablesTheyAreFound stamp: 'HAW 8/30/2020 19:20:51'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:20:51'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:51'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test01AbstractClassClassNameMustNotBeEmpty stamp: 'HAW 8/30/2020 19:20:51'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:52'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:52'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test02AbstractClassClassNameMustBeASymbol stamp: 'HAW 8/30/2020 19:20:52'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:53'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:53'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test03AbstractClassClassNameMustStartWithUppercaseLetter stamp: 'HAW 8/30/2020 19:20:53'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:53'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:53'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test04AbstractClassClassNameMustNotHaveSeparators stamp: 'HAW 8/30/2020 19:20:53'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:54'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:54'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test05AbstractClassClassNameMustNotExist stamp: 'HAW 8/30/2020 19:20:54'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:54'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:54'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test06NullObjectClassNameMustNotBeEmpty stamp: 'HAW 8/30/2020 19:20:54'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:55'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:55'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test07NullObjectClassNameMustBeASymbol stamp: 'HAW 8/30/2020 19:20:55'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:56'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:56'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test08NullObjectClassNameMustStartWithUppercaseLetter stamp: 'HAW 8/30/2020 19:20:56'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:56'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:56'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test09NullObjectClassNameMustNotHaveSeparators stamp: 'HAW 8/30/2020 19:20:56'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:57'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:57'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test10NullObjectClassNameMustNotExist stamp: 'HAW 8/30/2020 19:20:57'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:58'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:58'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:58'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:58'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test11CreatesAbstractClass stamp: 'HAW 8/30/2020 19:20:58'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:20:59'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:20:59'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:20:59'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:59'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:59'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:20:59'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test12CreatesAbstractClassInChosenCategory stamp: 'HAW 8/30/2020 19:20:59'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:00'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:00'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:00'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:00'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:00'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:00'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test13CreatesAbstractClassAsSubclassOfConcreteClassPreviousSuperclass stamp: 'HAW 8/30/2020 19:21:00'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:01'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:01'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:02'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:02'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:02'!
m1! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:02'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:02'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:02'!
m1
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:02' overrides: 50859859!
m1! !

!testRun: #NullObjectHierarchyCreatorTest #test14AbstractClassDefinesAllTheSelectorsOfConcreteClass stamp: 'HAW 8/30/2020 19:21:02'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:02'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:03'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:03'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:03'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:03'!
m1: anArg! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:03'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:03'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:03'!
m1: anArg
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:03' overrides: 50859923!
m1: anArg! !

!testRun: #NullObjectHierarchyCreatorTest #test15AbstractClassMethodParametersNamesArePreservedFromConcreteClass stamp: 'HAW 8/30/2020 19:21:03'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:03'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:04'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:04'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:04'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:04'!
m1: anArg
		^1 + 2! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:04'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:04'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:04'!
m1: anArg
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:04' overrides: 50859988!
m1: anArg! !

!testRun: #NullObjectHierarchyCreatorTest #test16AbstractClassMethodsDelegateResponsibility stamp: 'HAW 8/30/2020 19:21:04'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:05'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:05'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:05'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:05'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:05'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:05'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test17CreatesNullObjectClass stamp: 'HAW 8/30/2020 19:21:05'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:06'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:06'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:06'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:06'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:06'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:06'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test18CreatesNullObjectClassInChosenCategory stamp: 'HAW 8/30/2020 19:21:06'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:07'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:07'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:08'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:08'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:08'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:08'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test19CreatesNullObjectClassClassAsSubclassOfAbstractClass stamp: 'HAW 8/30/2020 19:21:08'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:08'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:09'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:09'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:09'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:09'!
m1! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:09'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:09'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:09'!
m1
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:09' overrides: 50860208!
m1! !

!testRun: #NullObjectHierarchyCreatorTest #test20NullObjectClassDefinesAllTheSelectorsOfConcreteClass stamp: 'HAW 8/30/2020 19:21:09'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:09'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:10'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:10'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:10'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:10'!
m1: anArg! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:10'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:10'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:10'!
m1: anArg
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:10' overrides: 50860272!
m1: anArg! !

!testRun: #NullObjectHierarchyCreatorTest #test21NullObjectClassMethodParametersNamesArePreservedFromConcreteClass stamp: 'HAW 8/30/2020 19:21:10'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:11'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:11'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:11'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:11'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:11'!
m1: anArg
		^1 + 2! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:11'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:11'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:11'!
m1: anArg
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:11' overrides: 50860337!
m1: anArg! !

!testRun: #NullObjectHierarchyCreatorTest #test22NullObjectClassMethodsAreEmpty stamp: 'HAW 8/30/2020 19:21:11'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:12'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:12'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:12'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:12'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:12'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:12'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test23ConcreteClassSubclassesTheAbstractClass stamp: 'HAW 8/30/2020 19:21:12'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:13'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:13'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:14'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:14'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:14'!
m1: anArg
		^1 + 2! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:14'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:14'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:14'!
m1: anArg
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:14' overrides: 50860453!
m1: anArg! !

!testRun: #NullObjectHierarchyCreatorTest #test24ConcreteClassMethodsArePreserved stamp: 'HAW 8/30/2020 19:21:14'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 8/30/2020 19:21:14'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 8/30/2020 19:21:15'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 8/30/2020 19:21:15'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:15'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:15'!
m1 self ifNil: [1 + 1].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:15'!
m2 1 + 1.! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test01MessageNodeMustBelongToTheMethodNode stamp: 'HAW 8/30/2020 19:21:15'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:16'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:16'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:16'!
m1 anInstVar ifTrue: [1 + 1].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test02MessageNodeMustRepresentASupportedMessageSent stamp: 'HAW 8/30/2020 19:21:16'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:16'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:16'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:16'!
m1 anInstVar ifNil: [self isNil]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test03AllVariablesToParametrizeHaveACorrespondingKeyword stamp: 'HAW 8/30/2020 19:21:16'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:17'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:17'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:17'!
m1 anInstVar ifNil: [self isNil].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test04AllKeywordsMustHaveACorrespondingVariableToParametrize stamp: 'HAW 8/30/2020 19:21:17'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:18'!
m1 anInstVar ifNil: [self isNil].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test05CreatesReplaceIfNilWithPolymorphismParameters stamp: 'HAW 8/30/2020 19:21:18'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:18'!
m1 anInstVar ifNil: [self or: [true]].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test06ReplaceIfNilWithPolymorphismParametersOnBlocksWithBooleanConstants stamp: 'HAW 8/30/2020 19:21:18'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:19'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:19'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:19'!
m1 anInstVar ifNil: [ | tempVar | tempVar := 1 + 1. self isNil].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test07ParameterNamesMustNotBeEqualToABlockTemporal stamp: 'HAW 8/30/2020 19:21:19'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:20'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:20'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:20'!
m1
		anInstVar ifNil: [self ifNil: [ | tempVar | tempVar := 1 + 1]].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test08ParameterNamesMustNotBeEqualToANestedBlockTemporal stamp: 'HAW 8/30/2020 19:21:20'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:20'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:20'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:20'!
m1
		anInstVar ifNil: [self allInstVarNames collect: [:arg | arg asSymbol]].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test09ParameterNamesMustNotBeEqualToNestedBlocksArguments stamp: 'HAW 8/30/2020 19:21:20'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:21'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:21'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:21'!
m1 anInstVar ifNil: [1 + 1] ifNotNil: [2 + 2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test10RangeOfMessageSendForIfNilIfNotNil stamp: 'HAW 8/30/2020 19:21:21'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:22'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:22'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:22'!
m1 anInstVar ifNotNil: [1 + 1] ifNil: [2 + 2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test11RangeOfMessageSendForIfNotNilIfNil stamp: 'HAW 8/30/2020 19:21:22'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:22'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:22'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:22'!
m1 anInstVar ifNotNil: [1 + 1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test12RangeOfMessageSendForIfNotNil stamp: 'HAW 8/30/2020 19:21:22'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:23'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:23'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:23'!
m1 anInstVar ifNil: [1 + 1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test13RangeOfMessageSendForIfNil stamp: 'HAW 8/30/2020 19:21:23'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:24'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:24'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:24'!
m1 anInstVar isNil ifTrue: [1 + 1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test14RangeOfMessageSendForIsNilIfTrue stamp: 'HAW 8/30/2020 19:21:24'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:24'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:24'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:24'!
m1 anInstVar isNil ifTrue: [1 + 1] ifFalse: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test15RangeOfMessageSendForIsNilIfTrueIfFalse stamp: 'HAW 8/30/2020 19:21:24'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:25'!
m1 anInstVar       ifNil: [1 + 1]          ifNotNil: [2 + 2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test16WhenThereAreExtraSpacesRangeOfMessageSendForIfNilIfNotNil stamp: 'HAW 8/30/2020 19:21:25'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:26'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:26'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:26'!
m1 anInstVar    isNil       ifTrue: [1 + 1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test17WhenThereAreExtraSpacesRangeOfMessageSendForIsNilIfTrue stamp: 'HAW 8/30/2020 19:21:26'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:27'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:27'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:27'!
m1 anInstVar ifNil: [1 + 1] ifNotNil: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test18ConcreteBlockSourceCodeForIfNilIfNotNil stamp: 'HAW 8/30/2020 19:21:27'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:27'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:27'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:27'!
m1 anInstVar ifNotNil: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test19ConcreteBlockSourceCodeForIfNotNil stamp: 'HAW 8/30/2020 19:21:27'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:28'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:28'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:28'!
m1 anInstVar ifNotNil: [2+2] ifNil: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test20ConcreteBlockSourceCodeForIfNotNilIfNil stamp: 'HAW 8/30/2020 19:21:28'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:29'!
m1 anInstVar isNil ifFalse: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test21ConcreteBlockSourceCodeForIsNilIfFalse stamp: 'HAW 8/30/2020 19:21:29'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:29'!
m1 anInstVar isNil ifTrue: [1+1] ifFalse: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test22ConcreteBlockSourceCodeForIsNilIfTrueIfFalse stamp: 'HAW 8/30/2020 19:21:29'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:30'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:30'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:30'!
m1 anInstVar ifNil: [1+1] ifNotNil: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test23NullBlockSourceCodeForIfNilIfNotNil stamp: 'HAW 8/30/2020 19:21:30'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:31'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:31'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:31'!
m1 anInstVar ifNil: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test24NullBlockSourceCodeForIfNil stamp: 'HAW 8/30/2020 19:21:31'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:31'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:31'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:31'!
m1 anInstVar ifNotNil: [2+2] ifNil: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test25NullBlockSourceCodeForIfNotNilIfNil stamp: 'HAW 8/30/2020 19:21:31'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:32'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:32'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:32'!
m1 anInstVar isNil ifTrue: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test26NullBlockSourceCodeForIsNilIfTrue stamp: 'HAW 8/30/2020 19:21:32'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:33'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:33'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:33'!
m1 anInstVar isNil ifFalse: [2+2] ifTrue: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test27NullBlockSourceCodeForIsNilIfFalseIfTrue stamp: 'HAW 8/30/2020 19:21:33'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:33'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:33'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:33'!
m1 anInstVar ifNotNil: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test28NullBlockSourceCodeForIfNotNil stamp: 'HAW 8/30/2020 19:21:33'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:34'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:34'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:34'!
m1 anInstVar ifNil: [1] ifNotNil: [2+2. 1+1.]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test29WhenThereAreMultipleStatementsConcreteBlockSourceCodeForIfNilIfNotNil stamp: 'HAW 8/30/2020 19:21:34'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:35'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:35'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:35'!
m1 anInstVar ifNotNil: [2+2. 1+1.]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test30WhenThereAreMultipleStatementsConcreteBlockSourceCodeForIfNotNil stamp: 'HAW 8/30/2020 19:21:35'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:35'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:35'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:35'!
m1 anInstVar isNil ifFalse: [2+2. 1+1.]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test31WhenThereAreMultipleStatementsConcreteBlockSourceCodeForIsNilIfFalse stamp: 'HAW 8/30/2020 19:21:35'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:36'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:36'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:36'!
m1 anInstVar ifNil: [1+1. 2+2.] ifNotNil: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test32WhenThereAreMultipleStatementsNullBlockSourceCodeForIfNilIfNotNil stamp: 'HAW 8/30/2020 19:21:36'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:37'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:37'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:37'!
m1 anInstVar ifNil: [1+1. 2+2.]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test33WhenThereAreMultipleStatementsNullBlockSourceCodeForIfNil stamp: 'HAW 8/30/2020 19:21:37'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:37'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:37'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:37'!
m1 anInstVar isNil ifTrue: [1+1. 2+2.]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test34WhenThereAreMultipleStatementsNullBlockSourceCodeForIsNilIfTrue stamp: 'HAW 8/30/2020 19:21:37'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 8/30/2020 19:21:38'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test01ParameterNameMustNotBeEmpty stamp: 'HAW 8/30/2020 19:21:38'!
PASSED!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test02ParameterNameMustNotContainInvalidCharacters stamp: 'HAW 8/30/2020 19:21:38'!
PASSED!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test03ParameterNameMustNotContainSeparators stamp: 'HAW 8/30/2020 19:21:39'!
PASSED!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test04KeywordMustNotBeEmpty stamp: 'HAW 8/30/2020 19:21:39'!
PASSED!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test05KeywordMustNotContainInvalidCharacters stamp: 'HAW 8/30/2020 19:21:40'!
PASSED!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test06CreatesADefinition stamp: 'HAW 8/30/2020 19:21:40'!
PASSED!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:40'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:40'!
m1! !

!testRun: #VariablesToExtractFinderTest #test01WhenTheMethodHasNoVariablesItReturnsAnEmptySet stamp: 'HAW 8/30/2020 19:21:40'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:41'!
m1
		| aTempVar |

		aTempVar := 2.

		^aTempVar.! !

!testRun: #VariablesToExtractFinderTest #test02WhenTheMethodHasOnlyTemporaryVariablesItReturnsAnEmptySet stamp: 'HAW 8/30/2020 19:21:41'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:42'!
m1

		self m2.! !

!testRun: #VariablesToExtractFinderTest #test03WhenTheMethodReferencesSelfPseudoVariableItFindsIt stamp: 'HAW 8/30/2020 19:21:42'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:42'!
m1: anArg

		^anArg + 2! !

!testRun: #VariablesToExtractFinderTest #test04WhenTheMethodHasArgumentsTheyAreIncludedAsVariablesToExtract stamp: 'HAW 8/30/2020 19:21:42'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:43'!
m1

		^anInstVar isNil! !

!testRun: #VariablesToExtractFinderTest #test05WhenTheMethodReferencesAnInstanceVariableItFindsIt stamp: 'HAW 8/30/2020 19:21:43'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:44'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:44'!
m1

		^AClassVar isNil! !

!testRun: #VariablesToExtractFinderTest #test06WhenTheMethodReferencesAClassVariableItFindsIt stamp: 'HAW 8/30/2020 19:21:44'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:45'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ASharedPool category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:45'!
SharedPool subclass: #ASharedPool
	instanceVariableNames: ''
	classVariableNames: 'APoolVariable'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:45'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'ASharedPool'
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:45'!
m1
		^APoolVariable isNil! !

!testRun: #VariablesToExtractFinderTest #test07WhenTheMethodReferencesAPoolVariableItFindsIt stamp: 'HAW 8/30/2020 19:21:45'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:45'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'ASharedPool'
	category: '__Refactoring-TestData__'!

!classRemoval: #ASharedPool stamp: 'HAW 8/30/2020 19:21:46'!
SharedPool subclass: #ASharedPool
	instanceVariableNames: ''
	classVariableNames: 'APoolVariable'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:46'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:46'!
m1

		^true not! !

!testRun: #VariablesToExtractFinderTest #test08DoesNotFindPseudoVariablesButSelf stamp: 'HAW 8/30/2020 19:21:46'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:46'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:46'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:46'!
m1
		^anInstVar! !

!testRun: #VariablesToExtractFinderTest #test09WhenReturnsAnInstVarFindsIt stamp: 'HAW 8/30/2020 19:21:46'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:47'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:47'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:47'!
m1
		^Object! !

!testRun: #VariablesToExtractFinderTest #test10DoesNotFindClasses stamp: 'HAW 8/30/2020 19:21:47'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:48'!
m1
		^Smalltalk! !

!testRun: #VariablesToExtractFinderTest #test11DoesNotFindGlobals stamp: 'HAW 8/30/2020 19:21:48'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 8/30/2020 19:21:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test01SelectorMustNotBeEmpty stamp: 'HAW 8/30/2020 19:21:49'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test02SelectorMustNotContainInvalidCharacters stamp: 'HAW 8/30/2020 19:21:49'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test03SelectorMustNotStartWithInvalidStartOfSelector stamp: 'HAW 8/30/2020 19:21:49'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test04CreatesVariablesToParametrizeKeywordsDefinitionsWithSelector stamp: 'HAW 8/30/2020 19:21:50'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test05FirstKeywordMustNotStartWithAnInvalidStartOfSelector stamp: 'HAW 8/30/2020 19:21:50'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test06ParameterNamesMustNotBeRepeated stamp: 'HAW 8/30/2020 19:21:51'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test07VariablesToParametrizeMustNotBeRepeated stamp: 'HAW 8/30/2020 19:21:51'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test08CreatesVariablesToParametrizeKeywordsDefinitionsWithDefinitions stamp: 'HAW 8/30/2020 19:21:52'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test09WhenNoVariablesToParametrizeBuildsSelector stamp: 'HAW 8/30/2020 19:21:52'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test10WhenVariablesToParametrizeBuildsSelectorFromKeywordsInOrder stamp: 'HAW 8/30/2020 19:21:52'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test11WhenVariablesToParametrizeBuildsMessageSending stamp: 'HAW 8/30/2020 19:21:53'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test12WhenNoVariablesToParametrizeBuildsMessageHeader stamp: 'HAW 8/30/2020 19:21:53'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test13WhenVariablesToParametrizeBuildsMessageHeader stamp: 'HAW 8/30/2020 19:21:54'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:54'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:54'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:54'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:54'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:54' prior: 50861716!
m3 | x | self m1: 1. false ifTrue: [ x m1 ]! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:21:54'!
m1!

!testRun: #AddParameterWithActualScopeTest #test01DoesNotChangePossibleMessageSendWhenInstructedToDoSo stamp: 'HAW 8/30/2020 19:21:54'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:21:55'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:55'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:55'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:55'!
m3 | x | self m1: 1 m3: 3. false ifTrue: [ x m1: 1 m3: 3 ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:55'!
m1: p1 m2: p2 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:55' prior: 50861757!
m3 | x | self m1: 1 m2: 2 m3: 3. false ifTrue: [ x m1: 1 m3: 3 ]! !

!methodRemoval: ClassToAddParameter #m1:m3: stamp: 'HAW 8/30/2020 19:21:55'!
m1: p1 m3: p3!

!testRun: #AddParameterWithActualScopeTest #test01_01_DoesNotChangePossibleMessageSendWhenInstructedToDoSoWithKeywordMessages stamp: 'HAW 8/30/2020 19:21:55'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:21:55'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:55'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:55'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:55'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:55'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:55'!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!testRun: #AddParameterWithActualScopeTest #test02CanNotAddParameterWithReceiverTypeOfMessageSendNotIncludedInImplementors stamp: 'HAW 8/30/2020 19:21:55'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:21:56'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:21:56'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:56'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:56'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:56'!
m1: p1 m3: p3! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:56'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:56'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1 m3: 3! !

!testRun: #AddParameterWithActualScopeTest #test02_01_CanNotAddParameterWithReceiverTypeOfMessageSendNotIncludedInImplementorsForKeywordMessage stamp: 'HAW 8/30/2020 19:21:56'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:21:57'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:21:57'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:57'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:57'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:57'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:57'!
m3 | x | x := ClassOfSender new. x m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:57'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:57' prior: 50861905!
m3 | x | x := ClassOfSender new. x m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:21:57'!
m1!

!testRun: #AddParameterWithActualScopeTest #test03AddParameterWhenReceiverTypeOfMessageSendIsSubtypeOfImplementorsType stamp: 'HAW 8/30/2020 19:21:57'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:21:58'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:21:58'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:58'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:58'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:58'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:58'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:58'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:58'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:58'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:58' prior: 50861963!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:21:58'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 8/30/2020 19:21:58'!
m1!

!testRun: #AddParameterWithActualScopeTest #test04AddParameterWhenReceiverTypeOfMessageSendIsEqualToImplementorsTypes stamp: 'HAW 8/30/2020 19:21:58'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:21:59'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:21:59'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:59'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:21:59'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:59'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:59'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:59'!
m3 | x y | x := self. y := ClassOfSender new. x m1. y m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:59'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:59'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:21:59' prior: 50862027!
m3 | x y | x := self. y := ClassOfSender new. x m1: 1. y m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:21:59'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 8/30/2020 19:21:59'!
m1!

!testRun: #AddParameterWithActualScopeTest #test05AddParameterInDifferentMessageSendsWithReceiverTypeIsIncludedInImplementorsType stamp: 'HAW 8/30/2020 19:21:59'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:22:00'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:00'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:01'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:01'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:01'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:01'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:01'!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1. y m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:01'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:01'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:01' prior: 50862092!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1: 1. y m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:22:01'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 8/30/2020 19:22:01'!
m1!

!testRun: #AddParameterWithActualScopeTest #test06AddParameterInDifferentMessageSendsWithReceiverTypeEqualToImplementorsType stamp: 'HAW 8/30/2020 19:22:01'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:22:01'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:01'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:02'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:02'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:02'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:02'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:02' prior: 50862146!
m3 | x | self m1: 1. false ifTrue: [ x m1: 1 ]! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:22:02'!
m1!

!testRun: #AddParameterWithActualScopeTest #test07AddParameterToPossibleMessageSendIfInstructedToDoSo stamp: 'HAW 8/30/2020 19:22:02'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:22:02'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:02'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:02'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:02'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:02'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:02'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:02' prior: 50862194!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 8/30/2020 19:22:02'!
m1!

!testRun: #AddParameterWithActualScopeTest #test08AddParameterWithReceiverTypeOfMessageSendNotIncludedInImplementorsButSelectorNotImplementedInTypeHierarchy stamp: 'HAW 8/30/2020 19:22:02'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:22:03'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:03'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:03'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:03'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:03'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:03'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:03'!
m3 self m1. ClassOfSender new m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:03'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:03' prior: 50862254!
m3 self m1: 1. ClassOfSender new m1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:22:03'!
m1!

!testRun: #AddParameterWithActualScopeTest #test09AddParameterOnlyToValidMessageSendWhenMoreSendsInSameMethod stamp: 'HAW 8/30/2020 19:22:03'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:22:04'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:04'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:04'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:04'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:04'!
m3 |x| self m1. x m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:04'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:04' prior: 50862300!
m3 |x| self m1: 1. x m1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 8/30/2020 19:22:04'!
m1!

!testRun: #AddParameterWithActualScopeTest #test10UsesTheModifiedSourceCodeWhenAddingParameterToMethodWithSureAndPossibleSenders stamp: 'HAW 8/30/2020 19:22:04'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:22:05'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:05'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:05'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:05'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:05'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:05'!
m3 | x | x := self. x := ClassOfSender new. x m1; printString! !

!testRun: #AddParameterWithActualScopeTest #test11CanNotAddParameterWithReceiverTypeOfCascadeMessageSendNotIncludedInImplementors stamp: 'HAW 8/30/2020 19:22:05'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:22:05'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:06'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterWithActualScopeTest #test12SuperclassInstanceCreationMessagesShouldNotBeUsed stamp: 'HAW 8/30/2020 19:22:06'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:06'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:06'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:06'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:06'!
m3 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:06'!
m1: p1 m2: p2 ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:06' prior: 50862400!
m3 self m1: 1 m2: 2! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 8/30/2020 19:22:06'!
m1: p1!

!testRun: #AddParameterWithActualScopeTest #test13AddLastParameterCorrectly stamp: 'HAW 8/30/2020 19:22:06'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:07'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddParameter stamp: 'HAW 8/30/2020 19:22:07'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:07'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:07'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:07'!
m3 | x | self m1: 1. false ifTrue: [ x m1: 1 ]! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:07'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:07' prior: 50862446!
m3 | x | self m1. false ifTrue: [ x m1: 1 ]! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 8/30/2020 19:22:07'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test01DoesNotChangePossibleMessageSendWhenInstructedToDoSo stamp: 'HAW 8/30/2020 19:22:07'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:08'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:08'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:08'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:08'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:08'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:08'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !

!testRun: #RemoveParameterWithActualScopeTest #test02CanNotRemoveParameterWithReceiverTypeOfMessageSendNotIncludedInImplementors stamp: 'HAW 8/30/2020 19:22:08'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:09'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:09'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:09'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:09'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:09'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:09'!
m3 | x | x := ClassOfSender new. x m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:09'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:09' prior: 50862545!
m3 | x | x := ClassOfSender new. x m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 8/30/2020 19:22:09'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test03RemovesParameterWhenReceiverTypeOfMessageSendIsSubtypeOfImplementorsType stamp: 'HAW 8/30/2020 19:22:09'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:10'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:10'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:10'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:10'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:10'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:10'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:10'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:10'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:10'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:10' prior: 50862605!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 8/30/2020 19:22:10'!
m1: p1!

!methodRemoval: ClassOfSender #m1: stamp: 'HAW 8/30/2020 19:22:10'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test04RemovesParameterWhenReceiverTypeOfMessageSendIsEqualToImplementorsTypes stamp: 'HAW 8/30/2020 19:22:10'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:11'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:11'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:11'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:11'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:11'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:11'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:11'!
m3 | x y | x := self. y := ClassOfSender new. x m1: 1. y m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:11'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:11'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:11' prior: 50862671!
m3 | x y | x := self. y := ClassOfSender new. x m1. y m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 8/30/2020 19:22:11'!
m1: p1!

!methodRemoval: ClassOfSender #m1: stamp: 'HAW 8/30/2020 19:22:11'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test05RemovesParameterInDifferentMessageSendsWithReceiverTypeIsIncludedInImplementorsType stamp: 'HAW 8/30/2020 19:22:11'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:12'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:12'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:12'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:12'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:12'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:12'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:12'!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1: 1. y m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:12'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:12'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:12' prior: 50862738!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1. y m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 8/30/2020 19:22:12'!
m1: p1!

!methodRemoval: ClassOfSender #m1: stamp: 'HAW 8/30/2020 19:22:12'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test06RemovesParameterInDifferentMessageSendsWithReceiverTypeEqualToImplementorsType stamp: 'HAW 8/30/2020 19:22:12'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:13'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:13'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:13'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:13'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:13'!
m3 | x | self m1: 1. false ifTrue: [ x m1: 1]! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:13'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:13' prior: 50862795!
m3 | x | self m1. false ifTrue: [ x m1]! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 8/30/2020 19:22:13'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test07RemovesParameterToPossibleMessageSendIfInstructedToDoSo stamp: 'HAW 8/30/2020 19:22:13'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:13'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:14'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:14'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:14'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:14'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:14'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:14' prior: 50862845!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!methodRemoval: ClassOfSender #m1: stamp: 'HAW 8/30/2020 19:22:14'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test08RemovesParameterWithReceiverTypeOfMessageSendNotIncludedInImplementorsButSelectorNotImplementedInTypeHierarchy stamp: 'HAW 8/30/2020 19:22:14'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:14'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:14'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:15'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:15'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:15'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:15'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:15'!
m3 self m1: 1. ClassOfSender new m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:15'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:15' prior: 50862907!
m3 self m1. ClassOfSender new m1: 1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 8/30/2020 19:22:15'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test09RemovesParameterOnlyToValidMessageSendWhenMoreSendsInSameMethod stamp: 'HAW 8/30/2020 19:22:15'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:15'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:16'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:16'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:16'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:16'!
m3 |x| self m1: 1. x m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:16'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:16' prior: 50862956!
m3 |x| self m1. x m1: 1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 8/30/2020 19:22:16'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test10UsesTheModifiedSourceCodeWhenRemovingParameterToMethodWithSureAndPossibleSenders stamp: 'HAW 8/30/2020 19:22:16'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:16'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:16'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:16'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:16'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:16'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:16'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1; printString! !

!testRun: #RemoveParameterWithActualScopeTest #test11CanNotRemoveParameterWithReceiverTypeOfCascadeMessageSendNotIncludedInImplementors stamp: 'HAW 8/30/2020 19:22:16'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:17'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:17'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveParameterWithActualScopeTest #test12SuperclassInstanceCreationMessagesShouldNotBeUsed stamp: 'HAW 8/30/2020 19:22:17'!
PASSED!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:18'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:18'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:18'!
m1: p1 m2: p2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:18'!
m3 self m1: 1 m2: 2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:18'!
m2: p2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:18' prior: 50863059!
m3 self m2: 2! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'HAW 8/30/2020 19:22:18'!
m1: p1 m2: p2!

!testRun: #RemoveParameterWithActualScopeTest #test13RemovesOtherThanLastParameterCorrectly stamp: 'HAW 8/30/2020 19:22:18'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:18'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 8/30/2020 19:22:19'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:19'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:19'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:19'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:19'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:19' prior: 50863104!
m3 | x | self m2. false ifTrue: [ x m1 ]! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 8/30/2020 19:22:19'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test01DoesNotRenamesPossibleMessageSendWhenInstructedToDoSo stamp: 'HAW 8/30/2020 19:22:19'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:19'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:19'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:19'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:19'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:19'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:19'!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!testRun: #RenameSelectorWithActualScopeTest #test02CanNotRenameWithReceiverTypeOfMessageSendNotIncludedInImplementors stamp: 'HAW 8/30/2020 19:22:19'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:20'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:20'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:20'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:20'!
ClassToRenameSelector subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:20'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:20'!
m3 | x | x := ClassOfSender new. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:20'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:20' prior: 50863201!
m3 | x | x := ClassOfSender new. x m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 8/30/2020 19:22:20'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test03RenamesWhenReceiverTypeOfMessageSendIsSubtypeOfImplementorsType stamp: 'HAW 8/30/2020 19:22:20'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:21'!
ClassToRenameSelector subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:21'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:21'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:21'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:21'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:21'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:21'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:21'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:21'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:21' prior: 50863260!
m3 | x | x := self. x := ClassOfSender new. x m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 8/30/2020 19:22:21'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 8/30/2020 19:22:21'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test04RenamesWhenReceiverTypeOfMessageSendIsEqualToImplementorsTypes stamp: 'HAW 8/30/2020 19:22:21'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:22'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:22'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:22'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:22'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:22'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:22'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:22'!
m3 | x y | x := self. y := ClassOfSender new. x m1. y m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:22'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:22'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:22' prior: 50863324!
m3 | x y | x := self. y := ClassOfSender new. x m2. y m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 8/30/2020 19:22:22'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 8/30/2020 19:22:22'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test05RenamesDifferentMessageSendsWithReceiverTypeIsIncludedInImplementorsType stamp: 'HAW 8/30/2020 19:22:22'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:23'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:23'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:23'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:23'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:23'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:23'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:23'!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1. y m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:23'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:23'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:23' prior: 50863389!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m2. y m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 8/30/2020 19:22:23'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 8/30/2020 19:22:23'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test06RenamesDifferentMessageSendsWithReceiverTypeEqualToImplementorsType stamp: 'HAW 8/30/2020 19:22:23'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:24'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:24'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:24'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:24'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:24'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:24'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:24' prior: 50863443!
m3 | x | self m2. false ifTrue: [ x m2 ]! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 8/30/2020 19:22:24'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test07RenamePossibleMessageSendIfInstructedToDoSo stamp: 'HAW 8/30/2020 19:22:24'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:25'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:25'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:25'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:25'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:25'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:25'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:25' prior: 50863491!
m3 | x | x := self. x := ClassOfSender new. x m2! !

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 8/30/2020 19:22:25'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test08RenamesWithReceiverTypeOfMessageSendNotIncludedInImplementorsButSelectorNotImplementedInTypeHierarchy stamp: 'HAW 8/30/2020 19:22:25'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:26'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:26'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:26'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:26'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:26'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:26'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:26'!
m3 self m1. ClassOfSender new m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:26'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:26' prior: 50863551!
m3 self m2. ClassOfSender new m1! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 8/30/2020 19:22:26'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test09RenamesOnlyValidMessageSendWhenMoreSendsInSameMethod stamp: 'HAW 8/30/2020 19:22:26'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:27'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:27'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:27'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:27'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:27'!
m3 |x| self m1. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:27'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:27' prior: 50863597!
m3 |x| self m2. x m1! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 8/30/2020 19:22:27'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test10UsesTheModifiedSourceCodeWhenRenamingAMethodWithSureAndPossibleSenders stamp: 'HAW 8/30/2020 19:22:27'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:28'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:28'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 8/30/2020 19:22:28'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:28'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:28'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/30/2020 19:22:28'!
m3 | x | x := self. x := ClassOfSender new. x m1; printString! !

!testRun: #RenameSelectorWithActualScopeTest #test11CanNotRenameWithReceiverTypeOfCascadeMessageSendNotIncludedInImplementors stamp: 'HAW 8/30/2020 19:22:28'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 8/30/2020 19:22:29'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 8/30/2020 19:22:29'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameSelectorWithActualScopeTest #test12SuperclassInstanceCreationMessagesShouldNotBeUsed stamp: 'HAW 8/30/2020 19:22:29'!
PASSED!

----QUIT----(30 August 2020 19:22:29) CuisUniversity-4365.image priorSource: 15901735!

----STARTUP---- (16 November 2020 17:33:14) as C:\Users\mdlcs\Downloads\OS\libros\windows64\CuisUniversity-4365.image!


Object subclass: #MerchantProcessor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessor category: #TusLibros stamp: 'CS 11/16/2020 17:35:40'!
Object subclass: #MerchantProcessor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #MerchantProcessorTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorTests category: #TusLibros stamp: 'CS 11/16/2020 17:36:31'!
TestCase subclass: #MerchantProcessorTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorTests methodsFor: 'no messages' stamp: 'CS 11/16/2020 17:45:19'!
test01WhileMerchantProcessorWorksDebitingAValidAmountWithAValidCreditCardIsSuccesful! !

Object subclass: #CreditCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: #TusLibros stamp: 'CS 11/16/2020 17:46:51'!
Object subclass: #CreditCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'CS 11/16/2020 17:47:55'!
Object subclass: #CreditCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorTests methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 17:50:22'!
test02WhileMerchantProcessorWorksDebitingAnInalidAmountWithAValidCreditCardIsSuccesful! !
!MerchantProcessorTests methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 17:51:18'!
test02WhileMerchantProcessorWorksDebitingAnInalidAmountWithAValidCreditCardIsNotSuccesful! !

!methodRemoval: MerchantProcessorTests #test02WhileMerchantProcessorWorksDebitingAnInalidAmountWithAValidCreditCardIsSuccesful stamp: 'CS 11/16/2020 17:51:18'!
test02WhileMerchantProcessorWorksDebitingAnInalidAmountWithAValidCreditCardIsSuccesful!
!MerchantProcessorTests methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 17:51:43'!
test03WhileMerchantProcessorWorksDebitingAValidAmountWithAnInvalidCreditCardIsNotSuccesful! !
!MerchantProcessorTests methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 17:52:26'!
test04WhileMerchantProcessorWorksDebitingAValidAmountWithAnInvalidCreditCardIsNotSuccesful! !

!methodRemoval: MerchantProcessorTests #test03WhileMerchantProcessorWorksDebitingAValidAmountWithAnInvalidCreditCardIsNotSuccesful stamp: 'CS 11/16/2020 17:52:26'!
test03WhileMerchantProcessorWorksDebitingAValidAmountWithAnInvalidCreditCardIsNotSuccesful!
!MerchantProcessorTests methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 17:52:35'!
test03WhileMerchantProcessorWorksDebitingAnInalidAmountWithAValidCreditCardIsNotSuccesful! !

!methodRemoval: MerchantProcessorTests #test02WhileMerchantProcessorWorksDebitingAnInalidAmountWithAValidCreditCardIsNotSuccesful stamp: 'CS 11/16/2020 17:52:35'!
test02WhileMerchantProcessorWorksDebitingAnInalidAmountWithAValidCreditCardIsNotSuccesful!
!MerchantProcessorTests methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 17:52:56'!
test02WhileMerchantProcessorWorksDebitingAValidAmountWithAnInvalidCreditCardIsNotSuccesful! !

!methodRemoval: MerchantProcessorTests #test04WhileMerchantProcessorWorksDebitingAValidAmountWithAnInvalidCreditCardIsNotSuccesful stamp: 'CS 11/16/2020 17:52:56'!
test04WhileMerchantProcessorWorksDebitingAValidAmountWithAnInvalidCreditCardIsNotSuccesful!
!MerchantProcessorTests methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 17:53:19'!
test03WhileMerchantProcessorWorksDebitingAnInvalidAmountWithAValidCreditCardIsNotSuccesful! !

!methodRemoval: MerchantProcessorTests #test03WhileMerchantProcessorWorksDebitingAnInalidAmountWithAValidCreditCardIsNotSuccesful stamp: 'CS 11/16/2020 17:53:19'!
test03WhileMerchantProcessorWorksDebitingAnInalidAmountWithAValidCreditCardIsNotSuccesful!

Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: #TusLibros stamp: 'CS 11/16/2020 18:54:49'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: #TusLibros stamp: 'CS 11/16/2020 18:55:12'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'nil' stamp: 'CS 11/16/2020 18:58:38'!
test01NewCartHasNoProducts

	|newCart|
	
	newCart:= Cart new.
	
	self assert: newCart products isEmpty.
	
	! !

!testRun: #CartTest #test01NewCartHasNoProducts stamp: 'CS 11/16/2020 18:58:42'!
ERROR!

!testRun: #CartTest #test01NewCartHasNoProducts stamp: 'CS 11/16/2020 18:58:42'!
ERROR!
!Cart methodsFor: 'accessing' stamp: 'CS 11/16/2020 18:58:52'!
products
	self shouldBeImplemented.! !

!classDefinition: #Cart category: #TusLibros stamp: 'CS 11/16/2020 18:59:29'!
Object subclass: #Cart
	instanceVariableNames: 'products'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'accessing' stamp: 'CS 11/16/2020 18:59:28' prior: 50863841!
products
	
	^products.! !

!testRun: #CartTest #test01NewCartHasNoProducts stamp: 'CS 11/16/2020 18:59:35'!
ERROR!
!Cart methodsFor: 'accessing' stamp: 'CS 11/16/2020 19:01:07' overrides: 16896425!
initialize
	
	products:= OrderedCollection new.
	! !

!testRun: #CartTest #test01NewCartHasNoProducts stamp: 'CS 11/16/2020 19:01:14'!
PASSED!

!classDefinition: #Book category: #TusLibros stamp: 'CS 11/16/2020 19:04:56'!
Object subclass: #Book
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:04:46'!
test01ABookCanBeAddedToTheCart

	|newCart newBook| 
	
	newCart:= Cart new.
	
	newBook:= Book new.
	
	newCart add: newBook.
	
	
	self assert: newCart products size equals: 1.
	self assert: newCart products includes: newBook.
	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:05:06'!
test02ABookCanBeAddedToTheCart

	|newCart newBook| 
	
	newCart:= Cart new.
	
	newBook:= Book new.
	
	newCart add: newBook.
	
	
	self assert: newCart products size equals: 1.
	self assert: newCart products includes: newBook.
	
	! !

!methodRemoval: CartTest #test01ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:05:06'!
test01ABookCanBeAddedToTheCart

	|newCart newBook| 
	
	newCart:= Cart new.
	
	newBook:= Book new.
	
	newCart add: newBook.
	
	
	self assert: newCart products size equals: 1.
	self assert: newCart products includes: newBook.
	
	!

!testRun: #CartTest #test02ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:05:10'!
ERROR!

!testRun: #CartTest #test02ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:05:10'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:05:18'!
add: aBook 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:05:40' prior: 50863909!
add: aBook 
	
	products add: aBook.! !

!testRun: #CartTest #test02ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:05:43'!
PASSED!

!testRun: #CartTest #test02ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:05:46'!
PASSED!

!testRun: #CartTest #test01NewCartHasNoProducts stamp: 'CS 11/16/2020 19:05:51'!
PASSED!

!testRun: #CartTest #test02ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:05:51'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:09:07'!
test03ABookCanBeAddedToTheCartMoreThanOnceAtATime

	|newCart newBook| 
	
	newCart:= Cart new.
	
	newBook:= Book new.
	
	newCart add: newBook withQuantity: 2.
	
	
	self assert: newCart products size equals: 2.
	self assert: newCart products includes: newBook.
	
	! !

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:09:31'!
ERROR!

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:09:32'!
ERROR!

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:09:35'!
ERROR!

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:09:35'!
ERROR!

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:10:07'!
ERROR!

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:10:07'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:10:18'!
add: aBook withQuantity: aSmallInteger 
	self shouldBeImplemented.! !

----End fileIn of C:\Users\mdlcs\Downloads\OS\libros\windows64\Packages\TerseGuide.pck.st----!
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:16:58' prior: 50863962!
add: aBookToAdd withQuantity: aQuantity 
	
	aQuantity timesRepeat:[:aBook | products add: aBookToAdd].! !

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:16:59'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:17:33' prior: 50866903!
add: aBookToAdd withQuantity: aQuantity 
	
	aQuantity timesRepeat: [:aBook | products add: aBookToAdd].! !

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:17:34'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:18:02' prior: 50866913!
add: aBookToAdd withQuantity: aQuantity 
	
	aQuantity timesRepeat: [products add: aBookToAdd].! !
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:18:09' prior: 50866923!
add: aBook withQuantity: aQuantity 
	
	aQuantity timesRepeat: [products add: aBook].! !

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:18:13'!
PASSED!

!testRun: #CartTest #test01NewCartHasNoProducts stamp: 'CS 11/16/2020 19:18:20'!
PASSED!

!testRun: #CartTest #test02ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:18:20'!
PASSED!

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:18:20'!
PASSED!
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:19:13' prior: 50863914!
add: aBook 
	
	self add: aBook withQuantity: 1.! !

!testRun: #CartTest #test01NewCartHasNoProducts stamp: 'CS 11/16/2020 19:19:22'!
PASSED!

!testRun: #CartTest #test02ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:19:22'!
PASSED!

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:19:23'!
PASSED!

!classDefinition: #Cart category: #TusLibros stamp: 'CS 11/16/2020 19:19:59'!
Object subclass: #Cart
	instanceVariableNames: 'books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:19:59' prior: 50866929!
add: aBook withQuantity: aQuantity 
	
	aQuantity timesRepeat: [books add: aBook].! !
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:19:59' prior: 50863859 overrides: 16896425!
initialize
	
	books:= OrderedCollection new.
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:19:59' prior: 50863852!
products
	
	^books.! !
!Cart methodsFor: 'accessing' stamp: 'CS 11/16/2020 19:20:19'!
books
	
	^books.! !

!methodRemoval: Cart #products stamp: 'CS 11/16/2020 19:20:19'!
products
	
	^books.!
!CartTest methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:20:42' prior: 50863930!
test03ABookCanBeAddedToTheCartMoreThanOnceAtATime

	|newCart newBook| 
	
	newCart:= Cart new.
	
	newBook:= Book new.
	
	newCart add: newBook withQuantity: 2.
	
	
	self assert: newCart books size equals: 2.
	self assert: newCart books includes: newBook.
	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:20:54' prior: 50863883!
test02ABookCanBeAddedToTheCart

	|newCart newBook| 
	
	newCart:= Cart new.
	
	newBook:= Book new.
	
	newCart add: newBook.
	
	
	self assert: newCart books size equals: 1.
	self assert: newCart books includes: newBook.
	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:21:07'!
test01NewCartHasNoBooks

	|newCart|
	
	newCart:= Cart new.
	
	self assert: newCart books isEmpty.
	
	! !

!testRun: #CartTest #test01NewCartHasNoBooks stamp: 'CS 11/16/2020 19:21:09'!
PASSED!

!testRun: #CartTest #test01NewCartHasNoProducts stamp: 'CS 11/16/2020 19:21:09'!
ERROR!

!testRun: #CartTest #test02ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:21:09'!
PASSED!

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:21:09'!
PASSED!

!testRun: #CartTest #test01NewCartHasNoProducts stamp: 'CS 11/16/2020 19:21:09'!
ERROR!

!methodRemoval: CartTest #test01NewCartHasNoProducts stamp: 'CS 11/16/2020 19:21:24'!
test01NewCartHasNoProducts

	|newCart|
	
	newCart:= Cart new.
	
	self assert: newCart products isEmpty.
	
	!

!testRun: #CartTest #test01NewCartHasNoBooks stamp: 'CS 11/16/2020 19:21:27'!
PASSED!

!testRun: #CartTest #test02ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:21:27'!
PASSED!

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:21:27'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:24:09'!
test04ACartWithUnderThirtyMinutesLifetimeIsValid

	|newCart| 
	
	newCart:= Cart new.
	

	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:30:16' prior: 50867049!
test04ACartWithUnderThirtyMinutesLifetimeIsValid

	|newCart aLifetime| 
	
	newCart:= Cart new.
	
	aLifetime:=  Duration new.
	
	self assert: aLifetime totalMinutes 
	

	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:36:08'!
no_test04ACartWithUnderThirtyMinutesLifetimeIsValid

	|newCart aLifetime| 
	
	newCart:= Cart new.
	
	aLifetime:=  Duration new.
	
	self assert: aLifetime totalMinutes 
	

	! !

!methodRemoval: CartTest #test04ACartWithUnderThirtyMinutesLifetimeIsValid stamp: 'CS 11/16/2020 19:36:09'!
test04ACartWithUnderThirtyMinutesLifetimeIsValid

	|newCart aLifetime| 
	
	newCart:= Cart new.
	
	aLifetime:=  Duration new.
	
	self assert: aLifetime totalMinutes 
	

	!
!Cart methodsFor: 'accessing' stamp: 'CS 11/16/2020 19:38:50' prior: 50866984!
books
	
	^books copy.! !
!Cart methodsFor: 'accessing' stamp: 'CS 11/16/2020 19:38:58' prior: 50866976 overrides: 16896425!
initialize
	
	books:= Bag new.
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'CS 11/16/2020 19:40:56' prior: 50866969!
add: aBook withQuantity: aQuantity 

	books add: aBook withOccurrences: aQuantity.! !

!testRun: #CartTest #test01NewCartHasNoBooks stamp: 'CS 11/16/2020 19:42:18'!
PASSED!

!testRun: #CartTest #test02ABookCanBeAddedToTheCart stamp: 'CS 11/16/2020 19:42:18'!
PASSED!

!testRun: #CartTest #test03ABookCanBeAddedToTheCartMoreThanOnceAtATime stamp: 'CS 11/16/2020 19:42:18'!
PASSED!

----SNAPSHOT----(16 November 2020 19:54:47) CuisUniversity-4365.image priorSource: 17024812!

----QUIT----(16 November 2020 19:55:08) CuisUniversity-4365.image priorSource: 17134459!